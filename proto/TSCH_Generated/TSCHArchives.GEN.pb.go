// Code generated by protoc-gen-go.
// source: TSCHArchives.GEN.proto
// DO NOT EDIT!

/*
Package TSCH_Generated is a generated protocol buffer package.

It is generated from these files:
	TSCHArchives.GEN.proto

It has these top-level messages:
	ChartStyleArchive
	ChartNonStyleArchive
	LegendStyleArchive
	LegendNonStyleArchive
	ChartAxisStyleArchive
	ChartAxisNonStyleArchive
	ChartSeriesStyleArchive
	ChartSeriesNonStyleArchive
*/
package TSCH_Generated

import proto "github.com/golang/protobuf/proto"
import math "math"
import "github.com/orcastor/iwork-converter/proto/TSP"
import "github.com/orcastor/iwork-converter/proto/TSK"
import "github.com/orcastor/iwork-converter/proto/TSD"

// discarding unused import TSS "TSSArchives.pb"
import "github.com/orcastor/iwork-converter/proto/TSCH1"
import "github.com/orcastor/iwork-converter/proto/TSCH"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ChartStyleArchive struct {
	Tschchartinfodefault3Dchartopacity                 *float32                            `protobuf:"fixed32,1,opt,name=tschchartinfodefault3dchartopacity" json:"tschchartinfodefault3dchartopacity,omitempty"`
	Tschchartinfoarea3Dlightingpackage                 *TSCH.Chart3DLightingPackageArchive `protobuf:"bytes,2,opt,name=tschchartinfoarea3dlightingpackage" json:"tschchartinfoarea3dlightingpackage,omitempty"`
	Tschchartinfobar3Dlightingpackage                  *TSCH.Chart3DLightingPackageArchive `protobuf:"bytes,3,opt,name=tschchartinfobar3dlightingpackage" json:"tschchartinfobar3dlightingpackage,omitempty"`
	Tschchartinfocolumn3Dlightingpackage               *TSCH.Chart3DLightingPackageArchive `protobuf:"bytes,4,opt,name=tschchartinfocolumn3dlightingpackage" json:"tschchartinfocolumn3dlightingpackage,omitempty"`
	Tschchartinfodefault3Dlightingpackage              *TSCH.Chart3DLightingPackageArchive `protobuf:"bytes,5,opt,name=tschchartinfodefault3dlightingpackage" json:"tschchartinfodefault3dlightingpackage,omitempty"`
	Tschchartinfoline3Dlightingpackage                 *TSCH.Chart3DLightingPackageArchive `protobuf:"bytes,6,opt,name=tschchartinfoline3dlightingpackage" json:"tschchartinfoline3dlightingpackage,omitempty"`
	Tschchartinfopie3Dlightingpackage                  *TSCH.Chart3DLightingPackageArchive `protobuf:"bytes,7,opt,name=tschchartinfopie3dlightingpackage" json:"tschchartinfopie3dlightingpackage,omitempty"`
	Tschchartinfodefaultbackgroundfill                 *TSD.FillArchive                    `protobuf:"bytes,8,opt,name=tschchartinfodefaultbackgroundfill" json:"tschchartinfodefaultbackgroundfill,omitempty"`
	Tschchartinfodefaultbackgroundstroke               *TSD.StrokeArchive                  `protobuf:"bytes,9,opt,name=tschchartinfodefaultbackgroundstroke" json:"tschchartinfodefaultbackgroundstroke,omitempty"`
	Tschchartinfodefaultborderopacity                  *float32                            `protobuf:"fixed32,10,opt,name=tschchartinfodefaultborderopacity" json:"tschchartinfodefaultborderopacity,omitempty"`
	Tschchartinfodefaultbordershadow                   *TSD.ShadowArchive                  `protobuf:"bytes,11,opt,name=tschchartinfodefaultbordershadow" json:"tschchartinfodefaultbordershadow,omitempty"`
	Tschchartinfodefaultborderstroke                   *TSD.StrokeArchive                  `protobuf:"bytes,12,opt,name=tschchartinfodefaultborderstroke" json:"tschchartinfodefaultborderstroke,omitempty"`
	Tschchartinfodefaultcombinelayers                  *bool                               `protobuf:"varint,13,opt,name=tschchartinfodefaultcombinelayers" json:"tschchartinfodefaultcombinelayers,omitempty"`
	Tschchartinfodefaultgridbackgroundfill             *TSD.FillArchive                    `protobuf:"bytes,14,opt,name=tschchartinfodefaultgridbackgroundfill" json:"tschchartinfodefaultgridbackgroundfill,omitempty"`
	Tschchartinfodefaultgridbackgroundopacity          *float32                            `protobuf:"fixed32,15,opt,name=tschchartinfodefaultgridbackgroundopacity" json:"tschchartinfodefaultgridbackgroundopacity,omitempty"`
	Tschchartinfodefaultinterbargap                    *float32                            `protobuf:"fixed32,16,opt,name=tschchartinfodefaultinterbargap" json:"tschchartinfodefaultinterbargap,omitempty"`
	Tschchartinfodefaultintersetgap                    *float32                            `protobuf:"fixed32,17,opt,name=tschchartinfodefaultintersetgap" json:"tschchartinfodefaultintersetgap,omitempty"`
	Tschchartinfodefaultshowborder                     *bool                               `protobuf:"varint,18,opt,name=tschchartinfodefaultshowborder" json:"tschchartinfodefaultshowborder,omitempty"`
	Tschchartinfodefaulttitlecolor                     *TSP.Color                          `protobuf:"bytes,19,opt,name=tschchartinfodefaulttitlecolor" json:"tschchartinfodefaulttitlecolor,omitempty"`
	Tschchartinfodefaulttitleparagraphstyleindex       *int32                              `protobuf:"varint,20,opt,name=tschchartinfodefaulttitleparagraphstyleindex" json:"tschchartinfodefaulttitleparagraphstyleindex,omitempty"`
	Tschchartinfodefaultdatasetnameparagraphstyleindex *int32                              `protobuf:"varint,21,opt,name=tschchartinfodefaultdatasetnameparagraphstyleindex" json:"tschchartinfodefaultdatasetnameparagraphstyleindex,omitempty"`
	XXX_unrecognized                                   []byte                              `json:"-"`
}

func (m *ChartStyleArchive) Reset()         { *m = ChartStyleArchive{} }
func (m *ChartStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartStyleArchive) ProtoMessage()    {}

func (m *ChartStyleArchive) GetTschchartinfodefault3Dchartopacity() float32 {
	if m != nil && m.Tschchartinfodefault3Dchartopacity != nil {
		return *m.Tschchartinfodefault3Dchartopacity
	}
	return 0
}

func (m *ChartStyleArchive) GetTschchartinfoarea3Dlightingpackage() *TSCH.Chart3DLightingPackageArchive {
	if m != nil {
		return m.Tschchartinfoarea3Dlightingpackage
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfobar3Dlightingpackage() *TSCH.Chart3DLightingPackageArchive {
	if m != nil {
		return m.Tschchartinfobar3Dlightingpackage
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfocolumn3Dlightingpackage() *TSCH.Chart3DLightingPackageArchive {
	if m != nil {
		return m.Tschchartinfocolumn3Dlightingpackage
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfodefault3Dlightingpackage() *TSCH.Chart3DLightingPackageArchive {
	if m != nil {
		return m.Tschchartinfodefault3Dlightingpackage
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfoline3Dlightingpackage() *TSCH.Chart3DLightingPackageArchive {
	if m != nil {
		return m.Tschchartinfoline3Dlightingpackage
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfopie3Dlightingpackage() *TSCH.Chart3DLightingPackageArchive {
	if m != nil {
		return m.Tschchartinfopie3Dlightingpackage
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfodefaultbackgroundfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartinfodefaultbackgroundfill
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfodefaultbackgroundstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartinfodefaultbackgroundstroke
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfodefaultborderopacity() float32 {
	if m != nil && m.Tschchartinfodefaultborderopacity != nil {
		return *m.Tschchartinfodefaultborderopacity
	}
	return 0
}

func (m *ChartStyleArchive) GetTschchartinfodefaultbordershadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartinfodefaultbordershadow
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfodefaultborderstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartinfodefaultborderstroke
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfodefaultcombinelayers() bool {
	if m != nil && m.Tschchartinfodefaultcombinelayers != nil {
		return *m.Tschchartinfodefaultcombinelayers
	}
	return false
}

func (m *ChartStyleArchive) GetTschchartinfodefaultgridbackgroundfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartinfodefaultgridbackgroundfill
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfodefaultgridbackgroundopacity() float32 {
	if m != nil && m.Tschchartinfodefaultgridbackgroundopacity != nil {
		return *m.Tschchartinfodefaultgridbackgroundopacity
	}
	return 0
}

func (m *ChartStyleArchive) GetTschchartinfodefaultinterbargap() float32 {
	if m != nil && m.Tschchartinfodefaultinterbargap != nil {
		return *m.Tschchartinfodefaultinterbargap
	}
	return 0
}

func (m *ChartStyleArchive) GetTschchartinfodefaultintersetgap() float32 {
	if m != nil && m.Tschchartinfodefaultintersetgap != nil {
		return *m.Tschchartinfodefaultintersetgap
	}
	return 0
}

func (m *ChartStyleArchive) GetTschchartinfodefaultshowborder() bool {
	if m != nil && m.Tschchartinfodefaultshowborder != nil {
		return *m.Tschchartinfodefaultshowborder
	}
	return false
}

func (m *ChartStyleArchive) GetTschchartinfodefaulttitlecolor() *TSP.Color {
	if m != nil {
		return m.Tschchartinfodefaulttitlecolor
	}
	return nil
}

func (m *ChartStyleArchive) GetTschchartinfodefaulttitleparagraphstyleindex() int32 {
	if m != nil && m.Tschchartinfodefaulttitleparagraphstyleindex != nil {
		return *m.Tschchartinfodefaulttitleparagraphstyleindex
	}
	return 0
}

func (m *ChartStyleArchive) GetTschchartinfodefaultdatasetnameparagraphstyleindex() int32 {
	if m != nil && m.Tschchartinfodefaultdatasetnameparagraphstyleindex != nil {
		return *m.Tschchartinfodefaultdatasetnameparagraphstyleindex
	}
	return 0
}

var E_ChartStyleArchive_Current = &proto.ExtensionDesc{
	ExtendedType:  (*TSCH1.ChartStyleArchive)(nil),
	ExtensionType: (*ChartStyleArchive)(nil),
	Field:         10000,
	Name:          "TSCH.Generated.ChartStyleArchive.current",
	Tag:           "bytes,10000,opt,name=current",
}

type ChartNonStyleArchive struct {
	Tschchartinfodefault3Dbarshape           *int32                     `protobuf:"varint,1,opt,name=tschchartinfodefault3dbarshape" json:"tschchartinfodefault3dbarshape,omitempty"`
	Tschchartinfodefault3Dbeveledges         *bool                      `protobuf:"varint,2,opt,name=tschchartinfodefault3dbeveledges" json:"tschchartinfodefault3dbeveledges,omitempty"`
	Tschchartinfodefault3Dintersetdepthgap   *float32                   `protobuf:"fixed32,3,opt,name=tschchartinfodefault3dintersetdepthgap" json:"tschchartinfodefault3dintersetdepthgap,omitempty"`
	Tschchartinfodefault3Drotation           *TSCH.Chart3DVectorArchive `protobuf:"bytes,4,opt,name=tschchartinfodefault3drotation" json:"tschchartinfodefault3drotation,omitempty"`
	Tschchartinfoarea3Dscale                 *TSCH.Chart3DVectorArchive `protobuf:"bytes,5,opt,name=tschchartinfoarea3dscale" json:"tschchartinfoarea3dscale,omitempty"`
	Tschchartinfobar3Dscale                  *TSCH.Chart3DVectorArchive `protobuf:"bytes,6,opt,name=tschchartinfobar3dscale" json:"tschchartinfobar3dscale,omitempty"`
	Tschchartinfocolumn3Dscale               *TSCH.Chart3DVectorArchive `protobuf:"bytes,7,opt,name=tschchartinfocolumn3dscale" json:"tschchartinfocolumn3dscale,omitempty"`
	Tschchartinfodefault3Dscale              *TSCH.Chart3DVectorArchive `protobuf:"bytes,8,opt,name=tschchartinfodefault3dscale" json:"tschchartinfodefault3dscale,omitempty"`
	Tschchartinfoline3Dscale                 *TSCH.Chart3DVectorArchive `protobuf:"bytes,9,opt,name=tschchartinfoline3dscale" json:"tschchartinfoline3dscale,omitempty"`
	Tschchartinfopie3Dscale                  *TSCH.Chart3DVectorArchive `protobuf:"bytes,10,opt,name=tschchartinfopie3dscale" json:"tschchartinfopie3dscale,omitempty"`
	Tschchartinfodefault3Dviewport           *TSCH.Chart3DVectorArchive `protobuf:"bytes,11,opt,name=tschchartinfodefault3dviewport" json:"tschchartinfodefault3dviewport,omitempty"`
	Tschchartinfodefaultpiestartangle        *float32                   `protobuf:"fixed32,19,opt,name=tschchartinfodefaultpiestartangle" json:"tschchartinfodefaultpiestartangle,omitempty"`
	Tschchartinfodefaultshowlegend           *bool                      `protobuf:"varint,20,opt,name=tschchartinfodefaultshowlegend" json:"tschchartinfodefaultshowlegend,omitempty"`
	Tschchartinfodefaultshowtitle            *bool                      `protobuf:"varint,21,opt,name=tschchartinfodefaultshowtitle" json:"tschchartinfodefaultshowtitle,omitempty"`
	Tschchartinfodefaultskiphiddendata       *bool                      `protobuf:"varint,22,opt,name=tschchartinfodefaultskiphiddendata" json:"tschchartinfodefaultskiphiddendata,omitempty"`
	Tschchartinfodefaulttitle                *string                    `protobuf:"bytes,23,opt,name=tschchartinfodefaulttitle" json:"tschchartinfodefaulttitle,omitempty"`
	Tschchartinfodefaultdatasetnamelocation  *int32                     `protobuf:"varint,24,opt,name=tschchartinfodefaultdatasetnamelocation" json:"tschchartinfodefaultdatasetnamelocation,omitempty"`
	Tschchartinfodefaultmultidatacontroltype *int32                     `protobuf:"varint,25,opt,name=tschchartinfodefaultmultidatacontroltype" json:"tschchartinfodefaultmultidatacontroltype,omitempty"`
	XXX_unrecognized                         []byte                     `json:"-"`
}

func (m *ChartNonStyleArchive) Reset()         { *m = ChartNonStyleArchive{} }
func (m *ChartNonStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartNonStyleArchive) ProtoMessage()    {}

func (m *ChartNonStyleArchive) GetTschchartinfodefault3Dbarshape() int32 {
	if m != nil && m.Tschchartinfodefault3Dbarshape != nil {
		return *m.Tschchartinfodefault3Dbarshape
	}
	return 0
}

func (m *ChartNonStyleArchive) GetTschchartinfodefault3Dbeveledges() bool {
	if m != nil && m.Tschchartinfodefault3Dbeveledges != nil {
		return *m.Tschchartinfodefault3Dbeveledges
	}
	return false
}

func (m *ChartNonStyleArchive) GetTschchartinfodefault3Dintersetdepthgap() float32 {
	if m != nil && m.Tschchartinfodefault3Dintersetdepthgap != nil {
		return *m.Tschchartinfodefault3Dintersetdepthgap
	}
	return 0
}

func (m *ChartNonStyleArchive) GetTschchartinfodefault3Drotation() *TSCH.Chart3DVectorArchive {
	if m != nil {
		return m.Tschchartinfodefault3Drotation
	}
	return nil
}

func (m *ChartNonStyleArchive) GetTschchartinfoarea3Dscale() *TSCH.Chart3DVectorArchive {
	if m != nil {
		return m.Tschchartinfoarea3Dscale
	}
	return nil
}

func (m *ChartNonStyleArchive) GetTschchartinfobar3Dscale() *TSCH.Chart3DVectorArchive {
	if m != nil {
		return m.Tschchartinfobar3Dscale
	}
	return nil
}

func (m *ChartNonStyleArchive) GetTschchartinfocolumn3Dscale() *TSCH.Chart3DVectorArchive {
	if m != nil {
		return m.Tschchartinfocolumn3Dscale
	}
	return nil
}

func (m *ChartNonStyleArchive) GetTschchartinfodefault3Dscale() *TSCH.Chart3DVectorArchive {
	if m != nil {
		return m.Tschchartinfodefault3Dscale
	}
	return nil
}

func (m *ChartNonStyleArchive) GetTschchartinfoline3Dscale() *TSCH.Chart3DVectorArchive {
	if m != nil {
		return m.Tschchartinfoline3Dscale
	}
	return nil
}

func (m *ChartNonStyleArchive) GetTschchartinfopie3Dscale() *TSCH.Chart3DVectorArchive {
	if m != nil {
		return m.Tschchartinfopie3Dscale
	}
	return nil
}

func (m *ChartNonStyleArchive) GetTschchartinfodefault3Dviewport() *TSCH.Chart3DVectorArchive {
	if m != nil {
		return m.Tschchartinfodefault3Dviewport
	}
	return nil
}

func (m *ChartNonStyleArchive) GetTschchartinfodefaultpiestartangle() float32 {
	if m != nil && m.Tschchartinfodefaultpiestartangle != nil {
		return *m.Tschchartinfodefaultpiestartangle
	}
	return 0
}

func (m *ChartNonStyleArchive) GetTschchartinfodefaultshowlegend() bool {
	if m != nil && m.Tschchartinfodefaultshowlegend != nil {
		return *m.Tschchartinfodefaultshowlegend
	}
	return false
}

func (m *ChartNonStyleArchive) GetTschchartinfodefaultshowtitle() bool {
	if m != nil && m.Tschchartinfodefaultshowtitle != nil {
		return *m.Tschchartinfodefaultshowtitle
	}
	return false
}

func (m *ChartNonStyleArchive) GetTschchartinfodefaultskiphiddendata() bool {
	if m != nil && m.Tschchartinfodefaultskiphiddendata != nil {
		return *m.Tschchartinfodefaultskiphiddendata
	}
	return false
}

func (m *ChartNonStyleArchive) GetTschchartinfodefaulttitle() string {
	if m != nil && m.Tschchartinfodefaulttitle != nil {
		return *m.Tschchartinfodefaulttitle
	}
	return ""
}

func (m *ChartNonStyleArchive) GetTschchartinfodefaultdatasetnamelocation() int32 {
	if m != nil && m.Tschchartinfodefaultdatasetnamelocation != nil {
		return *m.Tschchartinfodefaultdatasetnamelocation
	}
	return 0
}

func (m *ChartNonStyleArchive) GetTschchartinfodefaultmultidatacontroltype() int32 {
	if m != nil && m.Tschchartinfodefaultmultidatacontroltype != nil {
		return *m.Tschchartinfodefaultmultidatacontroltype
	}
	return 0
}

var E_ChartNonStyleArchive_Current = &proto.ExtensionDesc{
	ExtendedType:  (*TSCH1.ChartNonStyleArchive)(nil),
	ExtensionType: (*ChartNonStyleArchive)(nil),
	Field:         10000,
	Name:          "TSCH.Generated.ChartNonStyleArchive.current",
	Tag:           "bytes,10000,opt,name=current",
}

type LegendStyleArchive struct {
	Tschlegendmodeldefaultfill                     *TSD.FillArchive   `protobuf:"bytes,1,opt,name=tschlegendmodeldefaultfill" json:"tschlegendmodeldefaultfill,omitempty"`
	Tschlegendmodeldefaultlabelparagraphstyleindex *int32             `protobuf:"varint,2,opt,name=tschlegendmodeldefaultlabelparagraphstyleindex" json:"tschlegendmodeldefaultlabelparagraphstyleindex,omitempty"`
	Tschlegendmodeldefaultopacity                  *float32           `protobuf:"fixed32,3,opt,name=tschlegendmodeldefaultopacity" json:"tschlegendmodeldefaultopacity,omitempty"`
	Tschlegendmodeldefaultshadow                   *TSD.ShadowArchive `protobuf:"bytes,4,opt,name=tschlegendmodeldefaultshadow" json:"tschlegendmodeldefaultshadow,omitempty"`
	Tschlegendmodeldefaultstroke                   *TSD.StrokeArchive `protobuf:"bytes,5,opt,name=tschlegendmodeldefaultstroke" json:"tschlegendmodeldefaultstroke,omitempty"`
	XXX_unrecognized                               []byte             `json:"-"`
}

func (m *LegendStyleArchive) Reset()         { *m = LegendStyleArchive{} }
func (m *LegendStyleArchive) String() string { return proto.CompactTextString(m) }
func (*LegendStyleArchive) ProtoMessage()    {}

func (m *LegendStyleArchive) GetTschlegendmodeldefaultfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschlegendmodeldefaultfill
	}
	return nil
}

func (m *LegendStyleArchive) GetTschlegendmodeldefaultlabelparagraphstyleindex() int32 {
	if m != nil && m.Tschlegendmodeldefaultlabelparagraphstyleindex != nil {
		return *m.Tschlegendmodeldefaultlabelparagraphstyleindex
	}
	return 0
}

func (m *LegendStyleArchive) GetTschlegendmodeldefaultopacity() float32 {
	if m != nil && m.Tschlegendmodeldefaultopacity != nil {
		return *m.Tschlegendmodeldefaultopacity
	}
	return 0
}

func (m *LegendStyleArchive) GetTschlegendmodeldefaultshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschlegendmodeldefaultshadow
	}
	return nil
}

func (m *LegendStyleArchive) GetTschlegendmodeldefaultstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschlegendmodeldefaultstroke
	}
	return nil
}

var E_LegendStyleArchive_Current = &proto.ExtensionDesc{
	ExtendedType:  (*TSCH1.LegendStyleArchive)(nil),
	ExtensionType: (*LegendStyleArchive)(nil),
	Field:         10000,
	Name:          "TSCH.Generated.LegendStyleArchive.current",
	Tag:           "bytes,10000,opt,name=current",
}

type LegendNonStyleArchive struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LegendNonStyleArchive) Reset()         { *m = LegendNonStyleArchive{} }
func (m *LegendNonStyleArchive) String() string { return proto.CompactTextString(m) }
func (*LegendNonStyleArchive) ProtoMessage()    {}

var E_LegendNonStyleArchive_Current = &proto.ExtensionDesc{
	ExtendedType:  (*TSCH1.LegendNonStyleArchive)(nil),
	ExtensionType: (*LegendNonStyleArchive)(nil),
	Field:         10000,
	Name:          "TSCH.Generated.LegendNonStyleArchive.current",
	Tag:           "bytes,10000,opt,name=current",
}

type ChartAxisStyleArchive struct {
	Tschchartaxiscategory3Dgridlineopacity        *float32           `protobuf:"fixed32,1,opt,name=tschchartaxiscategory3dgridlineopacity" json:"tschchartaxiscategory3dgridlineopacity,omitempty"`
	Tschchartaxisvalue3Dgridlineopacity           *float32           `protobuf:"fixed32,2,opt,name=tschchartaxisvalue3dgridlineopacity" json:"tschchartaxisvalue3dgridlineopacity,omitempty"`
	Tschchartaxiscategory3Dgridlinestroke         *TSD.StrokeArchive `protobuf:"bytes,3,opt,name=tschchartaxiscategory3dgridlinestroke" json:"tschchartaxiscategory3dgridlinestroke,omitempty"`
	Tschchartaxisvalue3Dgridlinestroke            *TSD.StrokeArchive `protobuf:"bytes,4,opt,name=tschchartaxisvalue3dgridlinestroke" json:"tschchartaxisvalue3dgridlinestroke,omitempty"`
	Tschchartaxiscategoryhorizontalspacing        *int32             `protobuf:"varint,5,opt,name=tschchartaxiscategoryhorizontalspacing" json:"tschchartaxiscategoryhorizontalspacing,omitempty"`
	Tschchartaxiscategorylabelparagraphstyleindex *int32             `protobuf:"varint,6,opt,name=tschchartaxiscategorylabelparagraphstyleindex" json:"tschchartaxiscategorylabelparagraphstyleindex,omitempty"`
	Tschchartaxisdefaultlabelparagraphstyleindex  *int32             `protobuf:"varint,7,opt,name=tschchartaxisdefaultlabelparagraphstyleindex" json:"tschchartaxisdefaultlabelparagraphstyleindex,omitempty"`
	Tschchartaxisvaluelabelparagraphstyleindex    *int32             `protobuf:"varint,8,opt,name=tschchartaxisvaluelabelparagraphstyleindex" json:"tschchartaxisvaluelabelparagraphstyleindex,omitempty"`
	Tschchartaxiscategorylabelsorientation        *float32           `protobuf:"fixed32,9,opt,name=tschchartaxiscategorylabelsorientation" json:"tschchartaxiscategorylabelsorientation,omitempty"`
	Tschchartaxisdefaultlabelsorientation         *float32           `protobuf:"fixed32,10,opt,name=tschchartaxisdefaultlabelsorientation" json:"tschchartaxisdefaultlabelsorientation,omitempty"`
	Tschchartaxisvaluelabelsorientation           *float32           `protobuf:"fixed32,11,opt,name=tschchartaxisvaluelabelsorientation" json:"tschchartaxisvaluelabelsorientation,omitempty"`
	Tschchartaxiscategorymajorgridlineopacity     *float32           `protobuf:"fixed32,12,opt,name=tschchartaxiscategorymajorgridlineopacity" json:"tschchartaxiscategorymajorgridlineopacity,omitempty"`
	Tschchartaxisvaluemajorgridlineopacity        *float32           `protobuf:"fixed32,13,opt,name=tschchartaxisvaluemajorgridlineopacity" json:"tschchartaxisvaluemajorgridlineopacity,omitempty"`
	Tschchartaxiscategorymajorgridlineshadow      *TSD.ShadowArchive `protobuf:"bytes,14,opt,name=tschchartaxiscategorymajorgridlineshadow" json:"tschchartaxiscategorymajorgridlineshadow,omitempty"`
	Tschchartaxisvaluemajorgridlineshadow         *TSD.ShadowArchive `protobuf:"bytes,15,opt,name=tschchartaxisvaluemajorgridlineshadow" json:"tschchartaxisvaluemajorgridlineshadow,omitempty"`
	Tschchartaxiscategorymajorgridlinestroke      *TSD.StrokeArchive `protobuf:"bytes,16,opt,name=tschchartaxiscategorymajorgridlinestroke" json:"tschchartaxiscategorymajorgridlinestroke,omitempty"`
	Tschchartaxisvaluemajorgridlinestroke         *TSD.StrokeArchive `protobuf:"bytes,17,opt,name=tschchartaxisvaluemajorgridlinestroke" json:"tschchartaxisvaluemajorgridlinestroke,omitempty"`
	Tschchartaxiscategoryminorgridlineopacity     *float32           `protobuf:"fixed32,18,opt,name=tschchartaxiscategoryminorgridlineopacity" json:"tschchartaxiscategoryminorgridlineopacity,omitempty"`
	Tschchartaxisvalueminorgridlineopacity        *float32           `protobuf:"fixed32,19,opt,name=tschchartaxisvalueminorgridlineopacity" json:"tschchartaxisvalueminorgridlineopacity,omitempty"`
	Tschchartaxiscategoryminorgridlineshadow      *TSD.ShadowArchive `protobuf:"bytes,20,opt,name=tschchartaxiscategoryminorgridlineshadow" json:"tschchartaxiscategoryminorgridlineshadow,omitempty"`
	Tschchartaxisvalueminorgridlineshadow         *TSD.ShadowArchive `protobuf:"bytes,21,opt,name=tschchartaxisvalueminorgridlineshadow" json:"tschchartaxisvalueminorgridlineshadow,omitempty"`
	Tschchartaxiscategoryminorgridlinestroke      *TSD.StrokeArchive `protobuf:"bytes,22,opt,name=tschchartaxiscategoryminorgridlinestroke" json:"tschchartaxiscategoryminorgridlinestroke,omitempty"`
	Tschchartaxisvalueminorgridlinestroke         *TSD.StrokeArchive `protobuf:"bytes,23,opt,name=tschchartaxisvalueminorgridlinestroke" json:"tschchartaxisvalueminorgridlinestroke,omitempty"`
	Tschchartaxiscategoryshowaxis                 *bool              `protobuf:"varint,24,opt,name=tschchartaxiscategoryshowaxis" json:"tschchartaxiscategoryshowaxis,omitempty"`
	Tschchartaxisvalueshowaxis                    *bool              `protobuf:"varint,25,opt,name=tschchartaxisvalueshowaxis" json:"tschchartaxisvalueshowaxis,omitempty"`
	Tschchartaxiscategoryshowlastlabel            *bool              `protobuf:"varint,26,opt,name=tschchartaxiscategoryshowlastlabel" json:"tschchartaxiscategoryshowlastlabel,omitempty"`
	Tschchartaxiscategoryshowmajorgridlines       *bool              `protobuf:"varint,27,opt,name=tschchartaxiscategoryshowmajorgridlines" json:"tschchartaxiscategoryshowmajorgridlines,omitempty"`
	Tschchartaxisvalueshowmajorgridlines          *bool              `protobuf:"varint,28,opt,name=tschchartaxisvalueshowmajorgridlines" json:"tschchartaxisvalueshowmajorgridlines,omitempty"`
	Tschchartaxiscategoryshowmajortickmarks       *bool              `protobuf:"varint,29,opt,name=tschchartaxiscategoryshowmajortickmarks" json:"tschchartaxiscategoryshowmajortickmarks,omitempty"`
	Tschchartaxisvalueshowmajortickmarks          *bool              `protobuf:"varint,30,opt,name=tschchartaxisvalueshowmajortickmarks" json:"tschchartaxisvalueshowmajortickmarks,omitempty"`
	Tschchartaxisvalueshowminimumlabel            *bool              `protobuf:"varint,31,opt,name=tschchartaxisvalueshowminimumlabel" json:"tschchartaxisvalueshowminimumlabel,omitempty"`
	Tschchartaxiscategoryshowminorgridlines       *bool              `protobuf:"varint,32,opt,name=tschchartaxiscategoryshowminorgridlines" json:"tschchartaxiscategoryshowminorgridlines,omitempty"`
	Tschchartaxisvalueshowminorgridlines          *bool              `protobuf:"varint,33,opt,name=tschchartaxisvalueshowminorgridlines" json:"tschchartaxisvalueshowminorgridlines,omitempty"`
	Tschchartaxiscategoryshowminortickmarks       *bool              `protobuf:"varint,34,opt,name=tschchartaxiscategoryshowminortickmarks" json:"tschchartaxiscategoryshowminortickmarks,omitempty"`
	Tschchartaxisvalueshowminortickmarks          *bool              `protobuf:"varint,35,opt,name=tschchartaxisvalueshowminortickmarks" json:"tschchartaxisvalueshowminortickmarks,omitempty"`
	Tschchartaxiscategorytickmarklocation         *int32             `protobuf:"varint,36,opt,name=tschchartaxiscategorytickmarklocation" json:"tschchartaxiscategorytickmarklocation,omitempty"`
	Tschchartaxisvaluetickmarklocation            *int32             `protobuf:"varint,37,opt,name=tschchartaxisvaluetickmarklocation" json:"tschchartaxisvaluetickmarklocation,omitempty"`
	Tschchartaxiscategorytitleparagraphstyleindex *int32             `protobuf:"varint,38,opt,name=tschchartaxiscategorytitleparagraphstyleindex" json:"tschchartaxiscategorytitleparagraphstyleindex,omitempty"`
	Tschchartaxisdefaulttitleparagraphstyleindex  *int32             `protobuf:"varint,39,opt,name=tschchartaxisdefaulttitleparagraphstyleindex" json:"tschchartaxisdefaulttitleparagraphstyleindex,omitempty"`
	Tschchartaxisvaluetitleparagraphstyleindex    *int32             `protobuf:"varint,40,opt,name=tschchartaxisvaluetitleparagraphstyleindex" json:"tschchartaxisvaluetitleparagraphstyleindex,omitempty"`
	Tschchartaxiscategoryverticalspacing          *int32             `protobuf:"varint,41,opt,name=tschchartaxiscategoryverticalspacing" json:"tschchartaxiscategoryverticalspacing,omitempty"`
	XXX_unrecognized                              []byte             `json:"-"`
}

func (m *ChartAxisStyleArchive) Reset()         { *m = ChartAxisStyleArchive{} }
func (m *ChartAxisStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartAxisStyleArchive) ProtoMessage()    {}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategory3Dgridlineopacity() float32 {
	if m != nil && m.Tschchartaxiscategory3Dgridlineopacity != nil {
		return *m.Tschchartaxiscategory3Dgridlineopacity
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalue3Dgridlineopacity() float32 {
	if m != nil && m.Tschchartaxisvalue3Dgridlineopacity != nil {
		return *m.Tschchartaxisvalue3Dgridlineopacity
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategory3Dgridlinestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartaxiscategory3Dgridlinestroke
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalue3Dgridlinestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartaxisvalue3Dgridlinestroke
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryhorizontalspacing() int32 {
	if m != nil && m.Tschchartaxiscategoryhorizontalspacing != nil {
		return *m.Tschchartaxiscategoryhorizontalspacing
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategorylabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartaxiscategorylabelparagraphstyleindex != nil {
		return *m.Tschchartaxiscategorylabelparagraphstyleindex
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisdefaultlabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartaxisdefaultlabelparagraphstyleindex != nil {
		return *m.Tschchartaxisdefaultlabelparagraphstyleindex
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvaluelabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartaxisvaluelabelparagraphstyleindex != nil {
		return *m.Tschchartaxisvaluelabelparagraphstyleindex
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategorylabelsorientation() float32 {
	if m != nil && m.Tschchartaxiscategorylabelsorientation != nil {
		return *m.Tschchartaxiscategorylabelsorientation
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisdefaultlabelsorientation() float32 {
	if m != nil && m.Tschchartaxisdefaultlabelsorientation != nil {
		return *m.Tschchartaxisdefaultlabelsorientation
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvaluelabelsorientation() float32 {
	if m != nil && m.Tschchartaxisvaluelabelsorientation != nil {
		return *m.Tschchartaxisvaluelabelsorientation
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategorymajorgridlineopacity() float32 {
	if m != nil && m.Tschchartaxiscategorymajorgridlineopacity != nil {
		return *m.Tschchartaxiscategorymajorgridlineopacity
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvaluemajorgridlineopacity() float32 {
	if m != nil && m.Tschchartaxisvaluemajorgridlineopacity != nil {
		return *m.Tschchartaxisvaluemajorgridlineopacity
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategorymajorgridlineshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartaxiscategorymajorgridlineshadow
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvaluemajorgridlineshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartaxisvaluemajorgridlineshadow
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategorymajorgridlinestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartaxiscategorymajorgridlinestroke
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvaluemajorgridlinestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartaxisvaluemajorgridlinestroke
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryminorgridlineopacity() float32 {
	if m != nil && m.Tschchartaxiscategoryminorgridlineopacity != nil {
		return *m.Tschchartaxiscategoryminorgridlineopacity
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalueminorgridlineopacity() float32 {
	if m != nil && m.Tschchartaxisvalueminorgridlineopacity != nil {
		return *m.Tschchartaxisvalueminorgridlineopacity
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryminorgridlineshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartaxiscategoryminorgridlineshadow
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalueminorgridlineshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartaxisvalueminorgridlineshadow
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryminorgridlinestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartaxiscategoryminorgridlinestroke
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalueminorgridlinestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartaxisvalueminorgridlinestroke
	}
	return nil
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryshowaxis() bool {
	if m != nil && m.Tschchartaxiscategoryshowaxis != nil {
		return *m.Tschchartaxiscategoryshowaxis
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalueshowaxis() bool {
	if m != nil && m.Tschchartaxisvalueshowaxis != nil {
		return *m.Tschchartaxisvalueshowaxis
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryshowlastlabel() bool {
	if m != nil && m.Tschchartaxiscategoryshowlastlabel != nil {
		return *m.Tschchartaxiscategoryshowlastlabel
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryshowmajorgridlines() bool {
	if m != nil && m.Tschchartaxiscategoryshowmajorgridlines != nil {
		return *m.Tschchartaxiscategoryshowmajorgridlines
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalueshowmajorgridlines() bool {
	if m != nil && m.Tschchartaxisvalueshowmajorgridlines != nil {
		return *m.Tschchartaxisvalueshowmajorgridlines
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryshowmajortickmarks() bool {
	if m != nil && m.Tschchartaxiscategoryshowmajortickmarks != nil {
		return *m.Tschchartaxiscategoryshowmajortickmarks
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalueshowmajortickmarks() bool {
	if m != nil && m.Tschchartaxisvalueshowmajortickmarks != nil {
		return *m.Tschchartaxisvalueshowmajortickmarks
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalueshowminimumlabel() bool {
	if m != nil && m.Tschchartaxisvalueshowminimumlabel != nil {
		return *m.Tschchartaxisvalueshowminimumlabel
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryshowminorgridlines() bool {
	if m != nil && m.Tschchartaxiscategoryshowminorgridlines != nil {
		return *m.Tschchartaxiscategoryshowminorgridlines
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalueshowminorgridlines() bool {
	if m != nil && m.Tschchartaxisvalueshowminorgridlines != nil {
		return *m.Tschchartaxisvalueshowminorgridlines
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryshowminortickmarks() bool {
	if m != nil && m.Tschchartaxiscategoryshowminortickmarks != nil {
		return *m.Tschchartaxiscategoryshowminortickmarks
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvalueshowminortickmarks() bool {
	if m != nil && m.Tschchartaxisvalueshowminortickmarks != nil {
		return *m.Tschchartaxisvalueshowminortickmarks
	}
	return false
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategorytickmarklocation() int32 {
	if m != nil && m.Tschchartaxiscategorytickmarklocation != nil {
		return *m.Tschchartaxiscategorytickmarklocation
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvaluetickmarklocation() int32 {
	if m != nil && m.Tschchartaxisvaluetickmarklocation != nil {
		return *m.Tschchartaxisvaluetickmarklocation
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategorytitleparagraphstyleindex() int32 {
	if m != nil && m.Tschchartaxiscategorytitleparagraphstyleindex != nil {
		return *m.Tschchartaxiscategorytitleparagraphstyleindex
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisdefaulttitleparagraphstyleindex() int32 {
	if m != nil && m.Tschchartaxisdefaulttitleparagraphstyleindex != nil {
		return *m.Tschchartaxisdefaulttitleparagraphstyleindex
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxisvaluetitleparagraphstyleindex() int32 {
	if m != nil && m.Tschchartaxisvaluetitleparagraphstyleindex != nil {
		return *m.Tschchartaxisvaluetitleparagraphstyleindex
	}
	return 0
}

func (m *ChartAxisStyleArchive) GetTschchartaxiscategoryverticalspacing() int32 {
	if m != nil && m.Tschchartaxiscategoryverticalspacing != nil {
		return *m.Tschchartaxiscategoryverticalspacing
	}
	return 0
}

var E_ChartAxisStyleArchive_Current = &proto.ExtensionDesc{
	ExtendedType:  (*TSCH1.ChartAxisStyleArchive)(nil),
	ExtensionType: (*ChartAxisStyleArchive)(nil),
	Field:         10000,
	Name:          "TSCH.Generated.ChartAxisStyleArchive.current",
	Tag:           "bytes,10000,opt,name=current",
}

type ChartAxisNonStyleArchive struct {
	Tschchartaxisdefault3Dlabelposition      *int32                             `protobuf:"varint,1,opt,name=tschchartaxisdefault3dlabelposition" json:"tschchartaxisdefault3dlabelposition,omitempty"`
	Tschchartaxisdefaultnumberformat         *TSK.FormatStructArchive           `protobuf:"bytes,2,opt,name=tschchartaxisdefaultnumberformat" json:"tschchartaxisdefaultnumberformat,omitempty"`
	Tschchartaxisdefaultnumberformattype     *int32                             `protobuf:"varint,3,opt,name=tschchartaxisdefaultnumberformattype" json:"tschchartaxisdefaultnumberformattype,omitempty"`
	Tschchartaxisvaluenumberofdecades        *int32                             `protobuf:"varint,4,opt,name=tschchartaxisvaluenumberofdecades" json:"tschchartaxisvaluenumberofdecades,omitempty"`
	Tschchartaxisvaluenumberofmajorgridlines *int32                             `protobuf:"varint,5,opt,name=tschchartaxisvaluenumberofmajorgridlines" json:"tschchartaxisvaluenumberofmajorgridlines,omitempty"`
	Tschchartaxisvaluenumberofminorgridlines *int32                             `protobuf:"varint,6,opt,name=tschchartaxisvaluenumberofminorgridlines" json:"tschchartaxisvaluenumberofminorgridlines,omitempty"`
	Tschchartaxiscategoryplottoedges         *bool                              `protobuf:"varint,7,opt,name=tschchartaxiscategoryplottoedges" json:"tschchartaxiscategoryplottoedges,omitempty"`
	Tschchartaxisvaluescale                  *int32                             `protobuf:"varint,8,opt,name=tschchartaxisvaluescale" json:"tschchartaxisvaluescale,omitempty"`
	Tschchartaxiscategoryshowlabels          *bool                              `protobuf:"varint,9,opt,name=tschchartaxiscategoryshowlabels" json:"tschchartaxiscategoryshowlabels,omitempty"`
	Tschchartaxisdefaultshowlabels           *bool                              `protobuf:"varint,10,opt,name=tschchartaxisdefaultshowlabels" json:"tschchartaxisdefaultshowlabels,omitempty"`
	Tschchartaxisvalueshowlabels             *bool                              `protobuf:"varint,11,opt,name=tschchartaxisvalueshowlabels" json:"tschchartaxisvalueshowlabels,omitempty"`
	Tschchartaxiscategoryshowserieslabels    *bool                              `protobuf:"varint,12,opt,name=tschchartaxiscategoryshowserieslabels" json:"tschchartaxiscategoryshowserieslabels,omitempty"`
	Tschchartaxismultidatashowserieslabels   *bool                              `protobuf:"varint,19,opt,name=tschchartaxismultidatashowserieslabels" json:"tschchartaxismultidatashowserieslabels,omitempty"`
	Tschchartaxiscategoryshowtitle           *bool                              `protobuf:"varint,13,opt,name=tschchartaxiscategoryshowtitle" json:"tschchartaxiscategoryshowtitle,omitempty"`
	Tschchartaxisvalueshowtitle              *bool                              `protobuf:"varint,14,opt,name=tschchartaxisvalueshowtitle" json:"tschchartaxisvalueshowtitle,omitempty"`
	Tschchartaxiscategorytitle               *string                            `protobuf:"bytes,15,opt,name=tschchartaxiscategorytitle" json:"tschchartaxiscategorytitle,omitempty"`
	Tschchartaxisvaluetitle                  *string                            `protobuf:"bytes,16,opt,name=tschchartaxisvaluetitle" json:"tschchartaxisvaluetitle,omitempty"`
	Tschchartaxisdefaultusermax              *TSCH1.ChartsNSNumberDoubleArchive `protobuf:"bytes,17,opt,name=tschchartaxisdefaultusermax" json:"tschchartaxisdefaultusermax,omitempty"`
	Tschchartaxisdefaultusermin              *TSCH1.ChartsNSNumberDoubleArchive `protobuf:"bytes,18,opt,name=tschchartaxisdefaultusermin" json:"tschchartaxisdefaultusermin,omitempty"`
	XXX_unrecognized                         []byte                             `json:"-"`
}

func (m *ChartAxisNonStyleArchive) Reset()         { *m = ChartAxisNonStyleArchive{} }
func (m *ChartAxisNonStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartAxisNonStyleArchive) ProtoMessage()    {}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisdefault3Dlabelposition() int32 {
	if m != nil && m.Tschchartaxisdefault3Dlabelposition != nil {
		return *m.Tschchartaxisdefault3Dlabelposition
	}
	return 0
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisdefaultnumberformat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Tschchartaxisdefaultnumberformat
	}
	return nil
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisdefaultnumberformattype() int32 {
	if m != nil && m.Tschchartaxisdefaultnumberformattype != nil {
		return *m.Tschchartaxisdefaultnumberformattype
	}
	return 0
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisvaluenumberofdecades() int32 {
	if m != nil && m.Tschchartaxisvaluenumberofdecades != nil {
		return *m.Tschchartaxisvaluenumberofdecades
	}
	return 0
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisvaluenumberofmajorgridlines() int32 {
	if m != nil && m.Tschchartaxisvaluenumberofmajorgridlines != nil {
		return *m.Tschchartaxisvaluenumberofmajorgridlines
	}
	return 0
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisvaluenumberofminorgridlines() int32 {
	if m != nil && m.Tschchartaxisvaluenumberofminorgridlines != nil {
		return *m.Tschchartaxisvaluenumberofminorgridlines
	}
	return 0
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxiscategoryplottoedges() bool {
	if m != nil && m.Tschchartaxiscategoryplottoedges != nil {
		return *m.Tschchartaxiscategoryplottoedges
	}
	return false
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisvaluescale() int32 {
	if m != nil && m.Tschchartaxisvaluescale != nil {
		return *m.Tschchartaxisvaluescale
	}
	return 0
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxiscategoryshowlabels() bool {
	if m != nil && m.Tschchartaxiscategoryshowlabels != nil {
		return *m.Tschchartaxiscategoryshowlabels
	}
	return false
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisdefaultshowlabels() bool {
	if m != nil && m.Tschchartaxisdefaultshowlabels != nil {
		return *m.Tschchartaxisdefaultshowlabels
	}
	return false
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisvalueshowlabels() bool {
	if m != nil && m.Tschchartaxisvalueshowlabels != nil {
		return *m.Tschchartaxisvalueshowlabels
	}
	return false
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxiscategoryshowserieslabels() bool {
	if m != nil && m.Tschchartaxiscategoryshowserieslabels != nil {
		return *m.Tschchartaxiscategoryshowserieslabels
	}
	return false
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxismultidatashowserieslabels() bool {
	if m != nil && m.Tschchartaxismultidatashowserieslabels != nil {
		return *m.Tschchartaxismultidatashowserieslabels
	}
	return false
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxiscategoryshowtitle() bool {
	if m != nil && m.Tschchartaxiscategoryshowtitle != nil {
		return *m.Tschchartaxiscategoryshowtitle
	}
	return false
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisvalueshowtitle() bool {
	if m != nil && m.Tschchartaxisvalueshowtitle != nil {
		return *m.Tschchartaxisvalueshowtitle
	}
	return false
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxiscategorytitle() string {
	if m != nil && m.Tschchartaxiscategorytitle != nil {
		return *m.Tschchartaxiscategorytitle
	}
	return ""
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisvaluetitle() string {
	if m != nil && m.Tschchartaxisvaluetitle != nil {
		return *m.Tschchartaxisvaluetitle
	}
	return ""
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisdefaultusermax() *TSCH1.ChartsNSNumberDoubleArchive {
	if m != nil {
		return m.Tschchartaxisdefaultusermax
	}
	return nil
}

func (m *ChartAxisNonStyleArchive) GetTschchartaxisdefaultusermin() *TSCH1.ChartsNSNumberDoubleArchive {
	if m != nil {
		return m.Tschchartaxisdefaultusermin
	}
	return nil
}

var E_ChartAxisNonStyleArchive_Current = &proto.ExtensionDesc{
	ExtendedType:  (*TSCH1.ChartAxisNonStyleArchive)(nil),
	ExtensionType: (*ChartAxisNonStyleArchive)(nil),
	Field:         10000,
	Name:          "TSCH.Generated.ChartAxisNonStyleArchive.current",
	Tag:           "bytes,10000,opt,name=current",
}

type ChartSeriesStyleArchive struct {
	Tschchartseriesdefaulterrorbarlineend                      *TSD.LineEndArchive `protobuf:"bytes,1,opt,name=tschchartseriesdefaulterrorbarlineend" json:"tschchartseriesdefaulterrorbarlineend,omitempty"`
	Tschchartseriesdefaulterrorbarlineendscatterx              *TSD.LineEndArchive `protobuf:"bytes,2,opt,name=tschchartseriesdefaulterrorbarlineendscatterx" json:"tschchartseriesdefaulterrorbarlineendscatterx,omitempty"`
	Tschchartseriesdefaulterrorbarshadow                       *TSD.ShadowArchive  `protobuf:"bytes,3,opt,name=tschchartseriesdefaulterrorbarshadow" json:"tschchartseriesdefaulterrorbarshadow,omitempty"`
	Tschchartseriesdefaulterrorbarstroke                       *TSD.StrokeArchive  `protobuf:"bytes,4,opt,name=tschchartseriesdefaulterrorbarstroke" json:"tschchartseriesdefaulterrorbarstroke,omitempty"`
	Tschchartseriesdefaulterrorbarstrokescatterx               *TSD.StrokeArchive  `protobuf:"bytes,5,opt,name=tschchartseriesdefaulterrorbarstrokescatterx" json:"tschchartseriesdefaulterrorbarstrokescatterx,omitempty"`
	Tschchartseries3Dareafill                                  *TSD.FillArchive    `protobuf:"bytes,6,opt,name=tschchartseries3dareafill" json:"tschchartseries3dareafill,omitempty"`
	Tschchartseries3Dbarfill                                   *TSD.FillArchive    `protobuf:"bytes,7,opt,name=tschchartseries3dbarfill" json:"tschchartseries3dbarfill,omitempty"`
	Tschchartseries3Dcolumnfill                                *TSD.FillArchive    `protobuf:"bytes,8,opt,name=tschchartseries3dcolumnfill" json:"tschchartseries3dcolumnfill,omitempty"`
	Tschchartseries3Dlinefill                                  *TSD.FillArchive    `protobuf:"bytes,9,opt,name=tschchartseries3dlinefill" json:"tschchartseries3dlinefill,omitempty"`
	Tschchartseries3Dpiefill                                   *TSD.FillArchive    `protobuf:"bytes,10,opt,name=tschchartseries3dpiefill" json:"tschchartseries3dpiefill,omitempty"`
	Tschchartseriesareafill                                    *TSD.FillArchive    `protobuf:"bytes,11,opt,name=tschchartseriesareafill" json:"tschchartseriesareafill,omitempty"`
	Tschchartseriesbarfill                                     *TSD.FillArchive    `protobuf:"bytes,12,opt,name=tschchartseriesbarfill" json:"tschchartseriesbarfill,omitempty"`
	Tschchartseriescolumnfill                                  *TSD.FillArchive    `protobuf:"bytes,13,opt,name=tschchartseriescolumnfill" json:"tschchartseriescolumnfill,omitempty"`
	Tschchartseriesdefaultfill                                 *TSD.FillArchive    `protobuf:"bytes,14,opt,name=tschchartseriesdefaultfill" json:"tschchartseriesdefaultfill,omitempty"`
	Tschchartseriesmixedareafill                               *TSD.FillArchive    `protobuf:"bytes,15,opt,name=tschchartseriesmixedareafill" json:"tschchartseriesmixedareafill,omitempty"`
	Tschchartseriesmixedcolumnfill                             *TSD.FillArchive    `protobuf:"bytes,16,opt,name=tschchartseriesmixedcolumnfill" json:"tschchartseriesmixedcolumnfill,omitempty"`
	Tschchartseriespiefill                                     *TSD.FillArchive    `protobuf:"bytes,17,opt,name=tschchartseriespiefill" json:"tschchartseriespiefill,omitempty"`
	Tschchartseriesarealabelparagraphstyleindex                *int32              `protobuf:"varint,18,opt,name=tschchartseriesarealabelparagraphstyleindex" json:"tschchartseriesarealabelparagraphstyleindex,omitempty"`
	Tschchartseriesbarlabelparagraphstyleindex                 *int32              `protobuf:"varint,19,opt,name=tschchartseriesbarlabelparagraphstyleindex" json:"tschchartseriesbarlabelparagraphstyleindex,omitempty"`
	Tschchartseriesdefaultlabelparagraphstyleindex             *int32              `protobuf:"varint,20,opt,name=tschchartseriesdefaultlabelparagraphstyleindex" json:"tschchartseriesdefaultlabelparagraphstyleindex,omitempty"`
	Tschchartserieslinelabelparagraphstyleindex                *int32              `protobuf:"varint,21,opt,name=tschchartserieslinelabelparagraphstyleindex" json:"tschchartserieslinelabelparagraphstyleindex,omitempty"`
	Tschchartseriesmixedlabelparagraphstyleindex               *int32              `protobuf:"varint,22,opt,name=tschchartseriesmixedlabelparagraphstyleindex" json:"tschchartseriesmixedlabelparagraphstyleindex,omitempty"`
	Tschchartseriespielabelparagraphstyleindex                 *int32              `protobuf:"varint,23,opt,name=tschchartseriespielabelparagraphstyleindex" json:"tschchartseriespielabelparagraphstyleindex,omitempty"`
	Tschchartseriesdefaultopacity                              *float32            `protobuf:"fixed32,24,opt,name=tschchartseriesdefaultopacity" json:"tschchartseriesdefaultopacity,omitempty"`
	Tschchartseriesareaoutsidelabelparagraphstyleindex         *int32              `protobuf:"varint,25,opt,name=tschchartseriesareaoutsidelabelparagraphstyleindex" json:"tschchartseriesareaoutsidelabelparagraphstyleindex,omitempty"`
	Tschchartseriesbaroutsidelabelparagraphstyleindex          *int32              `protobuf:"varint,26,opt,name=tschchartseriesbaroutsidelabelparagraphstyleindex" json:"tschchartseriesbaroutsidelabelparagraphstyleindex,omitempty"`
	Tschchartseriesdefaultoutsidelabelparagraphstyleindex      *int32              `protobuf:"varint,27,opt,name=tschchartseriesdefaultoutsidelabelparagraphstyleindex" json:"tschchartseriesdefaultoutsidelabelparagraphstyleindex,omitempty"`
	Tschchartseriesmixedoutsidelabelparagraphstyleindex        *int32              `protobuf:"varint,28,opt,name=tschchartseriesmixedoutsidelabelparagraphstyleindex" json:"tschchartseriesmixedoutsidelabelparagraphstyleindex,omitempty"`
	Tschchartseriespieoutsidelabelparagraphstyleindex          *int32              `protobuf:"varint,29,opt,name=tschchartseriespieoutsidelabelparagraphstyleindex" json:"tschchartseriespieoutsidelabelparagraphstyleindex,omitempty"`
	Tschchartseries3Dareashadow                                *TSD.ShadowArchive  `protobuf:"bytes,30,opt,name=tschchartseries3dareashadow" json:"tschchartseries3dareashadow,omitempty"`
	Tschchartseries3Dbarshadow                                 *TSD.ShadowArchive  `protobuf:"bytes,31,opt,name=tschchartseries3dbarshadow" json:"tschchartseries3dbarshadow,omitempty"`
	Tschchartseries3Dcolumnshadow                              *TSD.ShadowArchive  `protobuf:"bytes,32,opt,name=tschchartseries3dcolumnshadow" json:"tschchartseries3dcolumnshadow,omitempty"`
	Tschchartseries3Dlineshadow                                *TSD.ShadowArchive  `protobuf:"bytes,33,opt,name=tschchartseries3dlineshadow" json:"tschchartseries3dlineshadow,omitempty"`
	Tschchartseries3Dpieshadow                                 *TSD.ShadowArchive  `protobuf:"bytes,34,opt,name=tschchartseries3dpieshadow" json:"tschchartseries3dpieshadow,omitempty"`
	Tschchartseriesareashadow                                  *TSD.ShadowArchive  `protobuf:"bytes,35,opt,name=tschchartseriesareashadow" json:"tschchartseriesareashadow,omitempty"`
	Tschchartseriesbarshadow                                   *TSD.ShadowArchive  `protobuf:"bytes,36,opt,name=tschchartseriesbarshadow" json:"tschchartseriesbarshadow,omitempty"`
	Tschchartseriesbubbleshadow                                *TSD.ShadowArchive  `protobuf:"bytes,37,opt,name=tschchartseriesbubbleshadow" json:"tschchartseriesbubbleshadow,omitempty"`
	Tschchartseriesdefaultshadow                               *TSD.ShadowArchive  `protobuf:"bytes,38,opt,name=tschchartseriesdefaultshadow" json:"tschchartseriesdefaultshadow,omitempty"`
	Tschchartserieslineshadow                                  *TSD.ShadowArchive  `protobuf:"bytes,39,opt,name=tschchartserieslineshadow" json:"tschchartserieslineshadow,omitempty"`
	Tschchartseriesmixedareashadow                             *TSD.ShadowArchive  `protobuf:"bytes,40,opt,name=tschchartseriesmixedareashadow" json:"tschchartseriesmixedareashadow,omitempty"`
	Tschchartseriesmixedcolumnshadow                           *TSD.ShadowArchive  `protobuf:"bytes,41,opt,name=tschchartseriesmixedcolumnshadow" json:"tschchartseriesmixedcolumnshadow,omitempty"`
	Tschchartseriesmixedlineshadow                             *TSD.ShadowArchive  `protobuf:"bytes,42,opt,name=tschchartseriesmixedlineshadow" json:"tschchartseriesmixedlineshadow,omitempty"`
	Tschchartseriespieshadow                                   *TSD.ShadowArchive  `protobuf:"bytes,43,opt,name=tschchartseriespieshadow" json:"tschchartseriespieshadow,omitempty"`
	Tschchartseriesscattershadow                               *TSD.ShadowArchive  `protobuf:"bytes,44,opt,name=tschchartseriesscattershadow" json:"tschchartseriesscattershadow,omitempty"`
	Tschchartseriesareastroke                                  *TSD.StrokeArchive  `protobuf:"bytes,45,opt,name=tschchartseriesareastroke" json:"tschchartseriesareastroke,omitempty"`
	Tschchartseriesbarstroke                                   *TSD.StrokeArchive  `protobuf:"bytes,46,opt,name=tschchartseriesbarstroke" json:"tschchartseriesbarstroke,omitempty"`
	Tschchartseriesbubblestroke                                *TSD.StrokeArchive  `protobuf:"bytes,47,opt,name=tschchartseriesbubblestroke" json:"tschchartseriesbubblestroke,omitempty"`
	Tschchartserieslinestroke                                  *TSD.StrokeArchive  `protobuf:"bytes,48,opt,name=tschchartserieslinestroke" json:"tschchartserieslinestroke,omitempty"`
	Tschchartseriesmixedareastroke                             *TSD.StrokeArchive  `protobuf:"bytes,49,opt,name=tschchartseriesmixedareastroke" json:"tschchartseriesmixedareastroke,omitempty"`
	Tschchartseriesmixedcolumnstroke                           *TSD.StrokeArchive  `protobuf:"bytes,50,opt,name=tschchartseriesmixedcolumnstroke" json:"tschchartseriesmixedcolumnstroke,omitempty"`
	Tschchartseriesmixedlinestroke                             *TSD.StrokeArchive  `protobuf:"bytes,51,opt,name=tschchartseriesmixedlinestroke" json:"tschchartseriesmixedlinestroke,omitempty"`
	Tschchartseriespiestroke                                   *TSD.StrokeArchive  `protobuf:"bytes,52,opt,name=tschchartseriespiestroke" json:"tschchartseriespiestroke,omitempty"`
	Tschchartseriesscatterstroke                               *TSD.StrokeArchive  `protobuf:"bytes,53,opt,name=tschchartseriesscatterstroke" json:"tschchartseriesscatterstroke,omitempty"`
	Tschchartseriesareasymbolfill                              *TSD.FillArchive    `protobuf:"bytes,54,opt,name=tschchartseriesareasymbolfill" json:"tschchartseriesareasymbolfill,omitempty"`
	Tschchartseriesbubblesymbolfill                            *TSD.FillArchive    `protobuf:"bytes,55,opt,name=tschchartseriesbubblesymbolfill" json:"tschchartseriesbubblesymbolfill,omitempty"`
	Tschchartserieslinesymbolfill                              *TSD.FillArchive    `protobuf:"bytes,56,opt,name=tschchartserieslinesymbolfill" json:"tschchartserieslinesymbolfill,omitempty"`
	Tschchartseriesmixedareasymbolfill                         *TSD.FillArchive    `protobuf:"bytes,57,opt,name=tschchartseriesmixedareasymbolfill" json:"tschchartseriesmixedareasymbolfill,omitempty"`
	Tschchartseriesmixedlinesymbolfill                         *TSD.FillArchive    `protobuf:"bytes,58,opt,name=tschchartseriesmixedlinesymbolfill" json:"tschchartseriesmixedlinesymbolfill,omitempty"`
	Tschchartseriesscattersymbolfill                           *TSD.FillArchive    `protobuf:"bytes,59,opt,name=tschchartseriesscattersymbolfill" json:"tschchartseriesscattersymbolfill,omitempty"`
	Tschchartseriesareasymbolfilluseseriesfill                 *bool               `protobuf:"varint,60,opt,name=tschchartseriesareasymbolfilluseseriesfill" json:"tschchartseriesareasymbolfilluseseriesfill,omitempty"`
	Tschchartserieslinesymbolfilluseseriesfill                 *bool               `protobuf:"varint,61,opt,name=tschchartserieslinesymbolfilluseseriesfill" json:"tschchartserieslinesymbolfilluseseriesfill,omitempty"`
	Tschchartseriesmixedareasymbolfilluseseriesfill            *bool               `protobuf:"varint,62,opt,name=tschchartseriesmixedareasymbolfilluseseriesfill" json:"tschchartseriesmixedareasymbolfilluseseriesfill,omitempty"`
	Tschchartseriesmixedlinesymbolfilluseseriesfill            *bool               `protobuf:"varint,63,opt,name=tschchartseriesmixedlinesymbolfilluseseriesfill" json:"tschchartseriesmixedlinesymbolfilluseseriesfill,omitempty"`
	Tschchartseriesareasymbolfilluseseriesstroke               *bool               `protobuf:"varint,64,opt,name=tschchartseriesareasymbolfilluseseriesstroke" json:"tschchartseriesareasymbolfilluseseriesstroke,omitempty"`
	Tschchartseriesbubblesymbolfilluseseriesstroke             *bool               `protobuf:"varint,65,opt,name=tschchartseriesbubblesymbolfilluseseriesstroke" json:"tschchartseriesbubblesymbolfilluseseriesstroke,omitempty"`
	Tschchartserieslinesymbolfilluseseriesstroke               *bool               `protobuf:"varint,66,opt,name=tschchartserieslinesymbolfilluseseriesstroke" json:"tschchartserieslinesymbolfilluseseriesstroke,omitempty"`
	Tschchartseriesmixedareasymbolfilluseseriesstroke          *bool               `protobuf:"varint,67,opt,name=tschchartseriesmixedareasymbolfilluseseriesstroke" json:"tschchartseriesmixedareasymbolfilluseseriesstroke,omitempty"`
	Tschchartseriesmixedlinesymbolfilluseseriesstroke          *bool               `protobuf:"varint,68,opt,name=tschchartseriesmixedlinesymbolfilluseseriesstroke" json:"tschchartseriesmixedlinesymbolfilluseseriesstroke,omitempty"`
	Tschchartseriesscattersymbolfilluseseriesstroke            *bool               `protobuf:"varint,69,opt,name=tschchartseriesscattersymbolfilluseseriesstroke" json:"tschchartseriesscattersymbolfilluseseriesstroke,omitempty"`
	Tschchartseriesareasymbolsize                              *float32            `protobuf:"fixed32,70,opt,name=tschchartseriesareasymbolsize" json:"tschchartseriesareasymbolsize,omitempty"`
	Tschchartserieslinesymbolsize                              *float32            `protobuf:"fixed32,71,opt,name=tschchartserieslinesymbolsize" json:"tschchartserieslinesymbolsize,omitempty"`
	Tschchartseriesmixedareasymbolsize                         *float32            `protobuf:"fixed32,72,opt,name=tschchartseriesmixedareasymbolsize" json:"tschchartseriesmixedareasymbolsize,omitempty"`
	Tschchartseriesmixedlinesymbolsize                         *float32            `protobuf:"fixed32,73,opt,name=tschchartseriesmixedlinesymbolsize" json:"tschchartseriesmixedlinesymbolsize,omitempty"`
	Tschchartseriesscattersymbolsize                           *float32            `protobuf:"fixed32,74,opt,name=tschchartseriesscattersymbolsize" json:"tschchartseriesscattersymbolsize,omitempty"`
	Tschchartseriesareasymbolstroke                            *TSD.StrokeArchive  `protobuf:"bytes,75,opt,name=tschchartseriesareasymbolstroke" json:"tschchartseriesareasymbolstroke,omitempty"`
	Tschchartseriesbubblesymbolstroke                          *TSD.StrokeArchive  `protobuf:"bytes,76,opt,name=tschchartseriesbubblesymbolstroke" json:"tschchartseriesbubblesymbolstroke,omitempty"`
	Tschchartserieslinesymbolstroke                            *TSD.StrokeArchive  `protobuf:"bytes,77,opt,name=tschchartserieslinesymbolstroke" json:"tschchartserieslinesymbolstroke,omitempty"`
	Tschchartseriesmixedareasymbolstroke                       *TSD.StrokeArchive  `protobuf:"bytes,78,opt,name=tschchartseriesmixedareasymbolstroke" json:"tschchartseriesmixedareasymbolstroke,omitempty"`
	Tschchartseriesmixedlinesymbolstroke                       *TSD.StrokeArchive  `protobuf:"bytes,79,opt,name=tschchartseriesmixedlinesymbolstroke" json:"tschchartseriesmixedlinesymbolstroke,omitempty"`
	Tschchartseriesscattersymbolstroke                         *TSD.StrokeArchive  `protobuf:"bytes,80,opt,name=tschchartseriesscattersymbolstroke" json:"tschchartseriesscattersymbolstroke,omitempty"`
	Tschchartseriesdefaulttrendlineequationopacity             *float32            `protobuf:"fixed32,81,opt,name=tschchartseriesdefaulttrendlineequationopacity" json:"tschchartseriesdefaulttrendlineequationopacity,omitempty"`
	Tschchartseriesdefaulttrendlineequationparagraphstyleindex *int32              `protobuf:"varint,82,opt,name=tschchartseriesdefaulttrendlineequationparagraphstyleindex" json:"tschchartseriesdefaulttrendlineequationparagraphstyleindex,omitempty"`
	Tschchartseriesdefaulttrendlinersquaredopacity             *float32            `protobuf:"fixed32,83,opt,name=tschchartseriesdefaulttrendlinersquaredopacity" json:"tschchartseriesdefaulttrendlinersquaredopacity,omitempty"`
	Tschchartseriesdefaulttrendlinersquaredparagraphstyleindex *int32              `protobuf:"varint,84,opt,name=tschchartseriesdefaulttrendlinersquaredparagraphstyleindex" json:"tschchartseriesdefaulttrendlinersquaredparagraphstyleindex,omitempty"`
	Tschchartseriesdefaulttrendlineshadow                      *TSD.ShadowArchive  `protobuf:"bytes,85,opt,name=tschchartseriesdefaulttrendlineshadow" json:"tschchartseriesdefaulttrendlineshadow,omitempty"`
	Tschchartseriesdefaulttrendlinestroke                      *TSD.StrokeArchive  `protobuf:"bytes,86,opt,name=tschchartseriesdefaulttrendlinestroke" json:"tschchartseriesdefaulttrendlinestroke,omitempty"`
	Tschchartseriesareavaluelabelposition                      *int32              `protobuf:"varint,87,opt,name=tschchartseriesareavaluelabelposition" json:"tschchartseriesareavaluelabelposition,omitempty"`
	Tschchartseriesbarvaluelabelposition                       *int32              `protobuf:"varint,88,opt,name=tschchartseriesbarvaluelabelposition" json:"tschchartseriesbarvaluelabelposition,omitempty"`
	Tschchartseriesbubblevaluelabelposition                    *int32              `protobuf:"varint,89,opt,name=tschchartseriesbubblevaluelabelposition" json:"tschchartseriesbubblevaluelabelposition,omitempty"`
	Tschchartseriesdefaultvaluelabelposition                   *int32              `protobuf:"varint,90,opt,name=tschchartseriesdefaultvaluelabelposition" json:"tschchartseriesdefaultvaluelabelposition,omitempty"`
	Tschchartserieslinevaluelabelposition                      *int32              `protobuf:"varint,91,opt,name=tschchartserieslinevaluelabelposition" json:"tschchartserieslinevaluelabelposition,omitempty"`
	Tschchartseriesmixedareavaluelabelposition                 *int32              `protobuf:"varint,92,opt,name=tschchartseriesmixedareavaluelabelposition" json:"tschchartseriesmixedareavaluelabelposition,omitempty"`
	Tschchartseriesmixedcolumnvaluelabelposition               *int32              `protobuf:"varint,93,opt,name=tschchartseriesmixedcolumnvaluelabelposition" json:"tschchartseriesmixedcolumnvaluelabelposition,omitempty"`
	Tschchartseriesmixedlinevaluelabelposition                 *int32              `protobuf:"varint,94,opt,name=tschchartseriesmixedlinevaluelabelposition" json:"tschchartseriesmixedlinevaluelabelposition,omitempty"`
	Tschchartseriesscattervaluelabelposition                   *int32              `protobuf:"varint,95,opt,name=tschchartseriesscattervaluelabelposition" json:"tschchartseriesscattervaluelabelposition,omitempty"`
	Tschchartseriesstackedareavaluelabelposition               *int32              `protobuf:"varint,96,opt,name=tschchartseriesstackedareavaluelabelposition" json:"tschchartseriesstackedareavaluelabelposition,omitempty"`
	Tschchartseriesstackedbarvaluelabelposition                *int32              `protobuf:"varint,97,opt,name=tschchartseriesstackedbarvaluelabelposition" json:"tschchartseriesstackedbarvaluelabelposition,omitempty"`
	XXX_unrecognized                                           []byte              `json:"-"`
}

func (m *ChartSeriesStyleArchive) Reset()         { *m = ChartSeriesStyleArchive{} }
func (m *ChartSeriesStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSeriesStyleArchive) ProtoMessage()    {}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulterrorbarlineend() *TSD.LineEndArchive {
	if m != nil {
		return m.Tschchartseriesdefaulterrorbarlineend
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulterrorbarlineendscatterx() *TSD.LineEndArchive {
	if m != nil {
		return m.Tschchartseriesdefaulterrorbarlineendscatterx
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulterrorbarshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesdefaulterrorbarshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulterrorbarstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesdefaulterrorbarstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulterrorbarstrokescatterx() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesdefaulterrorbarstrokescatterx
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dareafill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseries3Dareafill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dbarfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseries3Dbarfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dcolumnfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseries3Dcolumnfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dlinefill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseries3Dlinefill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dpiefill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseries3Dpiefill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareafill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesareafill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbarfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesbarfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriescolumnfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriescolumnfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaultfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesdefaultfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedareafill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesmixedareafill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedcolumnfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesmixedcolumnfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriespiefill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriespiefill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesarealabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesarealabelparagraphstyleindex != nil {
		return *m.Tschchartseriesarealabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbarlabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesbarlabelparagraphstyleindex != nil {
		return *m.Tschchartseriesbarlabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaultlabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesdefaultlabelparagraphstyleindex != nil {
		return *m.Tschchartseriesdefaultlabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartserieslinelabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartserieslinelabelparagraphstyleindex != nil {
		return *m.Tschchartserieslinelabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedlabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesmixedlabelparagraphstyleindex != nil {
		return *m.Tschchartseriesmixedlabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriespielabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriespielabelparagraphstyleindex != nil {
		return *m.Tschchartseriespielabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaultopacity() float32 {
	if m != nil && m.Tschchartseriesdefaultopacity != nil {
		return *m.Tschchartseriesdefaultopacity
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareaoutsidelabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesareaoutsidelabelparagraphstyleindex != nil {
		return *m.Tschchartseriesareaoutsidelabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbaroutsidelabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesbaroutsidelabelparagraphstyleindex != nil {
		return *m.Tschchartseriesbaroutsidelabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaultoutsidelabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesdefaultoutsidelabelparagraphstyleindex != nil {
		return *m.Tschchartseriesdefaultoutsidelabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedoutsidelabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesmixedoutsidelabelparagraphstyleindex != nil {
		return *m.Tschchartseriesmixedoutsidelabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriespieoutsidelabelparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriespieoutsidelabelparagraphstyleindex != nil {
		return *m.Tschchartseriespieoutsidelabelparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dareashadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseries3Dareashadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dbarshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseries3Dbarshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dcolumnshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseries3Dcolumnshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dlineshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseries3Dlineshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseries3Dpieshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseries3Dpieshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareashadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesareashadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbarshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesbarshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbubbleshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesbubbleshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaultshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesdefaultshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartserieslineshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartserieslineshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedareashadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesmixedareashadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedcolumnshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesmixedcolumnshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedlineshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesmixedlineshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriespieshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriespieshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesscattershadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesscattershadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareastroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesareastroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbarstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesbarstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbubblestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesbubblestroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartserieslinestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartserieslinestroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedareastroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesmixedareastroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedcolumnstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesmixedcolumnstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedlinestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesmixedlinestroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriespiestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriespiestroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesscatterstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesscatterstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareasymbolfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesareasymbolfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbubblesymbolfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesbubblesymbolfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartserieslinesymbolfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartserieslinesymbolfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedareasymbolfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesmixedareasymbolfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedlinesymbolfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesmixedlinesymbolfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesscattersymbolfill() *TSD.FillArchive {
	if m != nil {
		return m.Tschchartseriesscattersymbolfill
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareasymbolfilluseseriesfill() bool {
	if m != nil && m.Tschchartseriesareasymbolfilluseseriesfill != nil {
		return *m.Tschchartseriesareasymbolfilluseseriesfill
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartserieslinesymbolfilluseseriesfill() bool {
	if m != nil && m.Tschchartserieslinesymbolfilluseseriesfill != nil {
		return *m.Tschchartserieslinesymbolfilluseseriesfill
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedareasymbolfilluseseriesfill() bool {
	if m != nil && m.Tschchartseriesmixedareasymbolfilluseseriesfill != nil {
		return *m.Tschchartseriesmixedareasymbolfilluseseriesfill
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedlinesymbolfilluseseriesfill() bool {
	if m != nil && m.Tschchartseriesmixedlinesymbolfilluseseriesfill != nil {
		return *m.Tschchartseriesmixedlinesymbolfilluseseriesfill
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareasymbolfilluseseriesstroke() bool {
	if m != nil && m.Tschchartseriesareasymbolfilluseseriesstroke != nil {
		return *m.Tschchartseriesareasymbolfilluseseriesstroke
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbubblesymbolfilluseseriesstroke() bool {
	if m != nil && m.Tschchartseriesbubblesymbolfilluseseriesstroke != nil {
		return *m.Tschchartseriesbubblesymbolfilluseseriesstroke
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartserieslinesymbolfilluseseriesstroke() bool {
	if m != nil && m.Tschchartserieslinesymbolfilluseseriesstroke != nil {
		return *m.Tschchartserieslinesymbolfilluseseriesstroke
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedareasymbolfilluseseriesstroke() bool {
	if m != nil && m.Tschchartseriesmixedareasymbolfilluseseriesstroke != nil {
		return *m.Tschchartseriesmixedareasymbolfilluseseriesstroke
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedlinesymbolfilluseseriesstroke() bool {
	if m != nil && m.Tschchartseriesmixedlinesymbolfilluseseriesstroke != nil {
		return *m.Tschchartseriesmixedlinesymbolfilluseseriesstroke
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesscattersymbolfilluseseriesstroke() bool {
	if m != nil && m.Tschchartseriesscattersymbolfilluseseriesstroke != nil {
		return *m.Tschchartseriesscattersymbolfilluseseriesstroke
	}
	return false
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareasymbolsize() float32 {
	if m != nil && m.Tschchartseriesareasymbolsize != nil {
		return *m.Tschchartseriesareasymbolsize
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartserieslinesymbolsize() float32 {
	if m != nil && m.Tschchartserieslinesymbolsize != nil {
		return *m.Tschchartserieslinesymbolsize
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedareasymbolsize() float32 {
	if m != nil && m.Tschchartseriesmixedareasymbolsize != nil {
		return *m.Tschchartseriesmixedareasymbolsize
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedlinesymbolsize() float32 {
	if m != nil && m.Tschchartseriesmixedlinesymbolsize != nil {
		return *m.Tschchartseriesmixedlinesymbolsize
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesscattersymbolsize() float32 {
	if m != nil && m.Tschchartseriesscattersymbolsize != nil {
		return *m.Tschchartseriesscattersymbolsize
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareasymbolstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesareasymbolstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbubblesymbolstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesbubblesymbolstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartserieslinesymbolstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartserieslinesymbolstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedareasymbolstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesmixedareasymbolstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedlinesymbolstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesmixedlinesymbolstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesscattersymbolstroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesscattersymbolstroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulttrendlineequationopacity() float32 {
	if m != nil && m.Tschchartseriesdefaulttrendlineequationopacity != nil {
		return *m.Tschchartseriesdefaulttrendlineequationopacity
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulttrendlineequationparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesdefaulttrendlineequationparagraphstyleindex != nil {
		return *m.Tschchartseriesdefaulttrendlineequationparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulttrendlinersquaredopacity() float32 {
	if m != nil && m.Tschchartseriesdefaulttrendlinersquaredopacity != nil {
		return *m.Tschchartseriesdefaulttrendlinersquaredopacity
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() int32 {
	if m != nil && m.Tschchartseriesdefaulttrendlinersquaredparagraphstyleindex != nil {
		return *m.Tschchartseriesdefaulttrendlinersquaredparagraphstyleindex
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulttrendlineshadow() *TSD.ShadowArchive {
	if m != nil {
		return m.Tschchartseriesdefaulttrendlineshadow
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaulttrendlinestroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Tschchartseriesdefaulttrendlinestroke
	}
	return nil
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesareavaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesareavaluelabelposition != nil {
		return *m.Tschchartseriesareavaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbarvaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesbarvaluelabelposition != nil {
		return *m.Tschchartseriesbarvaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesbubblevaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesbubblevaluelabelposition != nil {
		return *m.Tschchartseriesbubblevaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesdefaultvaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesdefaultvaluelabelposition != nil {
		return *m.Tschchartseriesdefaultvaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartserieslinevaluelabelposition() int32 {
	if m != nil && m.Tschchartserieslinevaluelabelposition != nil {
		return *m.Tschchartserieslinevaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedareavaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesmixedareavaluelabelposition != nil {
		return *m.Tschchartseriesmixedareavaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedcolumnvaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesmixedcolumnvaluelabelposition != nil {
		return *m.Tschchartseriesmixedcolumnvaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesmixedlinevaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesmixedlinevaluelabelposition != nil {
		return *m.Tschchartseriesmixedlinevaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesscattervaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesscattervaluelabelposition != nil {
		return *m.Tschchartseriesscattervaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesstackedareavaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesstackedareavaluelabelposition != nil {
		return *m.Tschchartseriesstackedareavaluelabelposition
	}
	return 0
}

func (m *ChartSeriesStyleArchive) GetTschchartseriesstackedbarvaluelabelposition() int32 {
	if m != nil && m.Tschchartseriesstackedbarvaluelabelposition != nil {
		return *m.Tschchartseriesstackedbarvaluelabelposition
	}
	return 0
}

var E_ChartSeriesStyleArchive_Current = &proto.ExtensionDesc{
	ExtendedType:  (*TSCH1.ChartSeriesStyleArchive)(nil),
	ExtensionType: (*ChartSeriesStyleArchive)(nil),
	Field:         10000,
	Name:          "TSCH.Generated.ChartSeriesStyleArchive.current",
	Tag:           "bytes,10000,opt,name=current",
}

type ChartSeriesNonStyleArchive struct {
	Tschchartseriesbubbleadjustmentscale                     *float32                                    `protobuf:"fixed32,1,opt,name=tschchartseriesbubbleadjustmentscale" json:"tschchartseriesbubbleadjustmentscale,omitempty"`
	Tschchartseriesdefaulterrorbarcustomnegativedata         *TSCH1.ChartsNSArrayOfNSNumberDoubleArchive `protobuf:"bytes,2,opt,name=tschchartseriesdefaulterrorbarcustomnegativedata" json:"tschchartseriesdefaulterrorbarcustomnegativedata,omitempty"`
	Tschchartseriesdefaulterrorbarcustomnegativedatascatterx *TSCH1.ChartsNSArrayOfNSNumberDoubleArchive `protobuf:"bytes,3,opt,name=tschchartseriesdefaulterrorbarcustomnegativedatascatterx" json:"tschchartseriesdefaulterrorbarcustomnegativedatascatterx,omitempty"`
	Tschchartseriesdefaulterrorbarcustompositivedata         *TSCH1.ChartsNSArrayOfNSNumberDoubleArchive `protobuf:"bytes,4,opt,name=tschchartseriesdefaulterrorbarcustompositivedata" json:"tschchartseriesdefaulterrorbarcustompositivedata,omitempty"`
	Tschchartseriesdefaulterrorbarcustompositivedatascatterx *TSCH1.ChartsNSArrayOfNSNumberDoubleArchive `protobuf:"bytes,5,opt,name=tschchartseriesdefaulterrorbarcustompositivedatascatterx" json:"tschchartseriesdefaulterrorbarcustompositivedatascatterx,omitempty"`
	Tschchartseriesdefaulterrorbarfixedvalue                 *float32                                    `protobuf:"fixed32,6,opt,name=tschchartseriesdefaulterrorbarfixedvalue" json:"tschchartseriesdefaulterrorbarfixedvalue,omitempty"`
	Tschchartseriesdefaulterrorbarfixedvaluescatterx         *float32                                    `protobuf:"fixed32,7,opt,name=tschchartseriesdefaulterrorbarfixedvaluescatterx" json:"tschchartseriesdefaulterrorbarfixedvaluescatterx,omitempty"`
	Tschchartseriesdefaulterrorbarpercentvalue               *float32                                    `protobuf:"fixed32,8,opt,name=tschchartseriesdefaulterrorbarpercentvalue" json:"tschchartseriesdefaulterrorbarpercentvalue,omitempty"`
	Tschchartseriesdefaulterrorbarpercentvaluescatterx       *float32                                    `protobuf:"fixed32,9,opt,name=tschchartseriesdefaulterrorbarpercentvaluescatterx" json:"tschchartseriesdefaulterrorbarpercentvaluescatterx,omitempty"`
	Tschchartseriesdefaulterrorbarsetting                    *int32                                      `protobuf:"varint,10,opt,name=tschchartseriesdefaulterrorbarsetting" json:"tschchartseriesdefaulterrorbarsetting,omitempty"`
	Tschchartseriesdefaulterrorbarsettingscatterx            *int32                                      `protobuf:"varint,11,opt,name=tschchartseriesdefaulterrorbarsettingscatterx" json:"tschchartseriesdefaulterrorbarsettingscatterx,omitempty"`
	Tschchartseriesdefaulterrorbarstddevvalue                *float32                                    `protobuf:"fixed32,12,opt,name=tschchartseriesdefaulterrorbarstddevvalue" json:"tschchartseriesdefaulterrorbarstddevvalue,omitempty"`
	Tschchartseriesdefaulterrorbarstddevvaluescatterx        *float32                                    `protobuf:"fixed32,13,opt,name=tschchartseriesdefaulterrorbarstddevvaluescatterx" json:"tschchartseriesdefaulterrorbarstddevvaluescatterx,omitempty"`
	Tschchartseriesdefaulterrorbartype                       *int32                                      `protobuf:"varint,14,opt,name=tschchartseriesdefaulterrorbartype" json:"tschchartseriesdefaulterrorbartype,omitempty"`
	Tschchartseriesdefaulterrorbartypescatterx               *int32                                      `protobuf:"varint,15,opt,name=tschchartseriesdefaulterrorbartypescatterx" json:"tschchartseriesdefaulterrorbartypescatterx,omitempty"`
	Tschchartseriespielabelexplosion                         *float32                                    `protobuf:"fixed32,16,opt,name=tschchartseriespielabelexplosion" json:"tschchartseriespielabelexplosion,omitempty"`
	Tschchartseriesbubblelinetype                            *int32                                      `protobuf:"varint,17,opt,name=tschchartseriesbubblelinetype" json:"tschchartseriesbubblelinetype,omitempty"`
	Tschchartserieslinelinetype                              *int32                                      `protobuf:"varint,18,opt,name=tschchartserieslinelinetype" json:"tschchartserieslinelinetype,omitempty"`
	Tschchartseriesmixedlinelinetype                         *int32                                      `protobuf:"varint,19,opt,name=tschchartseriesmixedlinelinetype" json:"tschchartseriesmixedlinelinetype,omitempty"`
	Tschchartseriesscatterlinetype                           *int32                                      `protobuf:"varint,20,opt,name=tschchartseriesscatterlinetype" json:"tschchartseriesscatterlinetype,omitempty"`
	Tschchartseriesdefaultnumberformat                       *TSK.FormatStructArchive                    `protobuf:"bytes,21,opt,name=tschchartseriesdefaultnumberformat" json:"tschchartseriesdefaultnumberformat,omitempty"`
	Tschchartseriespienumberformat                           *TSK.FormatStructArchive                    `protobuf:"bytes,22,opt,name=tschchartseriespienumberformat" json:"tschchartseriespienumberformat,omitempty"`
	Tschchartseriesdefaultnumberformattype                   *int32                                      `protobuf:"varint,23,opt,name=tschchartseriesdefaultnumberformattype" json:"tschchartseriesdefaultnumberformattype,omitempty"`
	Tschchartseriespienumberformattype                       *int32                                      `protobuf:"varint,24,opt,name=tschchartseriespienumberformattype" json:"tschchartseriespienumberformattype,omitempty"`
	Tschchartseriesstackedpercentnumberformat                *TSK.FormatStructArchive                    `protobuf:"bytes,25,opt,name=tschchartseriesstackedpercentnumberformat" json:"tschchartseriesstackedpercentnumberformat,omitempty"`
	Tschchartseriesdefaultseriestype                         *int32                                      `protobuf:"varint,26,opt,name=tschchartseriesdefaultseriestype" json:"tschchartseriesdefaultseriestype,omitempty"`
	Tschchartseriesdefaultshowerrorbar                       *bool                                       `protobuf:"varint,27,opt,name=tschchartseriesdefaultshowerrorbar" json:"tschchartseriesdefaultshowerrorbar,omitempty"`
	Tschchartseriesdefaultshowerrorbarscatterx               *bool                                       `protobuf:"varint,28,opt,name=tschchartseriesdefaultshowerrorbarscatterx" json:"tschchartseriesdefaultshowerrorbarscatterx,omitempty"`
	Tschchartseriesscattershowline                           *bool                                       `protobuf:"varint,29,opt,name=tschchartseriesscattershowline" json:"tschchartseriesscattershowline,omitempty"`
	Tschchartseriesbubbleshownegativedata                    *bool                                       `protobuf:"varint,30,opt,name=tschchartseriesbubbleshownegativedata" json:"tschchartseriesbubbleshownegativedata,omitempty"`
	Tschchartseriespieshowserieslabels                       *bool                                       `protobuf:"varint,31,opt,name=tschchartseriespieshowserieslabels" json:"tschchartseriespieshowserieslabels,omitempty"`
	Tschchartseriesareashowsymbol                            *bool                                       `protobuf:"varint,32,opt,name=tschchartseriesareashowsymbol" json:"tschchartseriesareashowsymbol,omitempty"`
	Tschchartserieslineshowsymbol                            *bool                                       `protobuf:"varint,33,opt,name=tschchartserieslineshowsymbol" json:"tschchartserieslineshowsymbol,omitempty"`
	Tschchartseriesmixedareashowsymbol                       *bool                                       `protobuf:"varint,34,opt,name=tschchartseriesmixedareashowsymbol" json:"tschchartseriesmixedareashowsymbol,omitempty"`
	Tschchartseriesmixedlineshowsymbol                       *bool                                       `protobuf:"varint,35,opt,name=tschchartseriesmixedlineshowsymbol" json:"tschchartseriesmixedlineshowsymbol,omitempty"`
	Tschchartseriesscattershowsymbol                         *bool                                       `protobuf:"varint,36,opt,name=tschchartseriesscattershowsymbol" json:"tschchartseriesscattershowsymbol,omitempty"`
	Tschchartseriesdefaultshowtrendline                      *bool                                       `protobuf:"varint,37,opt,name=tschchartseriesdefaultshowtrendline" json:"tschchartseriesdefaultshowtrendline,omitempty"`
	Tschchartseriesareashowvaluelabels                       *bool                                       `protobuf:"varint,38,opt,name=tschchartseriesareashowvaluelabels" json:"tschchartseriesareashowvaluelabels,omitempty"`
	Tschchartseriesbarshowvaluelabels                        *bool                                       `protobuf:"varint,39,opt,name=tschchartseriesbarshowvaluelabels" json:"tschchartseriesbarshowvaluelabels,omitempty"`
	Tschchartseriesbubbleshowvaluelabels                     *bool                                       `protobuf:"varint,40,opt,name=tschchartseriesbubbleshowvaluelabels" json:"tschchartseriesbubbleshowvaluelabels,omitempty"`
	Tschchartseriesdefaultshowvaluelabels                    *bool                                       `protobuf:"varint,41,opt,name=tschchartseriesdefaultshowvaluelabels" json:"tschchartseriesdefaultshowvaluelabels,omitempty"`
	Tschchartserieslineshowvaluelabels                       *bool                                       `protobuf:"varint,42,opt,name=tschchartserieslineshowvaluelabels" json:"tschchartserieslineshowvaluelabels,omitempty"`
	Tschchartseriesmixedshowvaluelabels                      *bool                                       `protobuf:"varint,43,opt,name=tschchartseriesmixedshowvaluelabels" json:"tschchartseriesmixedshowvaluelabels,omitempty"`
	Tschchartseriespieshowvaluelabels                        *bool                                       `protobuf:"varint,44,opt,name=tschchartseriespieshowvaluelabels" json:"tschchartseriespieshowvaluelabels,omitempty"`
	Tschchartseriesscattershowvaluelabels                    *bool                                       `protobuf:"varint,45,opt,name=tschchartseriesscattershowvaluelabels" json:"tschchartseriesscattershowvaluelabels,omitempty"`
	Tschchartseriesbubblesizedimension                       *int32                                      `protobuf:"varint,46,opt,name=tschchartseriesbubblesizedimension" json:"tschchartseriesbubblesizedimension,omitempty"`
	Tschchartseriesareasymboltype                            *int32                                      `protobuf:"varint,47,opt,name=tschchartseriesareasymboltype" json:"tschchartseriesareasymboltype,omitempty"`
	Tschchartserieslinesymboltype                            *int32                                      `protobuf:"varint,48,opt,name=tschchartserieslinesymboltype" json:"tschchartserieslinesymboltype,omitempty"`
	Tschchartseriesmixedareasymboltype                       *int32                                      `protobuf:"varint,49,opt,name=tschchartseriesmixedareasymboltype" json:"tschchartseriesmixedareasymboltype,omitempty"`
	Tschchartseriesmixedlinesymboltype                       *int32                                      `protobuf:"varint,50,opt,name=tschchartseriesmixedlinesymboltype" json:"tschchartseriesmixedlinesymboltype,omitempty"`
	Tschchartseriesscattersymboltype                         *int32                                      `protobuf:"varint,51,opt,name=tschchartseriesscattersymboltype" json:"tschchartseriesscattersymboltype,omitempty"`
	Tschchartseriesdefaulttrendlineequationoffsetx           *float32                                    `protobuf:"fixed32,52,opt,name=tschchartseriesdefaulttrendlineequationoffsetx" json:"tschchartseriesdefaulttrendlineequationoffsetx,omitempty"`
	Tschchartseriesdefaulttrendlineequationoffsety           *float32                                    `protobuf:"fixed32,53,opt,name=tschchartseriesdefaulttrendlineequationoffsety" json:"tschchartseriesdefaulttrendlineequationoffsety,omitempty"`
	Tschchartseriesdefaulttrendlinelabelstring               *string                                     `protobuf:"bytes,54,opt,name=tschchartseriesdefaulttrendlinelabelstring" json:"tschchartseriesdefaulttrendlinelabelstring,omitempty"`
	Tschchartseriesdefaulttrendlineorder                     *int32                                      `protobuf:"varint,55,opt,name=tschchartseriesdefaulttrendlineorder" json:"tschchartseriesdefaulttrendlineorder,omitempty"`
	Tschchartseriesdefaulttrendlineperiod                    *int32                                      `protobuf:"varint,56,opt,name=tschchartseriesdefaulttrendlineperiod" json:"tschchartseriesdefaulttrendlineperiod,omitempty"`
	Tschchartseriesdefaulttrendlinersquaredoffsetx           *float32                                    `protobuf:"fixed32,57,opt,name=tschchartseriesdefaulttrendlinersquaredoffsetx" json:"tschchartseriesdefaulttrendlinersquaredoffsetx,omitempty"`
	Tschchartseriesdefaulttrendlinersquaredoffsety           *float32                                    `protobuf:"fixed32,58,opt,name=tschchartseriesdefaulttrendlinersquaredoffsety" json:"tschchartseriesdefaulttrendlinersquaredoffsety,omitempty"`
	Tschchartseriesdefaulttrendlineshowequation              *bool                                       `protobuf:"varint,59,opt,name=tschchartseriesdefaulttrendlineshowequation" json:"tschchartseriesdefaulttrendlineshowequation,omitempty"`
	Tschchartseriesdefaulttrendlineshowlabel                 *bool                                       `protobuf:"varint,60,opt,name=tschchartseriesdefaulttrendlineshowlabel" json:"tschchartseriesdefaulttrendlineshowlabel,omitempty"`
	Tschchartseriesdefaulttrendlineshowr2Value               *bool                                       `protobuf:"varint,61,opt,name=tschchartseriesdefaulttrendlineshowr2value" json:"tschchartseriesdefaulttrendlineshowr2value,omitempty"`
	Tschchartseriesdefaulttrendlinetype                      *int32                                      `protobuf:"varint,62,opt,name=tschchartseriesdefaulttrendlinetype" json:"tschchartseriesdefaulttrendlinetype,omitempty"`
	Tschchartseriespiewedgeexplosion                         *float32                                    `protobuf:"fixed32,63,opt,name=tschchartseriespiewedgeexplosion" json:"tschchartseriespiewedgeexplosion,omitempty"`
	Tschchartseriesdefaultyaxisordinal                       *int32                                      `protobuf:"varint,64,opt,name=tschchartseriesdefaultyaxisordinal" json:"tschchartseriesdefaultyaxisordinal,omitempty"`
	Tschchartseriesbubbleshowserieslabels                    *bool                                       `protobuf:"varint,65,opt,name=tschchartseriesbubbleshowserieslabels" json:"tschchartseriesbubbleshowserieslabels,omitempty"`
	Tschchartseriesbubblevaluelabelsaxis                     *int32                                      `protobuf:"varint,66,opt,name=tschchartseriesbubblevaluelabelsaxis" json:"tschchartseriesbubblevaluelabelsaxis,omitempty"`
	Tschchartseriesscattershowserieslabels                   *bool                                       `protobuf:"varint,67,opt,name=tschchartseriesscattershowserieslabels" json:"tschchartseriesscattershowserieslabels,omitempty"`
	Tschchartseriesscattervaluelabelsaxis                    *int32                                      `protobuf:"varint,68,opt,name=tschchartseriesscattervaluelabelsaxis" json:"tschchartseriesscattervaluelabelsaxis,omitempty"`
	XXX_unrecognized                                         []byte                                      `json:"-"`
}

func (m *ChartSeriesNonStyleArchive) Reset()         { *m = ChartSeriesNonStyleArchive{} }
func (m *ChartSeriesNonStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSeriesNonStyleArchive) ProtoMessage()    {}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesbubbleadjustmentscale() float32 {
	if m != nil && m.Tschchartseriesbubbleadjustmentscale != nil {
		return *m.Tschchartseriesbubbleadjustmentscale
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarcustomnegativedata() *TSCH1.ChartsNSArrayOfNSNumberDoubleArchive {
	if m != nil {
		return m.Tschchartseriesdefaulterrorbarcustomnegativedata
	}
	return nil
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarcustomnegativedatascatterx() *TSCH1.ChartsNSArrayOfNSNumberDoubleArchive {
	if m != nil {
		return m.Tschchartseriesdefaulterrorbarcustomnegativedatascatterx
	}
	return nil
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarcustompositivedata() *TSCH1.ChartsNSArrayOfNSNumberDoubleArchive {
	if m != nil {
		return m.Tschchartseriesdefaulterrorbarcustompositivedata
	}
	return nil
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarcustompositivedatascatterx() *TSCH1.ChartsNSArrayOfNSNumberDoubleArchive {
	if m != nil {
		return m.Tschchartseriesdefaulterrorbarcustompositivedatascatterx
	}
	return nil
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarfixedvalue() float32 {
	if m != nil && m.Tschchartseriesdefaulterrorbarfixedvalue != nil {
		return *m.Tschchartseriesdefaulterrorbarfixedvalue
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarfixedvaluescatterx() float32 {
	if m != nil && m.Tschchartseriesdefaulterrorbarfixedvaluescatterx != nil {
		return *m.Tschchartseriesdefaulterrorbarfixedvaluescatterx
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarpercentvalue() float32 {
	if m != nil && m.Tschchartseriesdefaulterrorbarpercentvalue != nil {
		return *m.Tschchartseriesdefaulterrorbarpercentvalue
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarpercentvaluescatterx() float32 {
	if m != nil && m.Tschchartseriesdefaulterrorbarpercentvaluescatterx != nil {
		return *m.Tschchartseriesdefaulterrorbarpercentvaluescatterx
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarsetting() int32 {
	if m != nil && m.Tschchartseriesdefaulterrorbarsetting != nil {
		return *m.Tschchartseriesdefaulterrorbarsetting
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarsettingscatterx() int32 {
	if m != nil && m.Tschchartseriesdefaulterrorbarsettingscatterx != nil {
		return *m.Tschchartseriesdefaulterrorbarsettingscatterx
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarstddevvalue() float32 {
	if m != nil && m.Tschchartseriesdefaulterrorbarstddevvalue != nil {
		return *m.Tschchartseriesdefaulterrorbarstddevvalue
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbarstddevvaluescatterx() float32 {
	if m != nil && m.Tschchartseriesdefaulterrorbarstddevvaluescatterx != nil {
		return *m.Tschchartseriesdefaulterrorbarstddevvaluescatterx
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbartype() int32 {
	if m != nil && m.Tschchartseriesdefaulterrorbartype != nil {
		return *m.Tschchartseriesdefaulterrorbartype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulterrorbartypescatterx() int32 {
	if m != nil && m.Tschchartseriesdefaulterrorbartypescatterx != nil {
		return *m.Tschchartseriesdefaulterrorbartypescatterx
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriespielabelexplosion() float32 {
	if m != nil && m.Tschchartseriespielabelexplosion != nil {
		return *m.Tschchartseriespielabelexplosion
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesbubblelinetype() int32 {
	if m != nil && m.Tschchartseriesbubblelinetype != nil {
		return *m.Tschchartseriesbubblelinetype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartserieslinelinetype() int32 {
	if m != nil && m.Tschchartserieslinelinetype != nil {
		return *m.Tschchartserieslinelinetype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesmixedlinelinetype() int32 {
	if m != nil && m.Tschchartseriesmixedlinelinetype != nil {
		return *m.Tschchartseriesmixedlinelinetype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesscatterlinetype() int32 {
	if m != nil && m.Tschchartseriesscatterlinetype != nil {
		return *m.Tschchartseriesscatterlinetype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaultnumberformat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Tschchartseriesdefaultnumberformat
	}
	return nil
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriespienumberformat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Tschchartseriespienumberformat
	}
	return nil
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaultnumberformattype() int32 {
	if m != nil && m.Tschchartseriesdefaultnumberformattype != nil {
		return *m.Tschchartseriesdefaultnumberformattype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriespienumberformattype() int32 {
	if m != nil && m.Tschchartseriespienumberformattype != nil {
		return *m.Tschchartseriespienumberformattype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesstackedpercentnumberformat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Tschchartseriesstackedpercentnumberformat
	}
	return nil
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaultseriestype() int32 {
	if m != nil && m.Tschchartseriesdefaultseriestype != nil {
		return *m.Tschchartseriesdefaultseriestype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaultshowerrorbar() bool {
	if m != nil && m.Tschchartseriesdefaultshowerrorbar != nil {
		return *m.Tschchartseriesdefaultshowerrorbar
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaultshowerrorbarscatterx() bool {
	if m != nil && m.Tschchartseriesdefaultshowerrorbarscatterx != nil {
		return *m.Tschchartseriesdefaultshowerrorbarscatterx
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesscattershowline() bool {
	if m != nil && m.Tschchartseriesscattershowline != nil {
		return *m.Tschchartseriesscattershowline
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesbubbleshownegativedata() bool {
	if m != nil && m.Tschchartseriesbubbleshownegativedata != nil {
		return *m.Tschchartseriesbubbleshownegativedata
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriespieshowserieslabels() bool {
	if m != nil && m.Tschchartseriespieshowserieslabels != nil {
		return *m.Tschchartseriespieshowserieslabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesareashowsymbol() bool {
	if m != nil && m.Tschchartseriesareashowsymbol != nil {
		return *m.Tschchartseriesareashowsymbol
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartserieslineshowsymbol() bool {
	if m != nil && m.Tschchartserieslineshowsymbol != nil {
		return *m.Tschchartserieslineshowsymbol
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesmixedareashowsymbol() bool {
	if m != nil && m.Tschchartseriesmixedareashowsymbol != nil {
		return *m.Tschchartseriesmixedareashowsymbol
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesmixedlineshowsymbol() bool {
	if m != nil && m.Tschchartseriesmixedlineshowsymbol != nil {
		return *m.Tschchartseriesmixedlineshowsymbol
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesscattershowsymbol() bool {
	if m != nil && m.Tschchartseriesscattershowsymbol != nil {
		return *m.Tschchartseriesscattershowsymbol
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaultshowtrendline() bool {
	if m != nil && m.Tschchartseriesdefaultshowtrendline != nil {
		return *m.Tschchartseriesdefaultshowtrendline
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesareashowvaluelabels() bool {
	if m != nil && m.Tschchartseriesareashowvaluelabels != nil {
		return *m.Tschchartseriesareashowvaluelabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesbarshowvaluelabels() bool {
	if m != nil && m.Tschchartseriesbarshowvaluelabels != nil {
		return *m.Tschchartseriesbarshowvaluelabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesbubbleshowvaluelabels() bool {
	if m != nil && m.Tschchartseriesbubbleshowvaluelabels != nil {
		return *m.Tschchartseriesbubbleshowvaluelabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaultshowvaluelabels() bool {
	if m != nil && m.Tschchartseriesdefaultshowvaluelabels != nil {
		return *m.Tschchartseriesdefaultshowvaluelabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartserieslineshowvaluelabels() bool {
	if m != nil && m.Tschchartserieslineshowvaluelabels != nil {
		return *m.Tschchartserieslineshowvaluelabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesmixedshowvaluelabels() bool {
	if m != nil && m.Tschchartseriesmixedshowvaluelabels != nil {
		return *m.Tschchartseriesmixedshowvaluelabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriespieshowvaluelabels() bool {
	if m != nil && m.Tschchartseriespieshowvaluelabels != nil {
		return *m.Tschchartseriespieshowvaluelabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesscattershowvaluelabels() bool {
	if m != nil && m.Tschchartseriesscattershowvaluelabels != nil {
		return *m.Tschchartseriesscattershowvaluelabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesbubblesizedimension() int32 {
	if m != nil && m.Tschchartseriesbubblesizedimension != nil {
		return *m.Tschchartseriesbubblesizedimension
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesareasymboltype() int32 {
	if m != nil && m.Tschchartseriesareasymboltype != nil {
		return *m.Tschchartseriesareasymboltype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartserieslinesymboltype() int32 {
	if m != nil && m.Tschchartserieslinesymboltype != nil {
		return *m.Tschchartserieslinesymboltype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesmixedareasymboltype() int32 {
	if m != nil && m.Tschchartseriesmixedareasymboltype != nil {
		return *m.Tschchartseriesmixedareasymboltype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesmixedlinesymboltype() int32 {
	if m != nil && m.Tschchartseriesmixedlinesymboltype != nil {
		return *m.Tschchartseriesmixedlinesymboltype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesscattersymboltype() int32 {
	if m != nil && m.Tschchartseriesscattersymboltype != nil {
		return *m.Tschchartseriesscattersymboltype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlineequationoffsetx() float32 {
	if m != nil && m.Tschchartseriesdefaulttrendlineequationoffsetx != nil {
		return *m.Tschchartseriesdefaulttrendlineequationoffsetx
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlineequationoffsety() float32 {
	if m != nil && m.Tschchartseriesdefaulttrendlineequationoffsety != nil {
		return *m.Tschchartseriesdefaulttrendlineequationoffsety
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlinelabelstring() string {
	if m != nil && m.Tschchartseriesdefaulttrendlinelabelstring != nil {
		return *m.Tschchartseriesdefaulttrendlinelabelstring
	}
	return ""
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlineorder() int32 {
	if m != nil && m.Tschchartseriesdefaulttrendlineorder != nil {
		return *m.Tschchartseriesdefaulttrendlineorder
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlineperiod() int32 {
	if m != nil && m.Tschchartseriesdefaulttrendlineperiod != nil {
		return *m.Tschchartseriesdefaulttrendlineperiod
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlinersquaredoffsetx() float32 {
	if m != nil && m.Tschchartseriesdefaulttrendlinersquaredoffsetx != nil {
		return *m.Tschchartseriesdefaulttrendlinersquaredoffsetx
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlinersquaredoffsety() float32 {
	if m != nil && m.Tschchartseriesdefaulttrendlinersquaredoffsety != nil {
		return *m.Tschchartseriesdefaulttrendlinersquaredoffsety
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlineshowequation() bool {
	if m != nil && m.Tschchartseriesdefaulttrendlineshowequation != nil {
		return *m.Tschchartseriesdefaulttrendlineshowequation
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlineshowlabel() bool {
	if m != nil && m.Tschchartseriesdefaulttrendlineshowlabel != nil {
		return *m.Tschchartseriesdefaulttrendlineshowlabel
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlineshowr2Value() bool {
	if m != nil && m.Tschchartseriesdefaulttrendlineshowr2Value != nil {
		return *m.Tschchartseriesdefaulttrendlineshowr2Value
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaulttrendlinetype() int32 {
	if m != nil && m.Tschchartseriesdefaulttrendlinetype != nil {
		return *m.Tschchartseriesdefaulttrendlinetype
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriespiewedgeexplosion() float32 {
	if m != nil && m.Tschchartseriespiewedgeexplosion != nil {
		return *m.Tschchartseriespiewedgeexplosion
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesdefaultyaxisordinal() int32 {
	if m != nil && m.Tschchartseriesdefaultyaxisordinal != nil {
		return *m.Tschchartseriesdefaultyaxisordinal
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesbubbleshowserieslabels() bool {
	if m != nil && m.Tschchartseriesbubbleshowserieslabels != nil {
		return *m.Tschchartseriesbubbleshowserieslabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesbubblevaluelabelsaxis() int32 {
	if m != nil && m.Tschchartseriesbubblevaluelabelsaxis != nil {
		return *m.Tschchartseriesbubblevaluelabelsaxis
	}
	return 0
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesscattershowserieslabels() bool {
	if m != nil && m.Tschchartseriesscattershowserieslabels != nil {
		return *m.Tschchartseriesscattershowserieslabels
	}
	return false
}

func (m *ChartSeriesNonStyleArchive) GetTschchartseriesscattervaluelabelsaxis() int32 {
	if m != nil && m.Tschchartseriesscattervaluelabelsaxis != nil {
		return *m.Tschchartseriesscattervaluelabelsaxis
	}
	return 0
}

var E_ChartSeriesNonStyleArchive_Current = &proto.ExtensionDesc{
	ExtendedType:  (*TSCH1.ChartSeriesNonStyleArchive)(nil),
	ExtensionType: (*ChartSeriesNonStyleArchive)(nil),
	Field:         10000,
	Name:          "TSCH.Generated.ChartSeriesNonStyleArchive.current",
	Tag:           "bytes,10000,opt,name=current",
}

func init() {
	proto.RegisterExtension(E_ChartStyleArchive_Current)
	proto.RegisterExtension(E_ChartNonStyleArchive_Current)
	proto.RegisterExtension(E_LegendStyleArchive_Current)
	proto.RegisterExtension(E_LegendNonStyleArchive_Current)
	proto.RegisterExtension(E_ChartAxisStyleArchive_Current)
	proto.RegisterExtension(E_ChartAxisNonStyleArchive_Current)
	proto.RegisterExtension(E_ChartSeriesStyleArchive_Current)
	proto.RegisterExtension(E_ChartSeriesNonStyleArchive_Current)
}
