// Code generated by protoc-gen-go.
// source: TSTCommandArchives.proto
// DO NOT EDIT!

/*
Package TST is a generated protocol buffer package.

It is generated from these files:
	TSTCommandArchives.proto

It has these top-level messages:
	TableCommandArchive
	CommandChangeFreezeHeaderStateArchive
	CommandDeleteCellsArchive
	CommandDeleteCellContentsArchive
	CommandSetMultipleCellsArchive
	CommandSetMultipleCellsCustomArchive
	CommandSetMultipleCellsMultipleChoiceListArchive
	CommandCoerceMultipleCellsArchive
	CommandSetControlCellsDisplayNumberFormatArchive
	CommandSetAutomaticFormatArchive
	CommandSetAutomaticDurationUnitsArchive
	CommandInsertColumnsOrRowsArchive
	CommandPasteArchive
	CommandRemoveColumnsOrRowsArchive
	CommandResizeColumnOrRowArchive
	CommandSetCellArchive
	CommandTextPreflightInsertCellArchive
	CommandPostflightSetCellArchive
	CommandSetNumberOfHeadersOrFootersArchive
	CommandFixWPStylesInRowsOrColumnsArchive
	CommandFixStylesInHeadersOrFootersArchive
	CommandSetTableNameArchive
	CommandSetTableNameEnabledArchive
	CommandSetTableFontSizeArchive
	CommandSetTableFontNameArchive
	CommandSetTableNameHeightArchive
	CommandStyleCellsArchive
	CommandStyleTableArchive
	CommandFillCellsArchive
	CommandReplaceTextArchive
	CommandReplaceAllTextArchive
	CommandSetRepeatingHeaderEnabledArchive
	CommandSetFiltersEnabledArchive
	CommandAddQuickFilterRulesArchive
	CommandDeleteFilterRulesArchive
	CommandModifyFilterRuleArchive
	CommandApplyStrokePresetArchive
	CommandApplyTableStylePresetArchive
	CommandSetStyleApplyClearsAllFlagArchive
	CommandApplyThemeToTableArchive
	CommandApplyThemeChildForTableArchive
	CommandToggleTextPropertyArchive
	CommandResetFillPropertyToDefault
	CommandSetSingleNumberFormatParameterArchive
	CommandSetBaseArchive
	CommandSetBasePlacesArchive
	CommandSetBaseUseMinusSignArchive
	CommandSetControlMinimumArchive
	CommandSetControlMaximumArchive
	CommandSetControlIncrementArchive
	CommandSetCurrencyCodeArchive
	CommandSetFractionAccuracyArchive
	CommandSetMultipleChoiceListFormatForEditedItemArchive
	CommandSetMultipleChoiceListFormatForDeleteItemArchive
	CommandSetMultipleChoiceListFormatForReorderItemArchive
	CommandSetMultipleChoiceListFormatForInitialValueArchive
	CommandSetNegativeNumberStyleArchive
	CommandSetExplicitFormatArchive
	CommandSetNumberOfDecimalPlacesArchive
	CommandSetDateTimeFormatArchive
	CommandSetShowThousandsSeparatorArchive
	CommandSetUseAccountingStyleArchive
	CommandMoveRowsArchive
	CommandMoveColumnsArchive
	CommandSortArchive
	CommandRewriteFormulasForSortArchive
	CommandRewriteFormulasForTectonicShiftArchive
	CommandRewriteFormulasForMoveArchive
	CommandRewriteFormulasForCellMergeArchive
	CommandRewriteFilterFormulasForTableResizeArchive
	CommandRewriteFilterFormulasForTectonicShiftArchive
	CommandRewriteFilterFormulasForSortArchive
	CommandRewriteConditionalStylesForTectonicShiftArchive
	CommandRewriteConditionalStylesForSortArchive
	CommandRewriteConditionalStylesForRangeMoveArchive
	CommandRewriteConditionalStylesForCellMergeArchive
	CommandMergeUnmergeArchive
	CommandHideShowArchive
	TableInfoGeometryCommandArchive
	FormulaEditingCommandGroupArchive
	FormulaEditingCommandSelectionBehaviorArchive
	UndoRedoStateCommandSelectionBehaviorArchive
	TableCommandSelectionBehaviorArchive
	DisableTableNameSelectionBehaviorArchive
	CommandApplyCellCommentArchive
	CommandApplyConditionalStyleSetArchive
	CommandSetFormulaTokenizationArchive
	CommandSetFilterEnabledArchive
	CommandSetFilterRuleEnabledArchive
	CommandSetFilterSetTypeArchive
	CommandSetStyleNetworkArchive
	CommandMutateCellsArchive
	CommandDisableFilterRulesForColumnArchive
	CommandSetTextStyleArchive
	CommandNotifyForTransformingArchive
	CommandSetStorageLanguageArchive
*/
package TST

import proto "github.com/golang/protobuf/proto"
import math "math"
import "github.com/orcastor/iwork-converter//proto/TSP"
import "github.com/orcastor/iwork-converter//proto/TSD"
import "github.com/orcastor/iwork-converter//proto/TSK"
import "github.com/orcastor/iwork-converter//proto/TSS"
import "github.com/orcastor/iwork-converter//proto/TSCE"
import "github.com/orcastor/iwork-converter//proto/TSWP"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type CommandDirectionArchive int32

const (
	CommandDirectionArchive_directionRow    CommandDirectionArchive = 0
	CommandDirectionArchive_directionColumn CommandDirectionArchive = 1
)

var CommandDirectionArchive_name = map[int32]string{
	0: "directionRow",
	1: "directionColumn",
}
var CommandDirectionArchive_value = map[string]int32{
	"directionRow":    0,
	"directionColumn": 1,
}

func (x CommandDirectionArchive) Enum() *CommandDirectionArchive {
	p := new(CommandDirectionArchive)
	*p = x
	return p
}
func (x CommandDirectionArchive) String() string {
	return proto.EnumName(CommandDirectionArchive_name, int32(x))
}
func (x *CommandDirectionArchive) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandDirectionArchive_value, data, "CommandDirectionArchive")
	if err != nil {
		return err
	}
	*x = CommandDirectionArchive(value)
	return nil
}

type CommandRegionArchive int32

const (
	CommandRegionArchive_bodyRegion         CommandRegionArchive = 0
	CommandRegionArchive_headerRowRegion    CommandRegionArchive = 1
	CommandRegionArchive_headerColumnRegion CommandRegionArchive = 2
	CommandRegionArchive_footerRowRegion    CommandRegionArchive = 3
)

var CommandRegionArchive_name = map[int32]string{
	0: "bodyRegion",
	1: "headerRowRegion",
	2: "headerColumnRegion",
	3: "footerRowRegion",
}
var CommandRegionArchive_value = map[string]int32{
	"bodyRegion":         0,
	"headerRowRegion":    1,
	"headerColumnRegion": 2,
	"footerRowRegion":    3,
}

func (x CommandRegionArchive) Enum() *CommandRegionArchive {
	p := new(CommandRegionArchive)
	*p = x
	return p
}
func (x CommandRegionArchive) String() string {
	return proto.EnumName(CommandRegionArchive_name, int32(x))
}
func (x *CommandRegionArchive) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandRegionArchive_value, data, "CommandRegionArchive")
	if err != nil {
		return err
	}
	*x = CommandRegionArchive(value)
	return nil
}

type TableCommandArchive struct {
	TableInfo          *TSP.Reference      `protobuf:"bytes,1,req,name=tableInfo" json:"tableInfo,omitempty"`
	Commandname        *string             `protobuf:"bytes,2,opt,name=commandname" json:"commandname,omitempty"`
	Super              *TSK.CommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	EditingModeAtStart *uint32             `protobuf:"varint,4,opt,name=editing_mode_at_start" json:"editing_mode_at_start,omitempty"`
	XXX_unrecognized   []byte              `json:"-"`
}

func (m *TableCommandArchive) Reset()         { *m = TableCommandArchive{} }
func (m *TableCommandArchive) String() string { return proto.CompactTextString(m) }
func (*TableCommandArchive) ProtoMessage()    {}

func (m *TableCommandArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *TableCommandArchive) GetCommandname() string {
	if m != nil && m.Commandname != nil {
		return *m.Commandname
	}
	return ""
}

func (m *TableCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *TableCommandArchive) GetEditingModeAtStart() uint32 {
	if m != nil && m.EditingModeAtStart != nil {
		return *m.EditingModeAtStart
	}
	return 0
}

type CommandChangeFreezeHeaderStateArchive struct {
	Direction        *CommandDirectionArchive `protobuf:"varint,1,req,name=direction,enum=CommandDirectionArchive" json:"direction,omitempty"`
	NewFreezeState   *bool                    `protobuf:"varint,2,req,name=new_freeze_state" json:"new_freeze_state,omitempty"`
	Super            *TableCommandArchive     `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CommandChangeFreezeHeaderStateArchive) Reset()         { *m = CommandChangeFreezeHeaderStateArchive{} }
func (m *CommandChangeFreezeHeaderStateArchive) String() string { return proto.CompactTextString(m) }
func (*CommandChangeFreezeHeaderStateArchive) ProtoMessage()    {}

func (m *CommandChangeFreezeHeaderStateArchive) GetDirection() CommandDirectionArchive {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return CommandDirectionArchive_directionRow
}

func (m *CommandChangeFreezeHeaderStateArchive) GetNewFreezeState() bool {
	if m != nil && m.NewFreezeState != nil {
		return *m.NewFreezeState
	}
	return false
}

func (m *CommandChangeFreezeHeaderStateArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandDeleteCellsArchive struct {
	Selection          *SelectionArchive    `protobuf:"bytes,1,req,name=selection" json:"selection,omitempty"`
	UndoMap            *CellMapArchive      `protobuf:"bytes,2,req,name=undo_map" json:"undo_map,omitempty"`
	Super              *TableCommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	RedoMap            *CellMapArchive      `protobuf:"bytes,4,req,name=redo_map" json:"redo_map,omitempty"`
	InvalidateComments *bool                `protobuf:"varint,5,req,name=invalidate_comments" json:"invalidate_comments,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *CommandDeleteCellsArchive) Reset()         { *m = CommandDeleteCellsArchive{} }
func (m *CommandDeleteCellsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandDeleteCellsArchive) ProtoMessage()    {}

func (m *CommandDeleteCellsArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandDeleteCellsArchive) GetUndoMap() *CellMapArchive {
	if m != nil {
		return m.UndoMap
	}
	return nil
}

func (m *CommandDeleteCellsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandDeleteCellsArchive) GetRedoMap() *CellMapArchive {
	if m != nil {
		return m.RedoMap
	}
	return nil
}

func (m *CommandDeleteCellsArchive) GetInvalidateComments() bool {
	if m != nil && m.InvalidateComments != nil {
		return *m.InvalidateComments
	}
	return false
}

type CommandDeleteCellContentsArchive struct {
	Selection          *SelectionArchive    `protobuf:"bytes,1,req,name=selection" json:"selection,omitempty"`
	UndoMap            *CellMapArchive      `protobuf:"bytes,2,req,name=undo_map" json:"undo_map,omitempty"`
	Super              *TableCommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	RedoMap            *CellMapArchive      `protobuf:"bytes,4,req,name=redo_map" json:"redo_map,omitempty"`
	InvalidateComments *bool                `protobuf:"varint,5,req,name=invalidate_comments" json:"invalidate_comments,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *CommandDeleteCellContentsArchive) Reset()         { *m = CommandDeleteCellContentsArchive{} }
func (m *CommandDeleteCellContentsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandDeleteCellContentsArchive) ProtoMessage()    {}

func (m *CommandDeleteCellContentsArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandDeleteCellContentsArchive) GetUndoMap() *CellMapArchive {
	if m != nil {
		return m.UndoMap
	}
	return nil
}

func (m *CommandDeleteCellContentsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandDeleteCellContentsArchive) GetRedoMap() *CellMapArchive {
	if m != nil {
		return m.RedoMap
	}
	return nil
}

func (m *CommandDeleteCellContentsArchive) GetInvalidateComments() bool {
	if m != nil && m.InvalidateComments != nil {
		return *m.InvalidateComments
	}
	return false
}

type CommandSetMultipleCellsArchive struct {
	Selection           *SelectionArchive    `protobuf:"bytes,1,req,name=selection" json:"selection,omitempty"`
	UndoMap             *CellMapArchive      `protobuf:"bytes,2,req,name=undo_map" json:"undo_map,omitempty"`
	RedoMap             *CellMapArchive      `protobuf:"bytes,3,req,name=redo_map" json:"redo_map,omitempty"`
	SourceCell          *Cell                `protobuf:"bytes,4,opt,name=source_cell" json:"source_cell,omitempty"`
	OnlyIfFormatDiffers *bool                `protobuf:"varint,6,opt,name=only_if_format_differs" json:"only_if_format_differs,omitempty"`
	Super               *TableCommandArchive `protobuf:"bytes,7,req,name=super" json:"super,omitempty"`
	XXX_unrecognized    []byte               `json:"-"`
}

func (m *CommandSetMultipleCellsArchive) Reset()         { *m = CommandSetMultipleCellsArchive{} }
func (m *CommandSetMultipleCellsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetMultipleCellsArchive) ProtoMessage()    {}

func (m *CommandSetMultipleCellsArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandSetMultipleCellsArchive) GetUndoMap() *CellMapArchive {
	if m != nil {
		return m.UndoMap
	}
	return nil
}

func (m *CommandSetMultipleCellsArchive) GetRedoMap() *CellMapArchive {
	if m != nil {
		return m.RedoMap
	}
	return nil
}

func (m *CommandSetMultipleCellsArchive) GetSourceCell() *Cell {
	if m != nil {
		return m.SourceCell
	}
	return nil
}

func (m *CommandSetMultipleCellsArchive) GetOnlyIfFormatDiffers() bool {
	if m != nil && m.OnlyIfFormatDiffers != nil {
		return *m.OnlyIfFormatDiffers
	}
	return false
}

func (m *CommandSetMultipleCellsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetMultipleCellsCustomArchive struct {
	Selection        *SelectionArchive        `protobuf:"bytes,1,req,name=selection" json:"selection,omitempty"`
	UndoMap          *CellMapArchive          `protobuf:"bytes,2,req,name=undo_map" json:"undo_map,omitempty"`
	RedoMap          *CellMapArchive          `protobuf:"bytes,3,req,name=redo_map" json:"redo_map,omitempty"`
	CellFormat       *TSK.FormatStructArchive `protobuf:"bytes,4,req,name=cell_format" json:"cell_format,omitempty"`
	Super            *TableCommandArchive     `protobuf:"bytes,7,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CommandSetMultipleCellsCustomArchive) Reset()         { *m = CommandSetMultipleCellsCustomArchive{} }
func (m *CommandSetMultipleCellsCustomArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetMultipleCellsCustomArchive) ProtoMessage()    {}

func (m *CommandSetMultipleCellsCustomArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandSetMultipleCellsCustomArchive) GetUndoMap() *CellMapArchive {
	if m != nil {
		return m.UndoMap
	}
	return nil
}

func (m *CommandSetMultipleCellsCustomArchive) GetRedoMap() *CellMapArchive {
	if m != nil {
		return m.RedoMap
	}
	return nil
}

func (m *CommandSetMultipleCellsCustomArchive) GetCellFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.CellFormat
	}
	return nil
}

func (m *CommandSetMultipleCellsCustomArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetMultipleCellsMultipleChoiceListArchive struct {
	Selection        *SelectionArchive    `protobuf:"bytes,1,req,name=selection" json:"selection,omitempty"`
	UndoMap          *CellMapArchive      `protobuf:"bytes,2,req,name=undo_map" json:"undo_map,omitempty"`
	RedoMap          *CellMapArchive      `protobuf:"bytes,3,req,name=redo_map" json:"redo_map,omitempty"`
	Super            *TableCommandArchive `protobuf:"bytes,5,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetMultipleCellsMultipleChoiceListArchive) Reset() {
	*m = CommandSetMultipleCellsMultipleChoiceListArchive{}
}
func (m *CommandSetMultipleCellsMultipleChoiceListArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSetMultipleCellsMultipleChoiceListArchive) ProtoMessage() {}

func (m *CommandSetMultipleCellsMultipleChoiceListArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandSetMultipleCellsMultipleChoiceListArchive) GetUndoMap() *CellMapArchive {
	if m != nil {
		return m.UndoMap
	}
	return nil
}

func (m *CommandSetMultipleCellsMultipleChoiceListArchive) GetRedoMap() *CellMapArchive {
	if m != nil {
		return m.RedoMap
	}
	return nil
}

func (m *CommandSetMultipleCellsMultipleChoiceListArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandCoerceMultipleCellsArchive struct {
	Selection        *SelectionArchive    `protobuf:"bytes,1,req,name=selection" json:"selection,omitempty"`
	UndoMap          *CellMapArchive      `protobuf:"bytes,2,req,name=undo_map" json:"undo_map,omitempty"`
	RedoMap          *CellMapArchive      `protobuf:"bytes,3,req,name=redo_map" json:"redo_map,omitempty"`
	DesiredFormat    *int32               `protobuf:"varint,4,req,name=desired_format" json:"desired_format,omitempty"`
	Super            *TableCommandArchive `protobuf:"bytes,6,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandCoerceMultipleCellsArchive) Reset()         { *m = CommandCoerceMultipleCellsArchive{} }
func (m *CommandCoerceMultipleCellsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandCoerceMultipleCellsArchive) ProtoMessage()    {}

func (m *CommandCoerceMultipleCellsArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandCoerceMultipleCellsArchive) GetUndoMap() *CellMapArchive {
	if m != nil {
		return m.UndoMap
	}
	return nil
}

func (m *CommandCoerceMultipleCellsArchive) GetRedoMap() *CellMapArchive {
	if m != nil {
		return m.RedoMap
	}
	return nil
}

func (m *CommandCoerceMultipleCellsArchive) GetDesiredFormat() int32 {
	if m != nil && m.DesiredFormat != nil {
		return *m.DesiredFormat
	}
	return 0
}

func (m *CommandCoerceMultipleCellsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetControlCellsDisplayNumberFormatArchive struct {
	Selection        *SelectionArchive    `protobuf:"bytes,1,req,name=selection" json:"selection,omitempty"`
	UndoMap          *CellMapArchive      `protobuf:"bytes,2,req,name=undo_map" json:"undo_map,omitempty"`
	RedoMap          *CellMapArchive      `protobuf:"bytes,3,req,name=redo_map" json:"redo_map,omitempty"`
	Super            *TableCommandArchive `protobuf:"bytes,6,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetControlCellsDisplayNumberFormatArchive) Reset() {
	*m = CommandSetControlCellsDisplayNumberFormatArchive{}
}
func (m *CommandSetControlCellsDisplayNumberFormatArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSetControlCellsDisplayNumberFormatArchive) ProtoMessage() {}

func (m *CommandSetControlCellsDisplayNumberFormatArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandSetControlCellsDisplayNumberFormatArchive) GetUndoMap() *CellMapArchive {
	if m != nil {
		return m.UndoMap
	}
	return nil
}

func (m *CommandSetControlCellsDisplayNumberFormatArchive) GetRedoMap() *CellMapArchive {
	if m != nil {
		return m.RedoMap
	}
	return nil
}

func (m *CommandSetControlCellsDisplayNumberFormatArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetAutomaticFormatArchive struct {
	Selection        *SelectionArchive    `protobuf:"bytes,1,req,name=selection" json:"selection,omitempty"`
	UndoMap          *CellMapArchive      `protobuf:"bytes,2,req,name=undo_map" json:"undo_map,omitempty"`
	RedoMap          *CellMapArchive      `protobuf:"bytes,3,req,name=redo_map" json:"redo_map,omitempty"`
	Super            *TableCommandArchive `protobuf:"bytes,6,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetAutomaticFormatArchive) Reset()         { *m = CommandSetAutomaticFormatArchive{} }
func (m *CommandSetAutomaticFormatArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetAutomaticFormatArchive) ProtoMessage()    {}

func (m *CommandSetAutomaticFormatArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandSetAutomaticFormatArchive) GetUndoMap() *CellMapArchive {
	if m != nil {
		return m.UndoMap
	}
	return nil
}

func (m *CommandSetAutomaticFormatArchive) GetRedoMap() *CellMapArchive {
	if m != nil {
		return m.RedoMap
	}
	return nil
}

func (m *CommandSetAutomaticFormatArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetAutomaticDurationUnitsArchive struct {
	Selection        *SelectionArchive    `protobuf:"bytes,1,req,name=selection" json:"selection,omitempty"`
	UndoMap          *CellMapArchive      `protobuf:"bytes,2,req,name=undo_map" json:"undo_map,omitempty"`
	RedoMap          *CellMapArchive      `protobuf:"bytes,3,req,name=redo_map" json:"redo_map,omitempty"`
	AutomaticUnits   *bool                `protobuf:"varint,4,opt,name=automatic_units" json:"automatic_units,omitempty"`
	Super            *TableCommandArchive `protobuf:"bytes,6,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetAutomaticDurationUnitsArchive) Reset() {
	*m = CommandSetAutomaticDurationUnitsArchive{}
}
func (m *CommandSetAutomaticDurationUnitsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetAutomaticDurationUnitsArchive) ProtoMessage()    {}

func (m *CommandSetAutomaticDurationUnitsArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandSetAutomaticDurationUnitsArchive) GetUndoMap() *CellMapArchive {
	if m != nil {
		return m.UndoMap
	}
	return nil
}

func (m *CommandSetAutomaticDurationUnitsArchive) GetRedoMap() *CellMapArchive {
	if m != nil {
		return m.RedoMap
	}
	return nil
}

func (m *CommandSetAutomaticDurationUnitsArchive) GetAutomaticUnits() bool {
	if m != nil && m.AutomaticUnits != nil {
		return *m.AutomaticUnits
	}
	return false
}

func (m *CommandSetAutomaticDurationUnitsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandInsertColumnsOrRowsArchive struct {
	Direction               *CommandDirectionArchive                            `protobuf:"varint,1,req,name=direction,enum=CommandDirectionArchive" json:"direction,omitempty"`
	Index                   *uint32                                             `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	Count                   *uint32                                             `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	Size                    *float32                                            `protobuf:"fixed32,4,req,name=size" json:"size,omitempty"`
	Before                  *bool                                               `protobuf:"varint,5,req,name=before" json:"before,omitempty"`
	HeaderCount             *uint32                                             `protobuf:"varint,11,req,name=header_count" json:"header_count,omitempty"`
	HeadersAdded            *uint32                                             `protobuf:"varint,12,req,name=headers_added" json:"headers_added,omitempty"`
	FooterCount             *uint32                                             `protobuf:"varint,13,req,name=footer_count" json:"footer_count,omitempty"`
	FootersAdded            *uint32                                             `protobuf:"varint,14,req,name=footers_added" json:"footers_added,omitempty"`
	RowColumnStyle          *TSP.Reference                                      `protobuf:"bytes,8,opt,name=row_column_style" json:"row_column_style,omitempty"`
	CellStyleRedo           *CellMapArchive                                     `protobuf:"bytes,9,opt,name=cell_style_redo" json:"cell_style_redo,omitempty"`
	Super                   *TableCommandArchive                                `protobuf:"bytes,10,req,name=super" json:"super,omitempty"`
	FormulaRewriteCommand   *TSP.Reference                                      `protobuf:"bytes,15,opt,name=formula_rewrite_command" json:"formula_rewrite_command,omitempty"`
	WidthFactor             *float32                                            `protobuf:"fixed32,16,req,name=width_factor" json:"width_factor,omitempty"`
	HeightFactor            *float32                                            `protobuf:"fixed32,17,req,name=height_factor" json:"height_factor,omitempty"`
	AllowHorizontalAutosize *bool                                               `protobuf:"varint,18,opt,name=allow_horizontal_autosize" json:"allow_horizontal_autosize,omitempty"`
	InheritStyles           *bool                                               `protobuf:"varint,19,opt,name=inherit_styles" json:"inherit_styles,omitempty"`
	InheritFormats          *bool                                               `protobuf:"varint,20,opt,name=inherit_formats" json:"inherit_formats,omitempty"`
	InheritFormulas         *bool                                               `protobuf:"varint,24,opt,name=inherit_formulas" json:"inherit_formulas,omitempty"`
	CellStyleIndexPairs     []*CommandInsertColumnsOrRowsArchive_StyleIndexPair `protobuf:"bytes,21,rep,name=cell_style_index_pairs" json:"cell_style_index_pairs,omitempty"`
	TextStyleIndexPairs     []*CommandInsertColumnsOrRowsArchive_StyleIndexPair `protobuf:"bytes,22,rep,name=text_style_index_pairs" json:"text_style_index_pairs,omitempty"`
	Sizes                   []float64                                           `protobuf:"fixed64,23,rep,name=sizes" json:"sizes,omitempty"`
	XXX_unrecognized        []byte                                              `json:"-"`
}

func (m *CommandInsertColumnsOrRowsArchive) Reset()         { *m = CommandInsertColumnsOrRowsArchive{} }
func (m *CommandInsertColumnsOrRowsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandInsertColumnsOrRowsArchive) ProtoMessage()    {}

func (m *CommandInsertColumnsOrRowsArchive) GetDirection() CommandDirectionArchive {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return CommandDirectionArchive_directionRow
}

func (m *CommandInsertColumnsOrRowsArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandInsertColumnsOrRowsArchive) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CommandInsertColumnsOrRowsArchive) GetSize() float32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *CommandInsertColumnsOrRowsArchive) GetBefore() bool {
	if m != nil && m.Before != nil {
		return *m.Before
	}
	return false
}

func (m *CommandInsertColumnsOrRowsArchive) GetHeaderCount() uint32 {
	if m != nil && m.HeaderCount != nil {
		return *m.HeaderCount
	}
	return 0
}

func (m *CommandInsertColumnsOrRowsArchive) GetHeadersAdded() uint32 {
	if m != nil && m.HeadersAdded != nil {
		return *m.HeadersAdded
	}
	return 0
}

func (m *CommandInsertColumnsOrRowsArchive) GetFooterCount() uint32 {
	if m != nil && m.FooterCount != nil {
		return *m.FooterCount
	}
	return 0
}

func (m *CommandInsertColumnsOrRowsArchive) GetFootersAdded() uint32 {
	if m != nil && m.FootersAdded != nil {
		return *m.FootersAdded
	}
	return 0
}

func (m *CommandInsertColumnsOrRowsArchive) GetRowColumnStyle() *TSP.Reference {
	if m != nil {
		return m.RowColumnStyle
	}
	return nil
}

func (m *CommandInsertColumnsOrRowsArchive) GetCellStyleRedo() *CellMapArchive {
	if m != nil {
		return m.CellStyleRedo
	}
	return nil
}

func (m *CommandInsertColumnsOrRowsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandInsertColumnsOrRowsArchive) GetFormulaRewriteCommand() *TSP.Reference {
	if m != nil {
		return m.FormulaRewriteCommand
	}
	return nil
}

func (m *CommandInsertColumnsOrRowsArchive) GetWidthFactor() float32 {
	if m != nil && m.WidthFactor != nil {
		return *m.WidthFactor
	}
	return 0
}

func (m *CommandInsertColumnsOrRowsArchive) GetHeightFactor() float32 {
	if m != nil && m.HeightFactor != nil {
		return *m.HeightFactor
	}
	return 0
}

func (m *CommandInsertColumnsOrRowsArchive) GetAllowHorizontalAutosize() bool {
	if m != nil && m.AllowHorizontalAutosize != nil {
		return *m.AllowHorizontalAutosize
	}
	return false
}

func (m *CommandInsertColumnsOrRowsArchive) GetInheritStyles() bool {
	if m != nil && m.InheritStyles != nil {
		return *m.InheritStyles
	}
	return false
}

func (m *CommandInsertColumnsOrRowsArchive) GetInheritFormats() bool {
	if m != nil && m.InheritFormats != nil {
		return *m.InheritFormats
	}
	return false
}

func (m *CommandInsertColumnsOrRowsArchive) GetInheritFormulas() bool {
	if m != nil && m.InheritFormulas != nil {
		return *m.InheritFormulas
	}
	return false
}

func (m *CommandInsertColumnsOrRowsArchive) GetCellStyleIndexPairs() []*CommandInsertColumnsOrRowsArchive_StyleIndexPair {
	if m != nil {
		return m.CellStyleIndexPairs
	}
	return nil
}

func (m *CommandInsertColumnsOrRowsArchive) GetTextStyleIndexPairs() []*CommandInsertColumnsOrRowsArchive_StyleIndexPair {
	if m != nil {
		return m.TextStyleIndexPairs
	}
	return nil
}

func (m *CommandInsertColumnsOrRowsArchive) GetSizes() []float64 {
	if m != nil {
		return m.Sizes
	}
	return nil
}

type CommandInsertColumnsOrRowsArchive_StyleIndexPair struct {
	Style            *TSP.Reference `protobuf:"bytes,1,req,name=style" json:"style,omitempty"`
	Index            *uint32        `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CommandInsertColumnsOrRowsArchive_StyleIndexPair) Reset() {
	*m = CommandInsertColumnsOrRowsArchive_StyleIndexPair{}
}
func (m *CommandInsertColumnsOrRowsArchive_StyleIndexPair) String() string {
	return proto.CompactTextString(m)
}
func (*CommandInsertColumnsOrRowsArchive_StyleIndexPair) ProtoMessage() {}

func (m *CommandInsertColumnsOrRowsArchive_StyleIndexPair) GetStyle() *TSP.Reference {
	if m != nil {
		return m.Style
	}
	return nil
}

func (m *CommandInsertColumnsOrRowsArchive_StyleIndexPair) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CommandPasteArchive struct {
	UserSelection          *SelectionArchive    `protobuf:"bytes,1,req,name=user_selection" json:"user_selection,omitempty"`
	FinalSelection         *SelectionArchive    `protobuf:"bytes,2,req,name=final_selection" json:"final_selection,omitempty"`
	UndoCellMap            *CellMapArchive      `protobuf:"bytes,3,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap            *CellMapArchive      `protobuf:"bytes,4,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	CommandUndo            *TSP.Reference       `protobuf:"bytes,6,opt,name=command_undo" json:"command_undo,omitempty"`
	InvalidateComments     *bool                `protobuf:"varint,7,req,name=invalidate_comments" json:"invalidate_comments,omitempty"`
	Super                  *TableCommandArchive `protobuf:"bytes,11,req,name=super" json:"super,omitempty"`
	FormulaRewriteCommands []*TSP.Reference     `protobuf:"bytes,15,rep,name=formula_rewrite_commands" json:"formula_rewrite_commands,omitempty"`
	XXX_unrecognized       []byte               `json:"-"`
}

func (m *CommandPasteArchive) Reset()         { *m = CommandPasteArchive{} }
func (m *CommandPasteArchive) String() string { return proto.CompactTextString(m) }
func (*CommandPasteArchive) ProtoMessage()    {}

func (m *CommandPasteArchive) GetUserSelection() *SelectionArchive {
	if m != nil {
		return m.UserSelection
	}
	return nil
}

func (m *CommandPasteArchive) GetFinalSelection() *SelectionArchive {
	if m != nil {
		return m.FinalSelection
	}
	return nil
}

func (m *CommandPasteArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandPasteArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandPasteArchive) GetCommandUndo() *TSP.Reference {
	if m != nil {
		return m.CommandUndo
	}
	return nil
}

func (m *CommandPasteArchive) GetInvalidateComments() bool {
	if m != nil && m.InvalidateComments != nil {
		return *m.InvalidateComments
	}
	return false
}

func (m *CommandPasteArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandPasteArchive) GetFormulaRewriteCommands() []*TSP.Reference {
	if m != nil {
		return m.FormulaRewriteCommands
	}
	return nil
}

type CommandRemoveColumnsOrRowsArchive struct {
	Super                   *TableCommandArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Direction               *CommandDirectionArchive `protobuf:"varint,2,req,name=direction,enum=CommandDirectionArchive" json:"direction,omitempty"`
	IndicesToRemove         *TSP.IndexSet            `protobuf:"bytes,3,req,name=indices_to_remove" json:"indices_to_remove,omitempty"`
	CellMap                 *CellMapArchive          `protobuf:"bytes,4,opt,name=cellMap" json:"cellMap,omitempty"`
	Oldgeom                 *TSD.GeometryArchive     `protobuf:"bytes,5,req,name=oldgeom" json:"oldgeom,omitempty"`
	Newgeom                 *TSD.GeometryArchive     `protobuf:"bytes,6,req,name=newgeom" json:"newgeom,omitempty"`
	Subsizes                []float32                `protobuf:"fixed32,7,rep,name=subsizes" json:"subsizes,omitempty"`
	FormulaRewriteCommand   *TSP.Reference           `protobuf:"bytes,8,opt,name=formula_rewrite_command" json:"formula_rewrite_command,omitempty"`
	WidthFactor             *float32                 `protobuf:"fixed32,9,req,name=width_factor" json:"width_factor,omitempty"`
	HeightFactor            *float32                 `protobuf:"fixed32,10,req,name=height_factor" json:"height_factor,omitempty"`
	AllowHorizontalAutosize *bool                    `protobuf:"varint,11,opt,name=allow_horizontal_autosize" json:"allow_horizontal_autosize,omitempty"`
	UndoMergeMap            *TSP.Reference           `protobuf:"bytes,12,opt,name=undo_merge_map" json:"undo_merge_map,omitempty"`
	RedoMergeMap            *TSP.Reference           `protobuf:"bytes,13,opt,name=redo_merge_map" json:"redo_merge_map,omitempty"`
	HidingActions           []uint32                 `protobuf:"varint,14,rep,name=hiding_actions" json:"hiding_actions,omitempty"`
	OrigFilterSet           *TSP.Reference           `protobuf:"bytes,15,opt,name=orig_filter_set" json:"orig_filter_set,omitempty"`
	UndoCommandCollector    []*TSP.Reference         `protobuf:"bytes,16,rep,name=undo_command_collector" json:"undo_command_collector,omitempty"`
	XXX_unrecognized        []byte                   `json:"-"`
}

func (m *CommandRemoveColumnsOrRowsArchive) Reset()         { *m = CommandRemoveColumnsOrRowsArchive{} }
func (m *CommandRemoveColumnsOrRowsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandRemoveColumnsOrRowsArchive) ProtoMessage()    {}

func (m *CommandRemoveColumnsOrRowsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetDirection() CommandDirectionArchive {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return CommandDirectionArchive_directionRow
}

func (m *CommandRemoveColumnsOrRowsArchive) GetIndicesToRemove() *TSP.IndexSet {
	if m != nil {
		return m.IndicesToRemove
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetCellMap() *CellMapArchive {
	if m != nil {
		return m.CellMap
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetOldgeom() *TSD.GeometryArchive {
	if m != nil {
		return m.Oldgeom
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetNewgeom() *TSD.GeometryArchive {
	if m != nil {
		return m.Newgeom
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetSubsizes() []float32 {
	if m != nil {
		return m.Subsizes
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetFormulaRewriteCommand() *TSP.Reference {
	if m != nil {
		return m.FormulaRewriteCommand
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetWidthFactor() float32 {
	if m != nil && m.WidthFactor != nil {
		return *m.WidthFactor
	}
	return 0
}

func (m *CommandRemoveColumnsOrRowsArchive) GetHeightFactor() float32 {
	if m != nil && m.HeightFactor != nil {
		return *m.HeightFactor
	}
	return 0
}

func (m *CommandRemoveColumnsOrRowsArchive) GetAllowHorizontalAutosize() bool {
	if m != nil && m.AllowHorizontalAutosize != nil {
		return *m.AllowHorizontalAutosize
	}
	return false
}

func (m *CommandRemoveColumnsOrRowsArchive) GetUndoMergeMap() *TSP.Reference {
	if m != nil {
		return m.UndoMergeMap
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetRedoMergeMap() *TSP.Reference {
	if m != nil {
		return m.RedoMergeMap
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetHidingActions() []uint32 {
	if m != nil {
		return m.HidingActions
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetOrigFilterSet() *TSP.Reference {
	if m != nil {
		return m.OrigFilterSet
	}
	return nil
}

func (m *CommandRemoveColumnsOrRowsArchive) GetUndoCommandCollector() []*TSP.Reference {
	if m != nil {
		return m.UndoCommandCollector
	}
	return nil
}

type CommandResizeColumnOrRowArchive struct {
	Direction        *CommandDirectionArchive `protobuf:"varint,1,req,name=direction,enum=CommandDirectionArchive" json:"direction,omitempty"`
	Index            *uint32                  `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	Count            *uint32                  `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	Newsize          *float32                 `protobuf:"fixed32,4,req,name=newsize" json:"newsize,omitempty"`
	Oldgeom          *TSD.GeometryArchive     `protobuf:"bytes,5,opt,name=oldgeom" json:"oldgeom,omitempty"`
	Newgeom          *TSD.GeometryArchive     `protobuf:"bytes,6,opt,name=newgeom" json:"newgeom,omitempty"`
	Subsizes         []float32                `protobuf:"fixed32,7,rep,name=subsizes" json:"subsizes,omitempty"`
	OldDefault       *float32                 `protobuf:"fixed32,8,opt,name=old_default" json:"old_default,omitempty"`
	Uniformsizes     *bool                    `protobuf:"varint,9,opt,name=uniformsizes" json:"uniformsizes,omitempty"`
	Resizemode       *uint32                  `protobuf:"varint,10,opt,name=resizemode" json:"resizemode,omitempty"`
	Super            *TableCommandArchive     `protobuf:"bytes,11,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CommandResizeColumnOrRowArchive) Reset()         { *m = CommandResizeColumnOrRowArchive{} }
func (m *CommandResizeColumnOrRowArchive) String() string { return proto.CompactTextString(m) }
func (*CommandResizeColumnOrRowArchive) ProtoMessage()    {}

func (m *CommandResizeColumnOrRowArchive) GetDirection() CommandDirectionArchive {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return CommandDirectionArchive_directionRow
}

func (m *CommandResizeColumnOrRowArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandResizeColumnOrRowArchive) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CommandResizeColumnOrRowArchive) GetNewsize() float32 {
	if m != nil && m.Newsize != nil {
		return *m.Newsize
	}
	return 0
}

func (m *CommandResizeColumnOrRowArchive) GetOldgeom() *TSD.GeometryArchive {
	if m != nil {
		return m.Oldgeom
	}
	return nil
}

func (m *CommandResizeColumnOrRowArchive) GetNewgeom() *TSD.GeometryArchive {
	if m != nil {
		return m.Newgeom
	}
	return nil
}

func (m *CommandResizeColumnOrRowArchive) GetSubsizes() []float32 {
	if m != nil {
		return m.Subsizes
	}
	return nil
}

func (m *CommandResizeColumnOrRowArchive) GetOldDefault() float32 {
	if m != nil && m.OldDefault != nil {
		return *m.OldDefault
	}
	return 0
}

func (m *CommandResizeColumnOrRowArchive) GetUniformsizes() bool {
	if m != nil && m.Uniformsizes != nil {
		return *m.Uniformsizes
	}
	return false
}

func (m *CommandResizeColumnOrRowArchive) GetResizemode() uint32 {
	if m != nil && m.Resizemode != nil {
		return *m.Resizemode
	}
	return 0
}

func (m *CommandResizeColumnOrRowArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetCellArchive struct {
	CellID                *CellID              `protobuf:"bytes,1,req,name=cellID" json:"cellID,omitempty"`
	Newcell               *Cell                `protobuf:"bytes,2,opt,name=newcell" json:"newcell,omitempty"`
	Oldcell               *Cell                `protobuf:"bytes,3,opt,name=oldcell" json:"oldcell,omitempty"`
	Super                 *TableCommandArchive `protobuf:"bytes,5,req,name=super" json:"super,omitempty"`
	PostUndoRedoSelection *bool                `protobuf:"varint,6,opt,name=post_undo_redo_selection" json:"post_undo_redo_selection,omitempty"`
	XXX_unrecognized      []byte               `json:"-"`
}

func (m *CommandSetCellArchive) Reset()         { *m = CommandSetCellArchive{} }
func (m *CommandSetCellArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetCellArchive) ProtoMessage()    {}

func (m *CommandSetCellArchive) GetCellID() *CellID {
	if m != nil {
		return m.CellID
	}
	return nil
}

func (m *CommandSetCellArchive) GetNewcell() *Cell {
	if m != nil {
		return m.Newcell
	}
	return nil
}

func (m *CommandSetCellArchive) GetOldcell() *Cell {
	if m != nil {
		return m.Oldcell
	}
	return nil
}

func (m *CommandSetCellArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetCellArchive) GetPostUndoRedoSelection() bool {
	if m != nil && m.PostUndoRedoSelection != nil {
		return *m.PostUndoRedoSelection
	}
	return false
}

type CommandTextPreflightInsertCellArchive struct {
	EditingCellID         *CellID              `protobuf:"bytes,1,req,name=editing_cellID" json:"editing_cellID,omitempty"`
	Super                 *TableCommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	CoalescedTextcommand  *TSP.Reference       `protobuf:"bytes,6,opt,name=coalesced_textcommand" json:"coalesced_textcommand,omitempty"`
	Postflightcommand     *TSP.Reference       `protobuf:"bytes,8,opt,name=postflightcommand" json:"postflightcommand,omitempty"`
	GroupedWithPostflight *bool                `protobuf:"varint,9,opt,name=grouped_with_postflight" json:"grouped_with_postflight,omitempty"`
	EditingCell           *Cell                `protobuf:"bytes,10,req,name=editing_cell" json:"editing_cell,omitempty"`
	EditingStorage        *TSP.Reference       `protobuf:"bytes,11,req,name=editing_storage" json:"editing_storage,omitempty"`
	LastColumnHitByTap    *uint32              `protobuf:"varint,12,opt,name=last_column_hit_by_tap" json:"last_column_hit_by_tap,omitempty"`
	XXX_unrecognized      []byte               `json:"-"`
}

func (m *CommandTextPreflightInsertCellArchive) Reset()         { *m = CommandTextPreflightInsertCellArchive{} }
func (m *CommandTextPreflightInsertCellArchive) String() string { return proto.CompactTextString(m) }
func (*CommandTextPreflightInsertCellArchive) ProtoMessage()    {}

func (m *CommandTextPreflightInsertCellArchive) GetEditingCellID() *CellID {
	if m != nil {
		return m.EditingCellID
	}
	return nil
}

func (m *CommandTextPreflightInsertCellArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandTextPreflightInsertCellArchive) GetCoalescedTextcommand() *TSP.Reference {
	if m != nil {
		return m.CoalescedTextcommand
	}
	return nil
}

func (m *CommandTextPreflightInsertCellArchive) GetPostflightcommand() *TSP.Reference {
	if m != nil {
		return m.Postflightcommand
	}
	return nil
}

func (m *CommandTextPreflightInsertCellArchive) GetGroupedWithPostflight() bool {
	if m != nil && m.GroupedWithPostflight != nil {
		return *m.GroupedWithPostflight
	}
	return false
}

func (m *CommandTextPreflightInsertCellArchive) GetEditingCell() *Cell {
	if m != nil {
		return m.EditingCell
	}
	return nil
}

func (m *CommandTextPreflightInsertCellArchive) GetEditingStorage() *TSP.Reference {
	if m != nil {
		return m.EditingStorage
	}
	return nil
}

func (m *CommandTextPreflightInsertCellArchive) GetLastColumnHitByTap() uint32 {
	if m != nil && m.LastColumnHitByTap != nil {
		return *m.LastColumnHitByTap
	}
	return 0
}

type CommandPostflightSetCellArchive struct {
	CellID             *CellID              `protobuf:"bytes,1,req,name=cellID" json:"cellID,omitempty"`
	Super              *TableCommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	Childcommandundo   *TSP.Reference       `protobuf:"bytes,4,opt,name=childcommandundo" json:"childcommandundo,omitempty"`
	EditingCell        *Cell                `protobuf:"bytes,6,req,name=editing_cell" json:"editing_cell,omitempty"`
	NewCell            *Cell                `protobuf:"bytes,7,req,name=new_cell" json:"new_cell,omitempty"`
	EditingStorage     *TSP.Reference       `protobuf:"bytes,8,req,name=editing_storage" json:"editing_storage,omitempty"`
	LastColumnHitByTap *uint32              `protobuf:"varint,9,opt,name=last_column_hit_by_tap" json:"last_column_hit_by_tap,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *CommandPostflightSetCellArchive) Reset()         { *m = CommandPostflightSetCellArchive{} }
func (m *CommandPostflightSetCellArchive) String() string { return proto.CompactTextString(m) }
func (*CommandPostflightSetCellArchive) ProtoMessage()    {}

func (m *CommandPostflightSetCellArchive) GetCellID() *CellID {
	if m != nil {
		return m.CellID
	}
	return nil
}

func (m *CommandPostflightSetCellArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandPostflightSetCellArchive) GetChildcommandundo() *TSP.Reference {
	if m != nil {
		return m.Childcommandundo
	}
	return nil
}

func (m *CommandPostflightSetCellArchive) GetEditingCell() *Cell {
	if m != nil {
		return m.EditingCell
	}
	return nil
}

func (m *CommandPostflightSetCellArchive) GetNewCell() *Cell {
	if m != nil {
		return m.NewCell
	}
	return nil
}

func (m *CommandPostflightSetCellArchive) GetEditingStorage() *TSP.Reference {
	if m != nil {
		return m.EditingStorage
	}
	return nil
}

func (m *CommandPostflightSetCellArchive) GetLastColumnHitByTap() uint32 {
	if m != nil && m.LastColumnHitByTap != nil {
		return *m.LastColumnHitByTap
	}
	return 0
}

type CommandSetNumberOfHeadersOrFootersArchive struct {
	Region           *CommandRegionArchive `protobuf:"varint,1,req,name=region,enum=CommandRegionArchive" json:"region,omitempty"`
	Count            *uint32               `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	Oldcount         *uint32               `protobuf:"varint,3,req,name=oldcount" json:"oldcount,omitempty"`
	Super            *TableCommandArchive  `protobuf:"bytes,6,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CommandSetNumberOfHeadersOrFootersArchive) Reset() {
	*m = CommandSetNumberOfHeadersOrFootersArchive{}
}
func (m *CommandSetNumberOfHeadersOrFootersArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetNumberOfHeadersOrFootersArchive) ProtoMessage()    {}

func (m *CommandSetNumberOfHeadersOrFootersArchive) GetRegion() CommandRegionArchive {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return CommandRegionArchive_bodyRegion
}

func (m *CommandSetNumberOfHeadersOrFootersArchive) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CommandSetNumberOfHeadersOrFootersArchive) GetOldcount() uint32 {
	if m != nil && m.Oldcount != nil {
		return *m.Oldcount
	}
	return 0
}

func (m *CommandSetNumberOfHeadersOrFootersArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandFixWPStylesInRowsOrColumnsArchive struct {
	Direction        *CommandDirectionArchive `protobuf:"varint,1,req,name=direction,enum=CommandDirectionArchive" json:"direction,omitempty"`
	Index            *uint32                  `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	UndoCellMap      *CellMapArchive          `protobuf:"bytes,3,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive          `protobuf:"bytes,4,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	Super            *TableCommandArchive     `protobuf:"bytes,6,req,name=super" json:"super,omitempty"`
	ReferenceIndex   *uint32                  `protobuf:"varint,7,req,name=reference_index" json:"reference_index,omitempty"`
	InheritStyles    *bool                    `protobuf:"varint,8,req,name=inherit_styles" json:"inherit_styles,omitempty"`
	Count            *uint32                  `protobuf:"varint,9,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CommandFixWPStylesInRowsOrColumnsArchive) Reset() {
	*m = CommandFixWPStylesInRowsOrColumnsArchive{}
}
func (m *CommandFixWPStylesInRowsOrColumnsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandFixWPStylesInRowsOrColumnsArchive) ProtoMessage()    {}

func (m *CommandFixWPStylesInRowsOrColumnsArchive) GetDirection() CommandDirectionArchive {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return CommandDirectionArchive_directionRow
}

func (m *CommandFixWPStylesInRowsOrColumnsArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandFixWPStylesInRowsOrColumnsArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandFixWPStylesInRowsOrColumnsArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandFixWPStylesInRowsOrColumnsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandFixWPStylesInRowsOrColumnsArchive) GetReferenceIndex() uint32 {
	if m != nil && m.ReferenceIndex != nil {
		return *m.ReferenceIndex
	}
	return 0
}

func (m *CommandFixWPStylesInRowsOrColumnsArchive) GetInheritStyles() bool {
	if m != nil && m.InheritStyles != nil {
		return *m.InheritStyles
	}
	return false
}

func (m *CommandFixWPStylesInRowsOrColumnsArchive) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type CommandFixStylesInHeadersOrFootersArchive struct {
	Region           *CommandRegionArchive `protobuf:"varint,1,req,name=region,enum=CommandRegionArchive" json:"region,omitempty"`
	OldNumber        *uint32               `protobuf:"varint,2,req,name=old_number" json:"old_number,omitempty"`
	NewNumber        *uint32               `protobuf:"varint,3,req,name=new_number" json:"new_number,omitempty"`
	RedoCellMap      *CellMapArchive       `protobuf:"bytes,4,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	UndoCellMap      *CellMapArchive       `protobuf:"bytes,5,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	Super            *TableCommandArchive  `protobuf:"bytes,6,req,name=super" json:"super,omitempty"`
	Textundo         *TSP.Reference        `protobuf:"bytes,7,opt,name=textundo" json:"textundo,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CommandFixStylesInHeadersOrFootersArchive) Reset() {
	*m = CommandFixStylesInHeadersOrFootersArchive{}
}
func (m *CommandFixStylesInHeadersOrFootersArchive) String() string { return proto.CompactTextString(m) }
func (*CommandFixStylesInHeadersOrFootersArchive) ProtoMessage()    {}

func (m *CommandFixStylesInHeadersOrFootersArchive) GetRegion() CommandRegionArchive {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return CommandRegionArchive_bodyRegion
}

func (m *CommandFixStylesInHeadersOrFootersArchive) GetOldNumber() uint32 {
	if m != nil && m.OldNumber != nil {
		return *m.OldNumber
	}
	return 0
}

func (m *CommandFixStylesInHeadersOrFootersArchive) GetNewNumber() uint32 {
	if m != nil && m.NewNumber != nil {
		return *m.NewNumber
	}
	return 0
}

func (m *CommandFixStylesInHeadersOrFootersArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandFixStylesInHeadersOrFootersArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandFixStylesInHeadersOrFootersArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandFixStylesInHeadersOrFootersArchive) GetTextundo() *TSP.Reference {
	if m != nil {
		return m.Textundo
	}
	return nil
}

type CommandSetTableNameArchive struct {
	Newtablename              *string              `protobuf:"bytes,1,req,name=newtablename" json:"newtablename,omitempty"`
	Oldtablename              *string              `protobuf:"bytes,2,req,name=oldtablename" json:"oldtablename,omitempty"`
	Newstyle                  *TSP.Reference       `protobuf:"bytes,3,opt,name=newstyle" json:"newstyle,omitempty"`
	Oldstyle                  *TSP.Reference       `protobuf:"bytes,4,opt,name=oldstyle" json:"oldstyle,omitempty"`
	Super                     *TableCommandArchive `protobuf:"bytes,5,req,name=super" json:"super,omitempty"`
	OldShapeStyle             *TSP.Reference       `protobuf:"bytes,6,opt,name=old_shape_style" json:"old_shape_style,omitempty"`
	NewShapeStyle             *TSP.Reference       `protobuf:"bytes,7,opt,name=new_shape_style" json:"new_shape_style,omitempty"`
	OldTableNameBorderEnabled *bool                `protobuf:"varint,8,opt,name=old_table_name_border_enabled" json:"old_table_name_border_enabled,omitempty"`
	NewTableNameBorderEnabled *bool                `protobuf:"varint,9,opt,name=new_table_name_border_enabled" json:"new_table_name_border_enabled,omitempty"`
	XXX_unrecognized          []byte               `json:"-"`
}

func (m *CommandSetTableNameArchive) Reset()         { *m = CommandSetTableNameArchive{} }
func (m *CommandSetTableNameArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetTableNameArchive) ProtoMessage()    {}

func (m *CommandSetTableNameArchive) GetNewtablename() string {
	if m != nil && m.Newtablename != nil {
		return *m.Newtablename
	}
	return ""
}

func (m *CommandSetTableNameArchive) GetOldtablename() string {
	if m != nil && m.Oldtablename != nil {
		return *m.Oldtablename
	}
	return ""
}

func (m *CommandSetTableNameArchive) GetNewstyle() *TSP.Reference {
	if m != nil {
		return m.Newstyle
	}
	return nil
}

func (m *CommandSetTableNameArchive) GetOldstyle() *TSP.Reference {
	if m != nil {
		return m.Oldstyle
	}
	return nil
}

func (m *CommandSetTableNameArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetTableNameArchive) GetOldShapeStyle() *TSP.Reference {
	if m != nil {
		return m.OldShapeStyle
	}
	return nil
}

func (m *CommandSetTableNameArchive) GetNewShapeStyle() *TSP.Reference {
	if m != nil {
		return m.NewShapeStyle
	}
	return nil
}

func (m *CommandSetTableNameArchive) GetOldTableNameBorderEnabled() bool {
	if m != nil && m.OldTableNameBorderEnabled != nil {
		return *m.OldTableNameBorderEnabled
	}
	return false
}

func (m *CommandSetTableNameArchive) GetNewTableNameBorderEnabled() bool {
	if m != nil && m.NewTableNameBorderEnabled != nil {
		return *m.NewTableNameBorderEnabled
	}
	return false
}

type CommandSetTableNameEnabledArchive struct {
	TableNameEnabled *bool                `protobuf:"varint,1,req,name=table_name_enabled" json:"table_name_enabled,omitempty"`
	Super            *TableCommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetTableNameEnabledArchive) Reset()         { *m = CommandSetTableNameEnabledArchive{} }
func (m *CommandSetTableNameEnabledArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetTableNameEnabledArchive) ProtoMessage()    {}

func (m *CommandSetTableNameEnabledArchive) GetTableNameEnabled() bool {
	if m != nil && m.TableNameEnabled != nil {
		return *m.TableNameEnabled
	}
	return false
}

func (m *CommandSetTableNameEnabledArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetTableFontSizeArchive struct {
	Super              *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ScaleFactor        *float32             `protobuf:"fixed32,9,req,name=scale_factor" json:"scale_factor,omitempty"`
	UndoCellMap        *CellMapArchive      `protobuf:"bytes,5,opt,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap        *CellMapArchive      `protobuf:"bytes,6,opt,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	ResizeDefaultCells *bool                `protobuf:"varint,7,opt,name=resize_default_cells" json:"resize_default_cells,omitempty"`
	TextUndo           *TSP.Reference       `protobuf:"bytes,8,opt,name=text_undo" json:"text_undo,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *CommandSetTableFontSizeArchive) Reset()         { *m = CommandSetTableFontSizeArchive{} }
func (m *CommandSetTableFontSizeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetTableFontSizeArchive) ProtoMessage()    {}

func (m *CommandSetTableFontSizeArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetTableFontSizeArchive) GetScaleFactor() float32 {
	if m != nil && m.ScaleFactor != nil {
		return *m.ScaleFactor
	}
	return 0
}

func (m *CommandSetTableFontSizeArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandSetTableFontSizeArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandSetTableFontSizeArchive) GetResizeDefaultCells() bool {
	if m != nil && m.ResizeDefaultCells != nil {
		return *m.ResizeDefaultCells
	}
	return false
}

func (m *CommandSetTableFontSizeArchive) GetTextUndo() *TSP.Reference {
	if m != nil {
		return m.TextUndo
	}
	return nil
}

type CommandSetTableFontNameArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FontName         *string              `protobuf:"bytes,2,req,name=font_name" json:"font_name,omitempty"`
	OldFontName      *string              `protobuf:"bytes,3,req,name=old_font_name" json:"old_font_name,omitempty"`
	PreserveFace     *bool                `protobuf:"varint,5,opt,name=preserve_face" json:"preserve_face,omitempty"`
	UndoCellMap      *CellMapArchive      `protobuf:"bytes,6,opt,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive      `protobuf:"bytes,7,opt,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	TextUndo         *TSP.Reference       `protobuf:"bytes,8,opt,name=text_undo" json:"text_undo,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetTableFontNameArchive) Reset()         { *m = CommandSetTableFontNameArchive{} }
func (m *CommandSetTableFontNameArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetTableFontNameArchive) ProtoMessage()    {}

func (m *CommandSetTableFontNameArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetTableFontNameArchive) GetFontName() string {
	if m != nil && m.FontName != nil {
		return *m.FontName
	}
	return ""
}

func (m *CommandSetTableFontNameArchive) GetOldFontName() string {
	if m != nil && m.OldFontName != nil {
		return *m.OldFontName
	}
	return ""
}

func (m *CommandSetTableFontNameArchive) GetPreserveFace() bool {
	if m != nil && m.PreserveFace != nil {
		return *m.PreserveFace
	}
	return false
}

func (m *CommandSetTableFontNameArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandSetTableFontNameArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandSetTableFontNameArchive) GetTextUndo() *TSP.Reference {
	if m != nil {
		return m.TextUndo
	}
	return nil
}

type CommandSetTableNameHeightArchive struct {
	Super              *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OldTableNameHeight *float64             `protobuf:"fixed64,2,req,name=old_table_name_height" json:"old_table_name_height,omitempty"`
	NewTableNameHeight *float64             `protobuf:"fixed64,3,req,name=new_table_name_height" json:"new_table_name_height,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *CommandSetTableNameHeightArchive) Reset()         { *m = CommandSetTableNameHeightArchive{} }
func (m *CommandSetTableNameHeightArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetTableNameHeightArchive) ProtoMessage()    {}

func (m *CommandSetTableNameHeightArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetTableNameHeightArchive) GetOldTableNameHeight() float64 {
	if m != nil && m.OldTableNameHeight != nil {
		return *m.OldTableNameHeight
	}
	return 0
}

func (m *CommandSetTableNameHeightArchive) GetNewTableNameHeight() float64 {
	if m != nil && m.NewTableNameHeight != nil {
		return *m.NewTableNameHeight
	}
	return 0
}

type CommandStyleCellsArchive struct {
	Super            *TableCommandArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FormatProperties *TSP.ReferenceDictionary `protobuf:"bytes,2,opt,name=format_properties" json:"format_properties,omitempty"`
	Selection        *SelectionArchive        `protobuf:"bytes,3,req,name=selection" json:"selection,omitempty"`
	UndoCellMap      *CellMapArchive          `protobuf:"bytes,4,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive          `protobuf:"bytes,5,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	TextUndo         *TSP.Reference           `protobuf:"bytes,6,opt,name=text_undo" json:"text_undo,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CommandStyleCellsArchive) Reset()         { *m = CommandStyleCellsArchive{} }
func (m *CommandStyleCellsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandStyleCellsArchive) ProtoMessage()    {}

func (m *CommandStyleCellsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandStyleCellsArchive) GetFormatProperties() *TSP.ReferenceDictionary {
	if m != nil {
		return m.FormatProperties
	}
	return nil
}

func (m *CommandStyleCellsArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandStyleCellsArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandStyleCellsArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandStyleCellsArchive) GetTextUndo() *TSP.Reference {
	if m != nil {
		return m.TextUndo
	}
	return nil
}

type CommandStyleTableArchive struct {
	Super            *TableCommandArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FormatProperties *TSP.ReferenceDictionary `protobuf:"bytes,2,opt,name=format_properties" json:"format_properties,omitempty"`
	OldStyle         *TSP.Reference           `protobuf:"bytes,3,opt,name=old_style" json:"old_style,omitempty"`
	NewStyle         *TSP.Reference           `protobuf:"bytes,4,opt,name=new_style" json:"new_style,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CommandStyleTableArchive) Reset()         { *m = CommandStyleTableArchive{} }
func (m *CommandStyleTableArchive) String() string { return proto.CompactTextString(m) }
func (*CommandStyleTableArchive) ProtoMessage()    {}

func (m *CommandStyleTableArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandStyleTableArchive) GetFormatProperties() *TSP.ReferenceDictionary {
	if m != nil {
		return m.FormatProperties
	}
	return nil
}

func (m *CommandStyleTableArchive) GetOldStyle() *TSP.Reference {
	if m != nil {
		return m.OldStyle
	}
	return nil
}

func (m *CommandStyleTableArchive) GetNewStyle() *TSP.Reference {
	if m != nil {
		return m.NewStyle
	}
	return nil
}

type CommandFillCellsArchive struct {
	Super            *TableCommandArchive  `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Sourceselection  *SelectionArchive     `protobuf:"bytes,2,req,name=sourceselection" json:"sourceselection,omitempty"`
	Sourcecellrange  *CellRange            `protobuf:"bytes,3,req,name=sourcecellrange" json:"sourcecellrange,omitempty"`
	Targetcellrange  *CellRange            `protobuf:"bytes,4,req,name=targetcellrange" json:"targetcellrange,omitempty"`
	UndoCellMap      *CellMapArchive       `protobuf:"bytes,5,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	FillDirection    *FillDirectionArchive `protobuf:"varint,6,req,name=fillDirection,enum=FillDirectionArchive" json:"fillDirection,omitempty"`
	Targetselection  *SelectionArchive     `protobuf:"bytes,7,req,name=targetselection" json:"targetselection,omitempty"`
	RedoCellMap      *CellMapArchive       `protobuf:"bytes,8,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CommandFillCellsArchive) Reset()         { *m = CommandFillCellsArchive{} }
func (m *CommandFillCellsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandFillCellsArchive) ProtoMessage()    {}

func (m *CommandFillCellsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandFillCellsArchive) GetSourceselection() *SelectionArchive {
	if m != nil {
		return m.Sourceselection
	}
	return nil
}

func (m *CommandFillCellsArchive) GetSourcecellrange() *CellRange {
	if m != nil {
		return m.Sourcecellrange
	}
	return nil
}

func (m *CommandFillCellsArchive) GetTargetcellrange() *CellRange {
	if m != nil {
		return m.Targetcellrange
	}
	return nil
}

func (m *CommandFillCellsArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandFillCellsArchive) GetFillDirection() FillDirectionArchive {
	if m != nil && m.FillDirection != nil {
		return *m.FillDirection
	}
	return FillDirectionArchive_kTSTFillDownArchive
}

func (m *CommandFillCellsArchive) GetTargetselection() *SelectionArchive {
	if m != nil {
		return m.Targetselection
	}
	return nil
}

func (m *CommandFillCellsArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

type CommandReplaceTextArchive struct {
	CellID           *CellID              `protobuf:"bytes,1,req,name=cellID" json:"cellID,omitempty"`
	Newcell          *Cell                `protobuf:"bytes,2,req,name=newcell" json:"newcell,omitempty"`
	Oldcell          *Cell                `protobuf:"bytes,3,req,name=oldcell" json:"oldcell,omitempty"`
	Super            *TableCommandArchive `protobuf:"bytes,4,req,name=super" json:"super,omitempty"`
	ChildCommandUndo *TSP.Reference       `protobuf:"bytes,5,opt,name=child_command_undo" json:"child_command_undo,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandReplaceTextArchive) Reset()         { *m = CommandReplaceTextArchive{} }
func (m *CommandReplaceTextArchive) String() string { return proto.CompactTextString(m) }
func (*CommandReplaceTextArchive) ProtoMessage()    {}

func (m *CommandReplaceTextArchive) GetCellID() *CellID {
	if m != nil {
		return m.CellID
	}
	return nil
}

func (m *CommandReplaceTextArchive) GetNewcell() *Cell {
	if m != nil {
		return m.Newcell
	}
	return nil
}

func (m *CommandReplaceTextArchive) GetOldcell() *Cell {
	if m != nil {
		return m.Oldcell
	}
	return nil
}

func (m *CommandReplaceTextArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandReplaceTextArchive) GetChildCommandUndo() *TSP.Reference {
	if m != nil {
		return m.ChildCommandUndo
	}
	return nil
}

type CommandReplaceAllTextArchive struct {
	TableInfo        *TSP.Reference  `protobuf:"bytes,1,req,name=tableInfo" json:"tableInfo,omitempty"`
	UndoCellMap      *CellMapArchive `protobuf:"bytes,2,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive `protobuf:"bytes,3,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CommandReplaceAllTextArchive) Reset()         { *m = CommandReplaceAllTextArchive{} }
func (m *CommandReplaceAllTextArchive) String() string { return proto.CompactTextString(m) }
func (*CommandReplaceAllTextArchive) ProtoMessage()    {}

func (m *CommandReplaceAllTextArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *CommandReplaceAllTextArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandReplaceAllTextArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

type CommandSetRepeatingHeaderEnabledArchive struct {
	RepeatingHeaderEnabled *bool                    `protobuf:"varint,1,req,name=repeating_header_enabled" json:"repeating_header_enabled,omitempty"`
	Direction              *CommandDirectionArchive `protobuf:"varint,2,req,name=direction,enum=CommandDirectionArchive" json:"direction,omitempty"`
	Super                  *TableCommandArchive     `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	XXX_unrecognized       []byte                   `json:"-"`
}

func (m *CommandSetRepeatingHeaderEnabledArchive) Reset() {
	*m = CommandSetRepeatingHeaderEnabledArchive{}
}
func (m *CommandSetRepeatingHeaderEnabledArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetRepeatingHeaderEnabledArchive) ProtoMessage()    {}

func (m *CommandSetRepeatingHeaderEnabledArchive) GetRepeatingHeaderEnabled() bool {
	if m != nil && m.RepeatingHeaderEnabled != nil {
		return *m.RepeatingHeaderEnabled
	}
	return false
}

func (m *CommandSetRepeatingHeaderEnabledArchive) GetDirection() CommandDirectionArchive {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return CommandDirectionArchive_directionRow
}

func (m *CommandSetRepeatingHeaderEnabledArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetFiltersEnabledArchive struct {
	EnableFilters    *bool                `protobuf:"varint,1,req,name=enable_filters" json:"enable_filters,omitempty"`
	Super            *TableCommandArchive `protobuf:"bytes,2,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetFiltersEnabledArchive) Reset()         { *m = CommandSetFiltersEnabledArchive{} }
func (m *CommandSetFiltersEnabledArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetFiltersEnabledArchive) ProtoMessage()    {}

func (m *CommandSetFiltersEnabledArchive) GetEnableFilters() bool {
	if m != nil && m.EnableFilters != nil {
		return *m.EnableFilters
	}
	return false
}

func (m *CommandSetFiltersEnabledArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandAddQuickFilterRulesArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Rules            []*FilterRuleArchive `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
	FilterIndex      *uint32              `protobuf:"varint,3,req,name=filter_index" json:"filter_index,omitempty"`
	RuleIndices      []uint32             `protobuf:"varint,4,rep,name=rule_indices" json:"rule_indices,omitempty"`
	FilterSetEnabled *bool                `protobuf:"varint,5,req,name=filter_set_enabled" json:"filter_set_enabled,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandAddQuickFilterRulesArchive) Reset()         { *m = CommandAddQuickFilterRulesArchive{} }
func (m *CommandAddQuickFilterRulesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandAddQuickFilterRulesArchive) ProtoMessage()    {}

func (m *CommandAddQuickFilterRulesArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandAddQuickFilterRulesArchive) GetRules() []*FilterRuleArchive {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *CommandAddQuickFilterRulesArchive) GetFilterIndex() uint32 {
	if m != nil && m.FilterIndex != nil {
		return *m.FilterIndex
	}
	return 0
}

func (m *CommandAddQuickFilterRulesArchive) GetRuleIndices() []uint32 {
	if m != nil {
		return m.RuleIndices
	}
	return nil
}

func (m *CommandAddQuickFilterRulesArchive) GetFilterSetEnabled() bool {
	if m != nil && m.FilterSetEnabled != nil {
		return *m.FilterSetEnabled
	}
	return false
}

type CommandDeleteFilterRulesArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UndoRules        []*FilterRuleArchive `protobuf:"bytes,2,rep,name=undo_rules" json:"undo_rules,omitempty"`
	RuleIndices      []uint32             `protobuf:"varint,3,rep,name=rule_indices" json:"rule_indices,omitempty"`
	FilterRemoved    *bool                `protobuf:"varint,4,req,name=filter_removed" json:"filter_removed,omitempty"`
	FilterIndex      *uint32              `protobuf:"varint,5,req,name=filter_index" json:"filter_index,omitempty"`
	FilterSetEnabled *bool                `protobuf:"varint,6,req,name=filter_set_enabled" json:"filter_set_enabled,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandDeleteFilterRulesArchive) Reset()         { *m = CommandDeleteFilterRulesArchive{} }
func (m *CommandDeleteFilterRulesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandDeleteFilterRulesArchive) ProtoMessage()    {}

func (m *CommandDeleteFilterRulesArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandDeleteFilterRulesArchive) GetUndoRules() []*FilterRuleArchive {
	if m != nil {
		return m.UndoRules
	}
	return nil
}

func (m *CommandDeleteFilterRulesArchive) GetRuleIndices() []uint32 {
	if m != nil {
		return m.RuleIndices
	}
	return nil
}

func (m *CommandDeleteFilterRulesArchive) GetFilterRemoved() bool {
	if m != nil && m.FilterRemoved != nil {
		return *m.FilterRemoved
	}
	return false
}

func (m *CommandDeleteFilterRulesArchive) GetFilterIndex() uint32 {
	if m != nil && m.FilterIndex != nil {
		return *m.FilterIndex
	}
	return 0
}

func (m *CommandDeleteFilterRulesArchive) GetFilterSetEnabled() bool {
	if m != nil && m.FilterSetEnabled != nil {
		return *m.FilterSetEnabled
	}
	return false
}

type CommandModifyFilterRuleArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UndoRule         *FilterRuleArchive   `protobuf:"bytes,2,req,name=undo_rule" json:"undo_rule,omitempty"`
	RedoRule         *FilterRuleArchive   `protobuf:"bytes,3,req,name=redo_rule" json:"redo_rule,omitempty"`
	RuleIndex        *uint32              `protobuf:"varint,4,req,name=rule_index" json:"rule_index,omitempty"`
	FilterIndex      *uint32              `protobuf:"varint,5,req,name=filter_index" json:"filter_index,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandModifyFilterRuleArchive) Reset()         { *m = CommandModifyFilterRuleArchive{} }
func (m *CommandModifyFilterRuleArchive) String() string { return proto.CompactTextString(m) }
func (*CommandModifyFilterRuleArchive) ProtoMessage()    {}

func (m *CommandModifyFilterRuleArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandModifyFilterRuleArchive) GetUndoRule() *FilterRuleArchive {
	if m != nil {
		return m.UndoRule
	}
	return nil
}

func (m *CommandModifyFilterRuleArchive) GetRedoRule() *FilterRuleArchive {
	if m != nil {
		return m.RedoRule
	}
	return nil
}

func (m *CommandModifyFilterRuleArchive) GetRuleIndex() uint32 {
	if m != nil && m.RuleIndex != nil {
		return *m.RuleIndex
	}
	return 0
}

func (m *CommandModifyFilterRuleArchive) GetFilterIndex() uint32 {
	if m != nil && m.FilterIndex != nil {
		return *m.FilterIndex
	}
	return 0
}

type CommandApplyStrokePresetArchive struct {
	Super             *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UndoCellMap       *CellMapArchive      `protobuf:"bytes,2,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap       *CellMapArchive      `protobuf:"bytes,4,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	Selection         *SelectionArchive    `protobuf:"bytes,3,req,name=selection" json:"selection,omitempty"`
	ExpandedSelection *SelectionArchive    `protobuf:"bytes,6,opt,name=expanded_selection" json:"expanded_selection,omitempty"`
	PresetIndex       *int32               `protobuf:"varint,5,req,name=preset_index" json:"preset_index,omitempty"`
	XXX_unrecognized  []byte               `json:"-"`
}

func (m *CommandApplyStrokePresetArchive) Reset()         { *m = CommandApplyStrokePresetArchive{} }
func (m *CommandApplyStrokePresetArchive) String() string { return proto.CompactTextString(m) }
func (*CommandApplyStrokePresetArchive) ProtoMessage()    {}

func (m *CommandApplyStrokePresetArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandApplyStrokePresetArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandApplyStrokePresetArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandApplyStrokePresetArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandApplyStrokePresetArchive) GetExpandedSelection() *SelectionArchive {
	if m != nil {
		return m.ExpandedSelection
	}
	return nil
}

func (m *CommandApplyStrokePresetArchive) GetPresetIndex() int32 {
	if m != nil && m.PresetIndex != nil {
		return *m.PresetIndex
	}
	return 0
}

type CommandApplyTableStylePresetArchive struct {
	Super                             *TableCommandArchive                                   `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UndoCellMap                       *CellMapArchive                                        `protobuf:"bytes,2,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap                       *CellMapArchive                                        `protobuf:"bytes,4,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	PresetIndex                       *int32                                                 `protobuf:"varint,5,req,name=preset_index" json:"preset_index,omitempty"`
	OldTableStyles                    *TableStyleNetworkArchive                              `protobuf:"bytes,7,req,name=old_table_styles" json:"old_table_styles,omitempty"`
	NewTableStyles                    *TableStyleNetworkArchive                              `protobuf:"bytes,8,req,name=new_table_styles" json:"new_table_styles,omitempty"`
	ApplyClearsAll                    *bool                                                  `protobuf:"varint,10,opt,name=apply_clears_all" json:"apply_clears_all,omitempty"`
	FontSizeCommand                   *TSP.Reference                                         `protobuf:"bytes,11,opt,name=font_size_command" json:"font_size_command,omitempty"`
	SetStyleApplyClearsAllFlagCommand *TSP.Reference                                         `protobuf:"bytes,12,opt,name=set_style_apply_clears_all_flag_command" json:"set_style_apply_clears_all_flag_command,omitempty"`
	RowStyleIndexTuples               []*CommandApplyTableStylePresetArchive_StyleIndexTuple `protobuf:"bytes,13,rep,name=row_style_index_tuples" json:"row_style_index_tuples,omitempty"`
	ColStyleIndexTuples               []*CommandApplyTableStylePresetArchive_StyleIndexTuple `protobuf:"bytes,14,rep,name=col_style_index_tuples" json:"col_style_index_tuples,omitempty"`
	XXX_unrecognized                  []byte                                                 `json:"-"`
}

func (m *CommandApplyTableStylePresetArchive) Reset()         { *m = CommandApplyTableStylePresetArchive{} }
func (m *CommandApplyTableStylePresetArchive) String() string { return proto.CompactTextString(m) }
func (*CommandApplyTableStylePresetArchive) ProtoMessage()    {}

func (m *CommandApplyTableStylePresetArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandApplyTableStylePresetArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandApplyTableStylePresetArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandApplyTableStylePresetArchive) GetPresetIndex() int32 {
	if m != nil && m.PresetIndex != nil {
		return *m.PresetIndex
	}
	return 0
}

func (m *CommandApplyTableStylePresetArchive) GetOldTableStyles() *TableStyleNetworkArchive {
	if m != nil {
		return m.OldTableStyles
	}
	return nil
}

func (m *CommandApplyTableStylePresetArchive) GetNewTableStyles() *TableStyleNetworkArchive {
	if m != nil {
		return m.NewTableStyles
	}
	return nil
}

func (m *CommandApplyTableStylePresetArchive) GetApplyClearsAll() bool {
	if m != nil && m.ApplyClearsAll != nil {
		return *m.ApplyClearsAll
	}
	return false
}

func (m *CommandApplyTableStylePresetArchive) GetFontSizeCommand() *TSP.Reference {
	if m != nil {
		return m.FontSizeCommand
	}
	return nil
}

func (m *CommandApplyTableStylePresetArchive) GetSetStyleApplyClearsAllFlagCommand() *TSP.Reference {
	if m != nil {
		return m.SetStyleApplyClearsAllFlagCommand
	}
	return nil
}

func (m *CommandApplyTableStylePresetArchive) GetRowStyleIndexTuples() []*CommandApplyTableStylePresetArchive_StyleIndexTuple {
	if m != nil {
		return m.RowStyleIndexTuples
	}
	return nil
}

func (m *CommandApplyTableStylePresetArchive) GetColStyleIndexTuples() []*CommandApplyTableStylePresetArchive_StyleIndexTuple {
	if m != nil {
		return m.ColStyleIndexTuples
	}
	return nil
}

type CommandApplyTableStylePresetArchive_StyleIndexTuple struct {
	Index            *uint32        `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	CellStyle        *TSP.Reference `protobuf:"bytes,5,opt,name=cell_style" json:"cell_style,omitempty"`
	TextStyle        *TSP.Reference `protobuf:"bytes,6,opt,name=text_style" json:"text_style,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CommandApplyTableStylePresetArchive_StyleIndexTuple) Reset() {
	*m = CommandApplyTableStylePresetArchive_StyleIndexTuple{}
}
func (m *CommandApplyTableStylePresetArchive_StyleIndexTuple) String() string {
	return proto.CompactTextString(m)
}
func (*CommandApplyTableStylePresetArchive_StyleIndexTuple) ProtoMessage() {}

func (m *CommandApplyTableStylePresetArchive_StyleIndexTuple) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandApplyTableStylePresetArchive_StyleIndexTuple) GetCellStyle() *TSP.Reference {
	if m != nil {
		return m.CellStyle
	}
	return nil
}

func (m *CommandApplyTableStylePresetArchive_StyleIndexTuple) GetTextStyle() *TSP.Reference {
	if m != nil {
		return m.TextStyle
	}
	return nil
}

type CommandSetStyleApplyClearsAllFlagArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ApplyClearsAll   *bool                `protobuf:"varint,2,req,name=apply_clears_all" json:"apply_clears_all,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetStyleApplyClearsAllFlagArchive) Reset() {
	*m = CommandSetStyleApplyClearsAllFlagArchive{}
}
func (m *CommandSetStyleApplyClearsAllFlagArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetStyleApplyClearsAllFlagArchive) ProtoMessage()    {}

func (m *CommandSetStyleApplyClearsAllFlagArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetStyleApplyClearsAllFlagArchive) GetApplyClearsAll() bool {
	if m != nil && m.ApplyClearsAll != nil {
		return *m.ApplyClearsAll
	}
	return false
}

type CommandApplyThemeToTableArchive struct {
	Super            *TableCommandArchive      `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UndoCellMap      *CellMapArchive           `protobuf:"bytes,2,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive           `protobuf:"bytes,4,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	OldTableStyles   *TableStyleNetworkArchive `protobuf:"bytes,7,req,name=old_table_styles" json:"old_table_styles,omitempty"`
	NewTableStyles   *TableStyleNetworkArchive `protobuf:"bytes,8,req,name=new_table_styles" json:"new_table_styles,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *CommandApplyThemeToTableArchive) Reset()         { *m = CommandApplyThemeToTableArchive{} }
func (m *CommandApplyThemeToTableArchive) String() string { return proto.CompactTextString(m) }
func (*CommandApplyThemeToTableArchive) ProtoMessage()    {}

func (m *CommandApplyThemeToTableArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandApplyThemeToTableArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandApplyThemeToTableArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandApplyThemeToTableArchive) GetOldTableStyles() *TableStyleNetworkArchive {
	if m != nil {
		return m.OldTableStyles
	}
	return nil
}

func (m *CommandApplyThemeToTableArchive) GetNewTableStyles() *TableStyleNetworkArchive {
	if m != nil {
		return m.NewTableStyles
	}
	return nil
}

type CommandApplyThemeChildForTableArchive struct {
	Super            *TSS.ApplyThemeChildCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ApplyCommand     *TSP.Reference                     `protobuf:"bytes,2,req,name=apply_command" json:"apply_command,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CommandApplyThemeChildForTableArchive) Reset()         { *m = CommandApplyThemeChildForTableArchive{} }
func (m *CommandApplyThemeChildForTableArchive) String() string { return proto.CompactTextString(m) }
func (*CommandApplyThemeChildForTableArchive) ProtoMessage()    {}

func (m *CommandApplyThemeChildForTableArchive) GetSuper() *TSS.ApplyThemeChildCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandApplyThemeChildForTableArchive) GetApplyCommand() *TSP.Reference {
	if m != nil {
		return m.ApplyCommand
	}
	return nil
}

type CommandToggleTextPropertyArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Selection        *SelectionArchive    `protobuf:"bytes,2,req,name=selection" json:"selection,omitempty"`
	Property         *uint32              `protobuf:"varint,3,req,name=property" json:"property,omitempty"`
	UndoCellMap      *CellMapArchive      `protobuf:"bytes,4,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive      `protobuf:"bytes,5,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	DefaultBodyCell  *Cell                `protobuf:"bytes,6,req,name=default_body_cell" json:"default_body_cell,omitempty"`
	DefaultHrCell    *Cell                `protobuf:"bytes,7,req,name=default_hr_cell" json:"default_hr_cell,omitempty"`
	DefaultHcCell    *Cell                `protobuf:"bytes,8,req,name=default_hc_cell" json:"default_hc_cell,omitempty"`
	DefaultFrCell    *Cell                `protobuf:"bytes,9,req,name=default_fr_cell" json:"default_fr_cell,omitempty"`
	TextUndo         *TSP.Reference       `protobuf:"bytes,10,opt,name=text_undo" json:"text_undo,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandToggleTextPropertyArchive) Reset()         { *m = CommandToggleTextPropertyArchive{} }
func (m *CommandToggleTextPropertyArchive) String() string { return proto.CompactTextString(m) }
func (*CommandToggleTextPropertyArchive) ProtoMessage()    {}

func (m *CommandToggleTextPropertyArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandToggleTextPropertyArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandToggleTextPropertyArchive) GetProperty() uint32 {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return 0
}

func (m *CommandToggleTextPropertyArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandToggleTextPropertyArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandToggleTextPropertyArchive) GetDefaultBodyCell() *Cell {
	if m != nil {
		return m.DefaultBodyCell
	}
	return nil
}

func (m *CommandToggleTextPropertyArchive) GetDefaultHrCell() *Cell {
	if m != nil {
		return m.DefaultHrCell
	}
	return nil
}

func (m *CommandToggleTextPropertyArchive) GetDefaultHcCell() *Cell {
	if m != nil {
		return m.DefaultHcCell
	}
	return nil
}

func (m *CommandToggleTextPropertyArchive) GetDefaultFrCell() *Cell {
	if m != nil {
		return m.DefaultFrCell
	}
	return nil
}

func (m *CommandToggleTextPropertyArchive) GetTextUndo() *TSP.Reference {
	if m != nil {
		return m.TextUndo
	}
	return nil
}

type CommandResetFillPropertyToDefault struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Selection        *SelectionArchive    `protobuf:"bytes,2,req,name=selection" json:"selection,omitempty"`
	UndoCellMap      *CellMapArchive      `protobuf:"bytes,4,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive      `protobuf:"bytes,5,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandResetFillPropertyToDefault) Reset()         { *m = CommandResetFillPropertyToDefault{} }
func (m *CommandResetFillPropertyToDefault) String() string { return proto.CompactTextString(m) }
func (*CommandResetFillPropertyToDefault) ProtoMessage()    {}

func (m *CommandResetFillPropertyToDefault) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandResetFillPropertyToDefault) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandResetFillPropertyToDefault) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandResetFillPropertyToDefault) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

type CommandSetSingleNumberFormatParameterArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Selection        *SelectionArchive    `protobuf:"bytes,2,req,name=selection" json:"selection,omitempty"`
	UndoCellMap      *CellMapArchive      `protobuf:"bytes,3,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive      `protobuf:"bytes,4,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetSingleNumberFormatParameterArchive) Reset() {
	*m = CommandSetSingleNumberFormatParameterArchive{}
}
func (m *CommandSetSingleNumberFormatParameterArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSetSingleNumberFormatParameterArchive) ProtoMessage() {}

func (m *CommandSetSingleNumberFormatParameterArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetSingleNumberFormatParameterArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandSetSingleNumberFormatParameterArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandSetSingleNumberFormatParameterArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

type CommandSetBaseArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Base             *uint32                                       `protobuf:"varint,2,req,name=base" json:"base,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetBaseArchive) Reset()         { *m = CommandSetBaseArchive{} }
func (m *CommandSetBaseArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetBaseArchive) ProtoMessage()    {}

func (m *CommandSetBaseArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetBaseArchive) GetBase() uint32 {
	if m != nil && m.Base != nil {
		return *m.Base
	}
	return 0
}

type CommandSetBasePlacesArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	BasePlaces       *uint32                                       `protobuf:"varint,2,req,name=base_places" json:"base_places,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetBasePlacesArchive) Reset()         { *m = CommandSetBasePlacesArchive{} }
func (m *CommandSetBasePlacesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetBasePlacesArchive) ProtoMessage()    {}

func (m *CommandSetBasePlacesArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetBasePlacesArchive) GetBasePlaces() uint32 {
	if m != nil && m.BasePlaces != nil {
		return *m.BasePlaces
	}
	return 0
}

type CommandSetBaseUseMinusSignArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	BaseUseMinusSign *bool                                         `protobuf:"varint,2,req,name=base_use_minus_sign" json:"base_use_minus_sign,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetBaseUseMinusSignArchive) Reset()         { *m = CommandSetBaseUseMinusSignArchive{} }
func (m *CommandSetBaseUseMinusSignArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetBaseUseMinusSignArchive) ProtoMessage()    {}

func (m *CommandSetBaseUseMinusSignArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetBaseUseMinusSignArchive) GetBaseUseMinusSign() bool {
	if m != nil && m.BaseUseMinusSign != nil {
		return *m.BaseUseMinusSign
	}
	return false
}

type CommandSetControlMinimumArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Minimum          *float64                                      `protobuf:"fixed64,2,req,name=minimum" json:"minimum,omitempty"`
	FormatType       *uint32                                       `protobuf:"varint,3,req,name=format_type" json:"format_type,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetControlMinimumArchive) Reset()         { *m = CommandSetControlMinimumArchive{} }
func (m *CommandSetControlMinimumArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetControlMinimumArchive) ProtoMessage()    {}

func (m *CommandSetControlMinimumArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetControlMinimumArchive) GetMinimum() float64 {
	if m != nil && m.Minimum != nil {
		return *m.Minimum
	}
	return 0
}

func (m *CommandSetControlMinimumArchive) GetFormatType() uint32 {
	if m != nil && m.FormatType != nil {
		return *m.FormatType
	}
	return 0
}

type CommandSetControlMaximumArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Maximum          *float64                                      `protobuf:"fixed64,2,req,name=maximum" json:"maximum,omitempty"`
	FormatType       *uint32                                       `protobuf:"varint,3,req,name=format_type" json:"format_type,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetControlMaximumArchive) Reset()         { *m = CommandSetControlMaximumArchive{} }
func (m *CommandSetControlMaximumArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetControlMaximumArchive) ProtoMessage()    {}

func (m *CommandSetControlMaximumArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetControlMaximumArchive) GetMaximum() float64 {
	if m != nil && m.Maximum != nil {
		return *m.Maximum
	}
	return 0
}

func (m *CommandSetControlMaximumArchive) GetFormatType() uint32 {
	if m != nil && m.FormatType != nil {
		return *m.FormatType
	}
	return 0
}

type CommandSetControlIncrementArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Increment        *float64                                      `protobuf:"fixed64,2,req,name=increment" json:"increment,omitempty"`
	FormatType       *uint32                                       `protobuf:"varint,3,req,name=format_type" json:"format_type,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetControlIncrementArchive) Reset()         { *m = CommandSetControlIncrementArchive{} }
func (m *CommandSetControlIncrementArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetControlIncrementArchive) ProtoMessage()    {}

func (m *CommandSetControlIncrementArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetControlIncrementArchive) GetIncrement() float64 {
	if m != nil && m.Increment != nil {
		return *m.Increment
	}
	return 0
}

func (m *CommandSetControlIncrementArchive) GetFormatType() uint32 {
	if m != nil && m.FormatType != nil {
		return *m.FormatType
	}
	return 0
}

type CommandSetCurrencyCodeArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	CurrencyCode     *string                                       `protobuf:"bytes,2,req,name=currency_code" json:"currency_code,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetCurrencyCodeArchive) Reset()         { *m = CommandSetCurrencyCodeArchive{} }
func (m *CommandSetCurrencyCodeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetCurrencyCodeArchive) ProtoMessage()    {}

func (m *CommandSetCurrencyCodeArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetCurrencyCodeArchive) GetCurrencyCode() string {
	if m != nil && m.CurrencyCode != nil {
		return *m.CurrencyCode
	}
	return ""
}

type CommandSetFractionAccuracyArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FractionAccuracy *uint32                                       `protobuf:"varint,2,req,name=fraction_accuracy" json:"fraction_accuracy,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetFractionAccuracyArchive) Reset()         { *m = CommandSetFractionAccuracyArchive{} }
func (m *CommandSetFractionAccuracyArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetFractionAccuracyArchive) ProtoMessage()    {}

func (m *CommandSetFractionAccuracyArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetFractionAccuracyArchive) GetFractionAccuracy() uint32 {
	if m != nil && m.FractionAccuracy != nil {
		return *m.FractionAccuracy
	}
	return 0
}

type CommandSetMultipleChoiceListFormatForEditedItemArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetMultipleChoiceListFormatForEditedItemArchive) Reset() {
	*m = CommandSetMultipleChoiceListFormatForEditedItemArchive{}
}
func (m *CommandSetMultipleChoiceListFormatForEditedItemArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSetMultipleChoiceListFormatForEditedItemArchive) ProtoMessage() {}

func (m *CommandSetMultipleChoiceListFormatForEditedItemArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetMultipleChoiceListFormatForDeleteItemArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetMultipleChoiceListFormatForDeleteItemArchive) Reset() {
	*m = CommandSetMultipleChoiceListFormatForDeleteItemArchive{}
}
func (m *CommandSetMultipleChoiceListFormatForDeleteItemArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSetMultipleChoiceListFormatForDeleteItemArchive) ProtoMessage() {}

func (m *CommandSetMultipleChoiceListFormatForDeleteItemArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetMultipleChoiceListFormatForReorderItemArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetMultipleChoiceListFormatForReorderItemArchive) Reset() {
	*m = CommandSetMultipleChoiceListFormatForReorderItemArchive{}
}
func (m *CommandSetMultipleChoiceListFormatForReorderItemArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSetMultipleChoiceListFormatForReorderItemArchive) ProtoMessage() {}

func (m *CommandSetMultipleChoiceListFormatForReorderItemArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetMultipleChoiceListFormatForInitialValueArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetMultipleChoiceListFormatForInitialValueArchive) Reset() {
	*m = CommandSetMultipleChoiceListFormatForInitialValueArchive{}
}
func (m *CommandSetMultipleChoiceListFormatForInitialValueArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSetMultipleChoiceListFormatForInitialValueArchive) ProtoMessage() {}

func (m *CommandSetMultipleChoiceListFormatForInitialValueArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetNegativeNumberStyleArchive struct {
	Super               *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	NegativeNumberStyle *uint32                                       `protobuf:"varint,2,req,name=negative_number_style" json:"negative_number_style,omitempty"`
	XXX_unrecognized    []byte                                        `json:"-"`
}

func (m *CommandSetNegativeNumberStyleArchive) Reset()         { *m = CommandSetNegativeNumberStyleArchive{} }
func (m *CommandSetNegativeNumberStyleArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetNegativeNumberStyleArchive) ProtoMessage()    {}

func (m *CommandSetNegativeNumberStyleArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetNegativeNumberStyleArchive) GetNegativeNumberStyle() uint32 {
	if m != nil && m.NegativeNumberStyle != nil {
		return *m.NegativeNumberStyle
	}
	return 0
}

type CommandSetExplicitFormatArchive struct {
	Super            *TableCommandArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Selection        *SelectionArchive        `protobuf:"bytes,2,req,name=selection" json:"selection,omitempty"`
	CellFormat       *TSK.FormatStructArchive `protobuf:"bytes,3,req,name=cell_format" json:"cell_format,omitempty"`
	UndoCellMap      *CellMapArchive          `protobuf:"bytes,4,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive          `protobuf:"bytes,5,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CommandSetExplicitFormatArchive) Reset()         { *m = CommandSetExplicitFormatArchive{} }
func (m *CommandSetExplicitFormatArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetExplicitFormatArchive) ProtoMessage()    {}

func (m *CommandSetExplicitFormatArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetExplicitFormatArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandSetExplicitFormatArchive) GetCellFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.CellFormat
	}
	return nil
}

func (m *CommandSetExplicitFormatArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandSetExplicitFormatArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

type CommandSetNumberOfDecimalPlacesArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	DecimalPlaces    *uint32                                       `protobuf:"varint,2,req,name=decimal_places" json:"decimal_places,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetNumberOfDecimalPlacesArchive) Reset() {
	*m = CommandSetNumberOfDecimalPlacesArchive{}
}
func (m *CommandSetNumberOfDecimalPlacesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetNumberOfDecimalPlacesArchive) ProtoMessage()    {}

func (m *CommandSetNumberOfDecimalPlacesArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetNumberOfDecimalPlacesArchive) GetDecimalPlaces() uint32 {
	if m != nil && m.DecimalPlaces != nil {
		return *m.DecimalPlaces
	}
	return 0
}

type CommandSetDateTimeFormatArchive struct {
	Super            *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CommandSetDateTimeFormatArchive) Reset()         { *m = CommandSetDateTimeFormatArchive{} }
func (m *CommandSetDateTimeFormatArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetDateTimeFormatArchive) ProtoMessage()    {}

func (m *CommandSetDateTimeFormatArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetShowThousandsSeparatorArchive struct {
	Super                  *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ShowThousandsSeparator *bool                                         `protobuf:"varint,2,req,name=show_thousands_separator" json:"show_thousands_separator,omitempty"`
	XXX_unrecognized       []byte                                        `json:"-"`
}

func (m *CommandSetShowThousandsSeparatorArchive) Reset() {
	*m = CommandSetShowThousandsSeparatorArchive{}
}
func (m *CommandSetShowThousandsSeparatorArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetShowThousandsSeparatorArchive) ProtoMessage()    {}

func (m *CommandSetShowThousandsSeparatorArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetShowThousandsSeparatorArchive) GetShowThousandsSeparator() bool {
	if m != nil && m.ShowThousandsSeparator != nil {
		return *m.ShowThousandsSeparator
	}
	return false
}

type CommandSetUseAccountingStyleArchive struct {
	Super              *CommandSetSingleNumberFormatParameterArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UseAccountingStyle *bool                                         `protobuf:"varint,2,req,name=use_accounting_style" json:"use_accounting_style,omitempty"`
	XXX_unrecognized   []byte                                        `json:"-"`
}

func (m *CommandSetUseAccountingStyleArchive) Reset()         { *m = CommandSetUseAccountingStyleArchive{} }
func (m *CommandSetUseAccountingStyleArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetUseAccountingStyleArchive) ProtoMessage()    {}

func (m *CommandSetUseAccountingStyleArchive) GetSuper() *CommandSetSingleNumberFormatParameterArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetUseAccountingStyleArchive) GetUseAccountingStyle() bool {
	if m != nil && m.UseAccountingStyle != nil {
		return *m.UseAccountingStyle
	}
	return false
}

type CommandMoveRowsArchive struct {
	Super                       *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Selection                   *SelectionArchive    `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
	StartRowIndex               *uint32              `protobuf:"varint,3,req,name=start_row_index" json:"start_row_index,omitempty"`
	DestRowIndex                *uint32              `protobuf:"varint,4,req,name=dest_row_index" json:"dest_row_index,omitempty"`
	NumberOfRows                *uint32              `protobuf:"varint,5,req,name=number_of_rows" json:"number_of_rows,omitempty"`
	FormulaRewriteCommand       *TSP.Reference       `protobuf:"bytes,7,opt,name=formula_rewrite_command" json:"formula_rewrite_command,omitempty"`
	ShowCommand                 *TSP.Reference       `protobuf:"bytes,8,opt,name=show_command" json:"show_command,omitempty"`
	UnmergeInvalidRangesCommand *TSP.Reference       `protobuf:"bytes,9,opt,name=unmerge_invalid_ranges_command" json:"unmerge_invalid_ranges_command,omitempty"`
	XXX_unrecognized            []byte               `json:"-"`
}

func (m *CommandMoveRowsArchive) Reset()         { *m = CommandMoveRowsArchive{} }
func (m *CommandMoveRowsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMoveRowsArchive) ProtoMessage()    {}

func (m *CommandMoveRowsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMoveRowsArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandMoveRowsArchive) GetStartRowIndex() uint32 {
	if m != nil && m.StartRowIndex != nil {
		return *m.StartRowIndex
	}
	return 0
}

func (m *CommandMoveRowsArchive) GetDestRowIndex() uint32 {
	if m != nil && m.DestRowIndex != nil {
		return *m.DestRowIndex
	}
	return 0
}

func (m *CommandMoveRowsArchive) GetNumberOfRows() uint32 {
	if m != nil && m.NumberOfRows != nil {
		return *m.NumberOfRows
	}
	return 0
}

func (m *CommandMoveRowsArchive) GetFormulaRewriteCommand() *TSP.Reference {
	if m != nil {
		return m.FormulaRewriteCommand
	}
	return nil
}

func (m *CommandMoveRowsArchive) GetShowCommand() *TSP.Reference {
	if m != nil {
		return m.ShowCommand
	}
	return nil
}

func (m *CommandMoveRowsArchive) GetUnmergeInvalidRangesCommand() *TSP.Reference {
	if m != nil {
		return m.UnmergeInvalidRangesCommand
	}
	return nil
}

type CommandMoveColumnsArchive struct {
	Super                 *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Selection             *SelectionArchive    `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
	StartColumnIndex      *uint32              `protobuf:"varint,3,req,name=start_column_index" json:"start_column_index,omitempty"`
	DestColumnIndex       *uint32              `protobuf:"varint,4,req,name=dest_column_index" json:"dest_column_index,omitempty"`
	NumberOfColumns       *uint32              `protobuf:"varint,5,req,name=number_of_columns" json:"number_of_columns,omitempty"`
	FormulaRewriteCommand *TSP.Reference       `protobuf:"bytes,7,opt,name=formula_rewrite_command" json:"formula_rewrite_command,omitempty"`
	ShowCommand           *TSP.Reference       `protobuf:"bytes,8,opt,name=show_command" json:"show_command,omitempty"`
	XXX_unrecognized      []byte               `json:"-"`
}

func (m *CommandMoveColumnsArchive) Reset()         { *m = CommandMoveColumnsArchive{} }
func (m *CommandMoveColumnsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMoveColumnsArchive) ProtoMessage()    {}

func (m *CommandMoveColumnsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMoveColumnsArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandMoveColumnsArchive) GetStartColumnIndex() uint32 {
	if m != nil && m.StartColumnIndex != nil {
		return *m.StartColumnIndex
	}
	return 0
}

func (m *CommandMoveColumnsArchive) GetDestColumnIndex() uint32 {
	if m != nil && m.DestColumnIndex != nil {
		return *m.DestColumnIndex
	}
	return 0
}

func (m *CommandMoveColumnsArchive) GetNumberOfColumns() uint32 {
	if m != nil && m.NumberOfColumns != nil {
		return *m.NumberOfColumns
	}
	return 0
}

func (m *CommandMoveColumnsArchive) GetFormulaRewriteCommand() *TSP.Reference {
	if m != nil {
		return m.FormulaRewriteCommand
	}
	return nil
}

func (m *CommandMoveColumnsArchive) GetShowCommand() *TSP.Reference {
	if m != nil {
		return m.ShowCommand
	}
	return nil
}

type CommandSortArchive struct {
	Super                 *TableCommandArchive       `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Mapping               *TSK.ShuffleMappingArchive `protobuf:"bytes,5,req,name=mapping" json:"mapping,omitempty"`
	FormulaRewriteCommand *TSP.Reference             `protobuf:"bytes,7,opt,name=formula_rewrite_command" json:"formula_rewrite_command,omitempty"`
	XXX_unrecognized      []byte                     `json:"-"`
}

func (m *CommandSortArchive) Reset()         { *m = CommandSortArchive{} }
func (m *CommandSortArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSortArchive) ProtoMessage()    {}

func (m *CommandSortArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSortArchive) GetMapping() *TSK.ShuffleMappingArchive {
	if m != nil {
		return m.Mapping
	}
	return nil
}

func (m *CommandSortArchive) GetFormulaRewriteCommand() *TSP.Reference {
	if m != nil {
		return m.FormulaRewriteCommand
	}
	return nil
}

type CommandRewriteFormulasForSortArchive struct {
	Super            *TableCommandArchive         `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FormulaMap       *TSCE.OwnerFormulaMapArchive `protobuf:"bytes,2,req,name=formula_map" json:"formula_map,omitempty"`
	SortMapping      *TSK.ShuffleMappingArchive   `protobuf:"bytes,3,req,name=sort_mapping" json:"sort_mapping,omitempty"`
	SortedTableId    *TSCE.CFUUIDArchive          `protobuf:"bytes,4,req,name=sorted_table_id" json:"sorted_table_id,omitempty"`
	ExplodeRanges    *bool                        `protobuf:"varint,5,req,name=explode_ranges" json:"explode_ranges,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CommandRewriteFormulasForSortArchive) Reset()         { *m = CommandRewriteFormulasForSortArchive{} }
func (m *CommandRewriteFormulasForSortArchive) String() string { return proto.CompactTextString(m) }
func (*CommandRewriteFormulasForSortArchive) ProtoMessage()    {}

func (m *CommandRewriteFormulasForSortArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteFormulasForSortArchive) GetFormulaMap() *TSCE.OwnerFormulaMapArchive {
	if m != nil {
		return m.FormulaMap
	}
	return nil
}

func (m *CommandRewriteFormulasForSortArchive) GetSortMapping() *TSK.ShuffleMappingArchive {
	if m != nil {
		return m.SortMapping
	}
	return nil
}

func (m *CommandRewriteFormulasForSortArchive) GetSortedTableId() *TSCE.CFUUIDArchive {
	if m != nil {
		return m.SortedTableId
	}
	return nil
}

func (m *CommandRewriteFormulasForSortArchive) GetExplodeRanges() bool {
	if m != nil && m.ExplodeRanges != nil {
		return *m.ExplodeRanges
	}
	return false
}

type CommandRewriteFormulasForTectonicShiftArchive struct {
	Super            *TableCommandArchive         `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FormulaMap       *TSCE.OwnerFormulaMapArchive `protobuf:"bytes,2,req,name=formula_map" json:"formula_map,omitempty"`
	TectonicShift    *TSCE.TectonicShiftArchive   `protobuf:"bytes,3,req,name=tectonic_shift" json:"tectonic_shift,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CommandRewriteFormulasForTectonicShiftArchive) Reset() {
	*m = CommandRewriteFormulasForTectonicShiftArchive{}
}
func (m *CommandRewriteFormulasForTectonicShiftArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandRewriteFormulasForTectonicShiftArchive) ProtoMessage() {}

func (m *CommandRewriteFormulasForTectonicShiftArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteFormulasForTectonicShiftArchive) GetFormulaMap() *TSCE.OwnerFormulaMapArchive {
	if m != nil {
		return m.FormulaMap
	}
	return nil
}

func (m *CommandRewriteFormulasForTectonicShiftArchive) GetTectonicShift() *TSCE.TectonicShiftArchive {
	if m != nil {
		return m.TectonicShift
	}
	return nil
}

type CommandRewriteFormulasForMoveArchive struct {
	Super            *TableCommandArchive         `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FormulaMap       *TSCE.OwnerFormulaMapArchive `protobuf:"bytes,2,req,name=formula_map" json:"formula_map,omitempty"`
	FromReference    *TSCE.RangeReferenceArchive  `protobuf:"bytes,6,req,name=from_reference" json:"from_reference,omitempty"`
	ToReference      *TSCE.RangeReferenceArchive  `protobuf:"bytes,7,req,name=to_reference" json:"to_reference,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CommandRewriteFormulasForMoveArchive) Reset()         { *m = CommandRewriteFormulasForMoveArchive{} }
func (m *CommandRewriteFormulasForMoveArchive) String() string { return proto.CompactTextString(m) }
func (*CommandRewriteFormulasForMoveArchive) ProtoMessage()    {}

func (m *CommandRewriteFormulasForMoveArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteFormulasForMoveArchive) GetFormulaMap() *TSCE.OwnerFormulaMapArchive {
	if m != nil {
		return m.FormulaMap
	}
	return nil
}

func (m *CommandRewriteFormulasForMoveArchive) GetFromReference() *TSCE.RangeReferenceArchive {
	if m != nil {
		return m.FromReference
	}
	return nil
}

func (m *CommandRewriteFormulasForMoveArchive) GetToReference() *TSCE.RangeReferenceArchive {
	if m != nil {
		return m.ToReference
	}
	return nil
}

type CommandRewriteFormulasForCellMergeArchive struct {
	Super            *TableCommandArchive         `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FormulaMap       *TSCE.OwnerFormulaMapArchive `protobuf:"bytes,2,req,name=formula_map" json:"formula_map,omitempty"`
	MergedRange      *TSCE.RangeCoordinateArchive `protobuf:"bytes,3,req,name=merged_range" json:"merged_range,omitempty"`
	TableId          *TSCE.CFUUIDArchive          `protobuf:"bytes,4,req,name=table_id" json:"table_id,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CommandRewriteFormulasForCellMergeArchive) Reset() {
	*m = CommandRewriteFormulasForCellMergeArchive{}
}
func (m *CommandRewriteFormulasForCellMergeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandRewriteFormulasForCellMergeArchive) ProtoMessage()    {}

func (m *CommandRewriteFormulasForCellMergeArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteFormulasForCellMergeArchive) GetFormulaMap() *TSCE.OwnerFormulaMapArchive {
	if m != nil {
		return m.FormulaMap
	}
	return nil
}

func (m *CommandRewriteFormulasForCellMergeArchive) GetMergedRange() *TSCE.RangeCoordinateArchive {
	if m != nil {
		return m.MergedRange
	}
	return nil
}

func (m *CommandRewriteFormulasForCellMergeArchive) GetTableId() *TSCE.CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

type CommandRewriteFilterFormulasForTableResizeArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandRewriteFilterFormulasForTableResizeArchive) Reset() {
	*m = CommandRewriteFilterFormulasForTableResizeArchive{}
}
func (m *CommandRewriteFilterFormulasForTableResizeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandRewriteFilterFormulasForTableResizeArchive) ProtoMessage() {}

func (m *CommandRewriteFilterFormulasForTableResizeArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandRewriteFilterFormulasForTectonicShiftArchive struct {
	Super            *TableCommandArchive       `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FilterSet        *TSP.Reference             `protobuf:"bytes,2,req,name=filter_set" json:"filter_set,omitempty"`
	TectonicShift    *TSCE.TectonicShiftArchive `protobuf:"bytes,3,req,name=tectonic_shift" json:"tectonic_shift,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CommandRewriteFilterFormulasForTectonicShiftArchive) Reset() {
	*m = CommandRewriteFilterFormulasForTectonicShiftArchive{}
}
func (m *CommandRewriteFilterFormulasForTectonicShiftArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandRewriteFilterFormulasForTectonicShiftArchive) ProtoMessage() {}

func (m *CommandRewriteFilterFormulasForTectonicShiftArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteFilterFormulasForTectonicShiftArchive) GetFilterSet() *TSP.Reference {
	if m != nil {
		return m.FilterSet
	}
	return nil
}

func (m *CommandRewriteFilterFormulasForTectonicShiftArchive) GetTectonicShift() *TSCE.TectonicShiftArchive {
	if m != nil {
		return m.TectonicShift
	}
	return nil
}

type CommandRewriteFilterFormulasForSortArchive struct {
	Super            *TableCommandArchive       `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FilterSet        *TSP.Reference             `protobuf:"bytes,2,req,name=filter_set" json:"filter_set,omitempty"`
	SortMapping      *TSK.ShuffleMappingArchive `protobuf:"bytes,3,req,name=sort_mapping" json:"sort_mapping,omitempty"`
	SortedTableId    *TSCE.CFUUIDArchive        `protobuf:"bytes,4,req,name=sorted_table_id" json:"sorted_table_id,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CommandRewriteFilterFormulasForSortArchive) Reset() {
	*m = CommandRewriteFilterFormulasForSortArchive{}
}
func (m *CommandRewriteFilterFormulasForSortArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandRewriteFilterFormulasForSortArchive) ProtoMessage() {}

func (m *CommandRewriteFilterFormulasForSortArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteFilterFormulasForSortArchive) GetFilterSet() *TSP.Reference {
	if m != nil {
		return m.FilterSet
	}
	return nil
}

func (m *CommandRewriteFilterFormulasForSortArchive) GetSortMapping() *TSK.ShuffleMappingArchive {
	if m != nil {
		return m.SortMapping
	}
	return nil
}

func (m *CommandRewriteFilterFormulasForSortArchive) GetSortedTableId() *TSCE.CFUUIDArchive {
	if m != nil {
		return m.SortedTableId
	}
	return nil
}

type CommandRewriteConditionalStylesForTectonicShiftArchive struct {
	Super                *TableCommandArchive                 `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	TectonicShift        *TSCE.TectonicShiftArchive           `protobuf:"bytes,2,req,name=tectonic_shift" json:"tectonic_shift,omitempty"`
	CellsToRewrite       *TSCE.CellCoordinateVectorArchive    `protobuf:"bytes,3,opt,name=cells_to_rewrite" json:"cells_to_rewrite,omitempty"`
	ConditionalStyleSets *TSCE.CellCoordinateObjectMapArchive `protobuf:"bytes,4,opt,name=conditional_style_sets" json:"conditional_style_sets,omitempty"`
	XXX_unrecognized     []byte                               `json:"-"`
}

func (m *CommandRewriteConditionalStylesForTectonicShiftArchive) Reset() {
	*m = CommandRewriteConditionalStylesForTectonicShiftArchive{}
}
func (m *CommandRewriteConditionalStylesForTectonicShiftArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandRewriteConditionalStylesForTectonicShiftArchive) ProtoMessage() {}

func (m *CommandRewriteConditionalStylesForTectonicShiftArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForTectonicShiftArchive) GetTectonicShift() *TSCE.TectonicShiftArchive {
	if m != nil {
		return m.TectonicShift
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForTectonicShiftArchive) GetCellsToRewrite() *TSCE.CellCoordinateVectorArchive {
	if m != nil {
		return m.CellsToRewrite
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForTectonicShiftArchive) GetConditionalStyleSets() *TSCE.CellCoordinateObjectMapArchive {
	if m != nil {
		return m.ConditionalStyleSets
	}
	return nil
}

type CommandRewriteConditionalStylesForSortArchive struct {
	Super                *TableCommandArchive                 `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SortMapping          *TSK.ShuffleMappingArchive           `protobuf:"bytes,2,req,name=sort_mapping" json:"sort_mapping,omitempty"`
	SortedTableId        *TSCE.CFUUIDArchive                  `protobuf:"bytes,3,req,name=sorted_table_id" json:"sorted_table_id,omitempty"`
	CellsToRewrite       *TSCE.CellCoordinateVectorArchive    `protobuf:"bytes,4,opt,name=cells_to_rewrite" json:"cells_to_rewrite,omitempty"`
	ConditionalStyleSets *TSCE.CellCoordinateObjectMapArchive `protobuf:"bytes,5,opt,name=conditional_style_sets" json:"conditional_style_sets,omitempty"`
	XXX_unrecognized     []byte                               `json:"-"`
}

func (m *CommandRewriteConditionalStylesForSortArchive) Reset() {
	*m = CommandRewriteConditionalStylesForSortArchive{}
}
func (m *CommandRewriteConditionalStylesForSortArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandRewriteConditionalStylesForSortArchive) ProtoMessage() {}

func (m *CommandRewriteConditionalStylesForSortArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForSortArchive) GetSortMapping() *TSK.ShuffleMappingArchive {
	if m != nil {
		return m.SortMapping
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForSortArchive) GetSortedTableId() *TSCE.CFUUIDArchive {
	if m != nil {
		return m.SortedTableId
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForSortArchive) GetCellsToRewrite() *TSCE.CellCoordinateVectorArchive {
	if m != nil {
		return m.CellsToRewrite
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForSortArchive) GetConditionalStyleSets() *TSCE.CellCoordinateObjectMapArchive {
	if m != nil {
		return m.ConditionalStyleSets
	}
	return nil
}

type CommandRewriteConditionalStylesForRangeMoveArchive struct {
	Super                *TableCommandArchive                 `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FromRangeReference   *TSCE.RangeReferenceArchive          `protobuf:"bytes,7,opt,name=from_range_reference" json:"from_range_reference,omitempty"`
	ToRangeReference     *TSCE.RangeReferenceArchive          `protobuf:"bytes,8,opt,name=to_range_reference" json:"to_range_reference,omitempty"`
	CellsToRewrite       *TSCE.CellCoordinateVectorArchive    `protobuf:"bytes,5,opt,name=cells_to_rewrite" json:"cells_to_rewrite,omitempty"`
	ConditionalStyleSets *TSCE.CellCoordinateObjectMapArchive `protobuf:"bytes,6,opt,name=conditional_style_sets" json:"conditional_style_sets,omitempty"`
	XXX_unrecognized     []byte                               `json:"-"`
}

func (m *CommandRewriteConditionalStylesForRangeMoveArchive) Reset() {
	*m = CommandRewriteConditionalStylesForRangeMoveArchive{}
}
func (m *CommandRewriteConditionalStylesForRangeMoveArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandRewriteConditionalStylesForRangeMoveArchive) ProtoMessage() {}

func (m *CommandRewriteConditionalStylesForRangeMoveArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForRangeMoveArchive) GetFromRangeReference() *TSCE.RangeReferenceArchive {
	if m != nil {
		return m.FromRangeReference
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForRangeMoveArchive) GetToRangeReference() *TSCE.RangeReferenceArchive {
	if m != nil {
		return m.ToRangeReference
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForRangeMoveArchive) GetCellsToRewrite() *TSCE.CellCoordinateVectorArchive {
	if m != nil {
		return m.CellsToRewrite
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForRangeMoveArchive) GetConditionalStyleSets() *TSCE.CellCoordinateObjectMapArchive {
	if m != nil {
		return m.ConditionalStyleSets
	}
	return nil
}

type CommandRewriteConditionalStylesForCellMergeArchive struct {
	Super                *TableCommandArchive                 `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	MergedTableId        *TSCE.CFUUIDArchive                  `protobuf:"bytes,2,req,name=merged_table_id" json:"merged_table_id,omitempty"`
	MergedRange          *TSCE.RangeCoordinateArchive         `protobuf:"bytes,3,req,name=merged_range" json:"merged_range,omitempty"`
	CellsToRewrite       *TSCE.CellCoordinateVectorArchive    `protobuf:"bytes,4,opt,name=cells_to_rewrite" json:"cells_to_rewrite,omitempty"`
	ConditionalStyleSets *TSCE.CellCoordinateObjectMapArchive `protobuf:"bytes,5,opt,name=conditional_style_sets" json:"conditional_style_sets,omitempty"`
	XXX_unrecognized     []byte                               `json:"-"`
}

func (m *CommandRewriteConditionalStylesForCellMergeArchive) Reset() {
	*m = CommandRewriteConditionalStylesForCellMergeArchive{}
}
func (m *CommandRewriteConditionalStylesForCellMergeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandRewriteConditionalStylesForCellMergeArchive) ProtoMessage() {}

func (m *CommandRewriteConditionalStylesForCellMergeArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForCellMergeArchive) GetMergedTableId() *TSCE.CFUUIDArchive {
	if m != nil {
		return m.MergedTableId
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForCellMergeArchive) GetMergedRange() *TSCE.RangeCoordinateArchive {
	if m != nil {
		return m.MergedRange
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForCellMergeArchive) GetCellsToRewrite() *TSCE.CellCoordinateVectorArchive {
	if m != nil {
		return m.CellsToRewrite
	}
	return nil
}

func (m *CommandRewriteConditionalStylesForCellMergeArchive) GetConditionalStyleSets() *TSCE.CellCoordinateObjectMapArchive {
	if m != nil {
		return m.ConditionalStyleSets
	}
	return nil
}

type CommandMergeUnmergeArchive struct {
	Super                     *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	MergeAction               *MergeActionArchive  `protobuf:"varint,2,req,name=merge_action,enum=MergeActionArchive" json:"merge_action,omitempty"`
	Selection                 *SelectionArchive    `protobuf:"bytes,3,req,name=selection" json:"selection,omitempty"`
	UndoCellMap               *CellMapArchive      `protobuf:"bytes,4,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap               *CellMapArchive      `protobuf:"bytes,5,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	OldMergeRanges            *TSP.Reference       `protobuf:"bytes,8,opt,name=old_merge_ranges" json:"old_merge_ranges,omitempty"`
	UndoFormulaRewriteCommand *TSP.Reference       `protobuf:"bytes,9,opt,name=undo_formula_rewrite_command" json:"undo_formula_rewrite_command,omitempty"`
	XXX_unrecognized          []byte               `json:"-"`
}

func (m *CommandMergeUnmergeArchive) Reset()         { *m = CommandMergeUnmergeArchive{} }
func (m *CommandMergeUnmergeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMergeUnmergeArchive) ProtoMessage()    {}

func (m *CommandMergeUnmergeArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMergeUnmergeArchive) GetMergeAction() MergeActionArchive {
	if m != nil && m.MergeAction != nil {
		return *m.MergeAction
	}
	return MergeActionArchive_mergeActionMerge
}

func (m *CommandMergeUnmergeArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandMergeUnmergeArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandMergeUnmergeArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandMergeUnmergeArchive) GetOldMergeRanges() *TSP.Reference {
	if m != nil {
		return m.OldMergeRanges
	}
	return nil
}

func (m *CommandMergeUnmergeArchive) GetUndoFormulaRewriteCommand() *TSP.Reference {
	if m != nil {
		return m.UndoFormulaRewriteCommand
	}
	return nil
}

type CommandHideShowArchive struct {
	Super            *TableCommandArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Direction        *CommandDirectionArchive `protobuf:"varint,2,req,name=direction,enum=CommandDirectionArchive" json:"direction,omitempty"`
	HideShowAction   *HideShowActionArchive   `protobuf:"varint,3,req,name=hide_show_action,enum=HideShowActionArchive" json:"hide_show_action,omitempty"`
	HidingAction     *uint32                  `protobuf:"varint,4,req,name=hiding_action" json:"hiding_action,omitempty"`
	ElementsAffected *TSP.IndexSet            `protobuf:"bytes,5,req,name=elements_affected" json:"elements_affected,omitempty"`
	OldHidingStates  []uint32                 `protobuf:"varint,7,rep,name=old_hiding_states" json:"old_hiding_states,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CommandHideShowArchive) Reset()         { *m = CommandHideShowArchive{} }
func (m *CommandHideShowArchive) String() string { return proto.CompactTextString(m) }
func (*CommandHideShowArchive) ProtoMessage()    {}

func (m *CommandHideShowArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandHideShowArchive) GetDirection() CommandDirectionArchive {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return CommandDirectionArchive_directionRow
}

func (m *CommandHideShowArchive) GetHideShowAction() HideShowActionArchive {
	if m != nil && m.HideShowAction != nil {
		return *m.HideShowAction
	}
	return HideShowActionArchive_hideShowActionHide
}

func (m *CommandHideShowArchive) GetHidingAction() uint32 {
	if m != nil && m.HidingAction != nil {
		return *m.HidingAction
	}
	return 0
}

func (m *CommandHideShowArchive) GetElementsAffected() *TSP.IndexSet {
	if m != nil {
		return m.ElementsAffected
	}
	return nil
}

func (m *CommandHideShowArchive) GetOldHidingStates() []uint32 {
	if m != nil {
		return m.OldHidingStates
	}
	return nil
}

type TableInfoGeometryCommandArchive struct {
	Super                             *TSK.CommandArchive  `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ScaleFactor                       *TSP.Size            `protobuf:"bytes,2,req,name=scale_factor" json:"scale_factor,omitempty"`
	TableInfo                         *TSP.Reference       `protobuf:"bytes,3,opt,name=table_info" json:"table_info,omitempty"`
	NewGeometry                       *TSD.GeometryArchive `protobuf:"bytes,4,opt,name=new_geometry" json:"new_geometry,omitempty"`
	OldGeometry                       *TSD.GeometryArchive `protobuf:"bytes,5,opt,name=old_geometry" json:"old_geometry,omitempty"`
	TurnOffAutoResize                 *bool                `protobuf:"varint,6,opt,name=turn_off_auto_resize" json:"turn_off_auto_resize,omitempty"`
	ShouldClearObjectPlaceholderFlag  *bool                `protobuf:"varint,7,opt,name=should_clear_object_placeholder_flag" json:"should_clear_object_placeholder_flag,omitempty"`
	DidMatchObjectPlaceholderGeometry *bool                `protobuf:"varint,8,opt,name=did_match_object_placeholder_geometry" json:"did_match_object_placeholder_geometry,omitempty"`
	XXX_unrecognized                  []byte               `json:"-"`
}

func (m *TableInfoGeometryCommandArchive) Reset()         { *m = TableInfoGeometryCommandArchive{} }
func (m *TableInfoGeometryCommandArchive) String() string { return proto.CompactTextString(m) }
func (*TableInfoGeometryCommandArchive) ProtoMessage()    {}

func (m *TableInfoGeometryCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *TableInfoGeometryCommandArchive) GetScaleFactor() *TSP.Size {
	if m != nil {
		return m.ScaleFactor
	}
	return nil
}

func (m *TableInfoGeometryCommandArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *TableInfoGeometryCommandArchive) GetNewGeometry() *TSD.GeometryArchive {
	if m != nil {
		return m.NewGeometry
	}
	return nil
}

func (m *TableInfoGeometryCommandArchive) GetOldGeometry() *TSD.GeometryArchive {
	if m != nil {
		return m.OldGeometry
	}
	return nil
}

func (m *TableInfoGeometryCommandArchive) GetTurnOffAutoResize() bool {
	if m != nil && m.TurnOffAutoResize != nil {
		return *m.TurnOffAutoResize
	}
	return false
}

func (m *TableInfoGeometryCommandArchive) GetShouldClearObjectPlaceholderFlag() bool {
	if m != nil && m.ShouldClearObjectPlaceholderFlag != nil {
		return *m.ShouldClearObjectPlaceholderFlag
	}
	return false
}

func (m *TableInfoGeometryCommandArchive) GetDidMatchObjectPlaceholderGeometry() bool {
	if m != nil && m.DidMatchObjectPlaceholderGeometry != nil {
		return *m.DidMatchObjectPlaceholderGeometry
	}
	return false
}

type FormulaEditingCommandGroupArchive struct {
	Super               *TSK.ProgressiveCommandGroupArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UndoSelectionValid  *bool                               `protobuf:"varint,2,req,name=undoSelectionValid" json:"undoSelectionValid,omitempty"`
	UndoSelectionStart  *uint32                             `protobuf:"varint,3,req,name=undoSelectionStart" json:"undoSelectionStart,omitempty"`
	UndoSelectionLength *uint32                             `protobuf:"varint,4,req,name=undoSelectionLength" json:"undoSelectionLength,omitempty"`
	UndoActiveToken     *uint32                             `protobuf:"varint,5,req,name=undoActiveToken" json:"undoActiveToken,omitempty"`
	RedoSelectionValid  *bool                               `protobuf:"varint,6,req,name=redoSelectionValid" json:"redoSelectionValid,omitempty"`
	RedoSelectionStart  *uint32                             `protobuf:"varint,7,req,name=redoSelectionStart" json:"redoSelectionStart,omitempty"`
	RedoSelectionLength *uint32                             `protobuf:"varint,8,req,name=redoSelectionLength" json:"redoSelectionLength,omitempty"`
	RedoActiveToken     *uint32                             `protobuf:"varint,9,req,name=redoActiveToken" json:"redoActiveToken,omitempty"`
	XXX_unrecognized    []byte                              `json:"-"`
}

func (m *FormulaEditingCommandGroupArchive) Reset()         { *m = FormulaEditingCommandGroupArchive{} }
func (m *FormulaEditingCommandGroupArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaEditingCommandGroupArchive) ProtoMessage()    {}

func (m *FormulaEditingCommandGroupArchive) GetSuper() *TSK.ProgressiveCommandGroupArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *FormulaEditingCommandGroupArchive) GetUndoSelectionValid() bool {
	if m != nil && m.UndoSelectionValid != nil {
		return *m.UndoSelectionValid
	}
	return false
}

func (m *FormulaEditingCommandGroupArchive) GetUndoSelectionStart() uint32 {
	if m != nil && m.UndoSelectionStart != nil {
		return *m.UndoSelectionStart
	}
	return 0
}

func (m *FormulaEditingCommandGroupArchive) GetUndoSelectionLength() uint32 {
	if m != nil && m.UndoSelectionLength != nil {
		return *m.UndoSelectionLength
	}
	return 0
}

func (m *FormulaEditingCommandGroupArchive) GetUndoActiveToken() uint32 {
	if m != nil && m.UndoActiveToken != nil {
		return *m.UndoActiveToken
	}
	return 0
}

func (m *FormulaEditingCommandGroupArchive) GetRedoSelectionValid() bool {
	if m != nil && m.RedoSelectionValid != nil {
		return *m.RedoSelectionValid
	}
	return false
}

func (m *FormulaEditingCommandGroupArchive) GetRedoSelectionStart() uint32 {
	if m != nil && m.RedoSelectionStart != nil {
		return *m.RedoSelectionStart
	}
	return 0
}

func (m *FormulaEditingCommandGroupArchive) GetRedoSelectionLength() uint32 {
	if m != nil && m.RedoSelectionLength != nil {
		return *m.RedoSelectionLength
	}
	return 0
}

func (m *FormulaEditingCommandGroupArchive) GetRedoActiveToken() uint32 {
	if m != nil && m.RedoActiveToken != nil {
		return *m.RedoActiveToken
	}
	return 0
}

type FormulaEditingCommandSelectionBehaviorArchive struct {
	UndoSelectionValid  *bool          `protobuf:"varint,2,opt,name=undoSelectionValid" json:"undoSelectionValid,omitempty"`
	UndoSelectionStart  *uint32        `protobuf:"varint,3,opt,name=undoSelectionStart" json:"undoSelectionStart,omitempty"`
	UndoSelectionLength *uint32        `protobuf:"varint,4,opt,name=undoSelectionLength" json:"undoSelectionLength,omitempty"`
	UndoActiveToken     *uint32        `protobuf:"varint,5,opt,name=undoActiveToken" json:"undoActiveToken,omitempty"`
	RedoSelectionValid  *bool          `protobuf:"varint,6,opt,name=redoSelectionValid" json:"redoSelectionValid,omitempty"`
	RedoSelectionStart  *uint32        `protobuf:"varint,7,opt,name=redoSelectionStart" json:"redoSelectionStart,omitempty"`
	RedoSelectionLength *uint32        `protobuf:"varint,8,opt,name=redoSelectionLength" json:"redoSelectionLength,omitempty"`
	RedoActiveToken     *uint32        `protobuf:"varint,9,opt,name=redoActiveToken" json:"redoActiveToken,omitempty"`
	Storage             *TSP.Reference `protobuf:"bytes,10,opt,name=storage" json:"storage,omitempty"`
	XXX_unrecognized    []byte         `json:"-"`
}

func (m *FormulaEditingCommandSelectionBehaviorArchive) Reset() {
	*m = FormulaEditingCommandSelectionBehaviorArchive{}
}
func (m *FormulaEditingCommandSelectionBehaviorArchive) String() string {
	return proto.CompactTextString(m)
}
func (*FormulaEditingCommandSelectionBehaviorArchive) ProtoMessage() {}

func (m *FormulaEditingCommandSelectionBehaviorArchive) GetUndoSelectionValid() bool {
	if m != nil && m.UndoSelectionValid != nil {
		return *m.UndoSelectionValid
	}
	return false
}

func (m *FormulaEditingCommandSelectionBehaviorArchive) GetUndoSelectionStart() uint32 {
	if m != nil && m.UndoSelectionStart != nil {
		return *m.UndoSelectionStart
	}
	return 0
}

func (m *FormulaEditingCommandSelectionBehaviorArchive) GetUndoSelectionLength() uint32 {
	if m != nil && m.UndoSelectionLength != nil {
		return *m.UndoSelectionLength
	}
	return 0
}

func (m *FormulaEditingCommandSelectionBehaviorArchive) GetUndoActiveToken() uint32 {
	if m != nil && m.UndoActiveToken != nil {
		return *m.UndoActiveToken
	}
	return 0
}

func (m *FormulaEditingCommandSelectionBehaviorArchive) GetRedoSelectionValid() bool {
	if m != nil && m.RedoSelectionValid != nil {
		return *m.RedoSelectionValid
	}
	return false
}

func (m *FormulaEditingCommandSelectionBehaviorArchive) GetRedoSelectionStart() uint32 {
	if m != nil && m.RedoSelectionStart != nil {
		return *m.RedoSelectionStart
	}
	return 0
}

func (m *FormulaEditingCommandSelectionBehaviorArchive) GetRedoSelectionLength() uint32 {
	if m != nil && m.RedoSelectionLength != nil {
		return *m.RedoSelectionLength
	}
	return 0
}

func (m *FormulaEditingCommandSelectionBehaviorArchive) GetRedoActiveToken() uint32 {
	if m != nil && m.RedoActiveToken != nil {
		return *m.RedoActiveToken
	}
	return 0
}

func (m *FormulaEditingCommandSelectionBehaviorArchive) GetStorage() *TSP.Reference {
	if m != nil {
		return m.Storage
	}
	return nil
}

type UndoRedoStateCommandSelectionBehaviorArchive struct {
	BeforeUndoRedoState  *TSP.Reference    `protobuf:"bytes,1,opt,name=before_undo_redo_state" json:"before_undo_redo_state,omitempty"`
	AfterUndoRedoState   *TSP.Reference    `protobuf:"bytes,2,opt,name=after_undo_redo_state" json:"after_undo_redo_state,omitempty"`
	TableInfo            *TSP.Reference    `protobuf:"bytes,3,opt,name=table_info" json:"table_info,omitempty"`
	BeforeTableSelection *SelectionArchive `protobuf:"bytes,4,opt,name=before_table_selection" json:"before_table_selection,omitempty"`
	AfterTableSelection  *SelectionArchive `protobuf:"bytes,6,opt,name=after_table_selection" json:"after_table_selection,omitempty"`
	XXX_unrecognized     []byte            `json:"-"`
}

func (m *UndoRedoStateCommandSelectionBehaviorArchive) Reset() {
	*m = UndoRedoStateCommandSelectionBehaviorArchive{}
}
func (m *UndoRedoStateCommandSelectionBehaviorArchive) String() string {
	return proto.CompactTextString(m)
}
func (*UndoRedoStateCommandSelectionBehaviorArchive) ProtoMessage() {}

func (m *UndoRedoStateCommandSelectionBehaviorArchive) GetBeforeUndoRedoState() *TSP.Reference {
	if m != nil {
		return m.BeforeUndoRedoState
	}
	return nil
}

func (m *UndoRedoStateCommandSelectionBehaviorArchive) GetAfterUndoRedoState() *TSP.Reference {
	if m != nil {
		return m.AfterUndoRedoState
	}
	return nil
}

func (m *UndoRedoStateCommandSelectionBehaviorArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *UndoRedoStateCommandSelectionBehaviorArchive) GetBeforeTableSelection() *SelectionArchive {
	if m != nil {
		return m.BeforeTableSelection
	}
	return nil
}

func (m *UndoRedoStateCommandSelectionBehaviorArchive) GetAfterTableSelection() *SelectionArchive {
	if m != nil {
		return m.AfterTableSelection
	}
	return nil
}

type TableCommandSelectionBehaviorArchive struct {
	BeforeTableSelection *SelectionArchive `protobuf:"bytes,1,opt,name=before_table_selection" json:"before_table_selection,omitempty"`
	AfterTableSelection  *SelectionArchive `protobuf:"bytes,2,opt,name=after_table_selection" json:"after_table_selection,omitempty"`
	TableInfo            *TSP.Reference    `protobuf:"bytes,3,opt,name=table_info" json:"table_info,omitempty"`
	LastColumnHitByTap   *uint32           `protobuf:"varint,4,opt,name=last_column_hit_by_tap" json:"last_column_hit_by_tap,omitempty"`
	XXX_unrecognized     []byte            `json:"-"`
}

func (m *TableCommandSelectionBehaviorArchive) Reset()         { *m = TableCommandSelectionBehaviorArchive{} }
func (m *TableCommandSelectionBehaviorArchive) String() string { return proto.CompactTextString(m) }
func (*TableCommandSelectionBehaviorArchive) ProtoMessage()    {}

func (m *TableCommandSelectionBehaviorArchive) GetBeforeTableSelection() *SelectionArchive {
	if m != nil {
		return m.BeforeTableSelection
	}
	return nil
}

func (m *TableCommandSelectionBehaviorArchive) GetAfterTableSelection() *SelectionArchive {
	if m != nil {
		return m.AfterTableSelection
	}
	return nil
}

func (m *TableCommandSelectionBehaviorArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *TableCommandSelectionBehaviorArchive) GetLastColumnHitByTap() uint32 {
	if m != nil && m.LastColumnHitByTap != nil {
		return *m.LastColumnHitByTap
	}
	return 0
}

type DisableTableNameSelectionBehaviorArchive struct {
	Super            *TableCommandSelectionBehaviorArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *DisableTableNameSelectionBehaviorArchive) Reset() {
	*m = DisableTableNameSelectionBehaviorArchive{}
}
func (m *DisableTableNameSelectionBehaviorArchive) String() string { return proto.CompactTextString(m) }
func (*DisableTableNameSelectionBehaviorArchive) ProtoMessage()    {}

func (m *DisableTableNameSelectionBehaviorArchive) GetSuper() *TableCommandSelectionBehaviorArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandApplyCellCommentArchive struct {
	Super             *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	CellId            *CellID              `protobuf:"bytes,2,req,name=cell_id" json:"cell_id,omitempty"`
	OldCommentStorage *TSP.Reference       `protobuf:"bytes,3,opt,name=old_comment_storage" json:"old_comment_storage,omitempty"`
	NewCommentStorage *TSP.Reference       `protobuf:"bytes,4,opt,name=new_comment_storage" json:"new_comment_storage,omitempty"`
	XXX_unrecognized  []byte               `json:"-"`
}

func (m *CommandApplyCellCommentArchive) Reset()         { *m = CommandApplyCellCommentArchive{} }
func (m *CommandApplyCellCommentArchive) String() string { return proto.CompactTextString(m) }
func (*CommandApplyCellCommentArchive) ProtoMessage()    {}

func (m *CommandApplyCellCommentArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandApplyCellCommentArchive) GetCellId() *CellID {
	if m != nil {
		return m.CellId
	}
	return nil
}

func (m *CommandApplyCellCommentArchive) GetOldCommentStorage() *TSP.Reference {
	if m != nil {
		return m.OldCommentStorage
	}
	return nil
}

func (m *CommandApplyCellCommentArchive) GetNewCommentStorage() *TSP.Reference {
	if m != nil {
		return m.NewCommentStorage
	}
	return nil
}

type CommandApplyConditionalStyleSetArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Selection        *SelectionArchive    `protobuf:"bytes,2,req,name=selection" json:"selection,omitempty"`
	UndoCellMap      *CellMapArchive      `protobuf:"bytes,3,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive      `protobuf:"bytes,4,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandApplyConditionalStyleSetArchive) Reset() {
	*m = CommandApplyConditionalStyleSetArchive{}
}
func (m *CommandApplyConditionalStyleSetArchive) String() string { return proto.CompactTextString(m) }
func (*CommandApplyConditionalStyleSetArchive) ProtoMessage()    {}

func (m *CommandApplyConditionalStyleSetArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandApplyConditionalStyleSetArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *CommandApplyConditionalStyleSetArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandApplyConditionalStyleSetArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

type CommandSetFormulaTokenizationArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Tokenization     *bool               `protobuf:"varint,2,req,name=tokenization" json:"tokenization,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSetFormulaTokenizationArchive) Reset()         { *m = CommandSetFormulaTokenizationArchive{} }
func (m *CommandSetFormulaTokenizationArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetFormulaTokenizationArchive) ProtoMessage()    {}

func (m *CommandSetFormulaTokenizationArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetFormulaTokenizationArchive) GetTokenization() bool {
	if m != nil && m.Tokenization != nil {
		return *m.Tokenization
	}
	return false
}

type CommandSetFilterEnabledArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FilterIndex      *uint32              `protobuf:"varint,2,req,name=filter_index" json:"filter_index,omitempty"`
	Enabled          *bool                `protobuf:"varint,4,req,name=enabled" json:"enabled,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetFilterEnabledArchive) Reset()         { *m = CommandSetFilterEnabledArchive{} }
func (m *CommandSetFilterEnabledArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetFilterEnabledArchive) ProtoMessage()    {}

func (m *CommandSetFilterEnabledArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetFilterEnabledArchive) GetFilterIndex() uint32 {
	if m != nil && m.FilterIndex != nil {
		return *m.FilterIndex
	}
	return 0
}

func (m *CommandSetFilterEnabledArchive) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

type CommandSetFilterRuleEnabledArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FilterIndex      *uint32              `protobuf:"varint,2,req,name=filter_index" json:"filter_index,omitempty"`
	RuleIndex        *uint32              `protobuf:"varint,3,req,name=rule_index" json:"rule_index,omitempty"`
	Enabled          *bool                `protobuf:"varint,4,req,name=enabled" json:"enabled,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetFilterRuleEnabledArchive) Reset()         { *m = CommandSetFilterRuleEnabledArchive{} }
func (m *CommandSetFilterRuleEnabledArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetFilterRuleEnabledArchive) ProtoMessage()    {}

func (m *CommandSetFilterRuleEnabledArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetFilterRuleEnabledArchive) GetFilterIndex() uint32 {
	if m != nil && m.FilterIndex != nil {
		return *m.FilterIndex
	}
	return 0
}

func (m *CommandSetFilterRuleEnabledArchive) GetRuleIndex() uint32 {
	if m != nil && m.RuleIndex != nil {
		return *m.RuleIndex
	}
	return 0
}

func (m *CommandSetFilterRuleEnabledArchive) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

type CommandSetFilterSetTypeArchive struct {
	Super            *TableCommandArchive            `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OldFilterSetType *FilterSetArchive_FilterSetType `protobuf:"varint,2,req,name=old_filter_set_type,enum=FilterSetArchive_FilterSetType" json:"old_filter_set_type,omitempty"`
	NewFilterSetType *FilterSetArchive_FilterSetType `protobuf:"varint,3,req,name=new_filter_set_type,enum=FilterSetArchive_FilterSetType" json:"new_filter_set_type,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *CommandSetFilterSetTypeArchive) Reset()         { *m = CommandSetFilterSetTypeArchive{} }
func (m *CommandSetFilterSetTypeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetFilterSetTypeArchive) ProtoMessage()    {}

func (m *CommandSetFilterSetTypeArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetFilterSetTypeArchive) GetOldFilterSetType() FilterSetArchive_FilterSetType {
	if m != nil && m.OldFilterSetType != nil {
		return *m.OldFilterSetType
	}
	return FilterSetArchive_FilterSetArchiveTypeAll
}

func (m *CommandSetFilterSetTypeArchive) GetNewFilterSetType() FilterSetArchive_FilterSetType {
	if m != nil && m.NewFilterSetType != nil {
		return *m.NewFilterSetType
	}
	return FilterSetArchive_FilterSetArchiveTypeAll
}

type CommandSetStyleNetworkArchive struct {
	Super            *TableCommandArchive      `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OldStyleNetwork  *TableStyleNetworkArchive `protobuf:"bytes,2,req,name=old_style_network" json:"old_style_network,omitempty"`
	NewStyleNetwork  *TableStyleNetworkArchive `protobuf:"bytes,3,req,name=new_style_network" json:"new_style_network,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *CommandSetStyleNetworkArchive) Reset()         { *m = CommandSetStyleNetworkArchive{} }
func (m *CommandSetStyleNetworkArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetStyleNetworkArchive) ProtoMessage()    {}

func (m *CommandSetStyleNetworkArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetStyleNetworkArchive) GetOldStyleNetwork() *TableStyleNetworkArchive {
	if m != nil {
		return m.OldStyleNetwork
	}
	return nil
}

func (m *CommandSetStyleNetworkArchive) GetNewStyleNetwork() *TableStyleNetworkArchive {
	if m != nil {
		return m.NewStyleNetwork
	}
	return nil
}

type CommandMutateCellsArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UndoCellMap      *CellMapArchive      `protobuf:"bytes,2,req,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive      `protobuf:"bytes,3,req,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	Selection        *SelectionArchive    `protobuf:"bytes,4,opt,name=selection" json:"selection,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandMutateCellsArchive) Reset()         { *m = CommandMutateCellsArchive{} }
func (m *CommandMutateCellsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMutateCellsArchive) ProtoMessage()    {}

func (m *CommandMutateCellsArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMutateCellsArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandMutateCellsArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandMutateCellsArchive) GetSelection() *SelectionArchive {
	if m != nil {
		return m.Selection
	}
	return nil
}

type CommandDisableFilterRulesForColumnArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ColumnIndex      *uint32              `protobuf:"varint,2,req,name=column_index" json:"column_index,omitempty"`
	RuleIndices      []uint32             `protobuf:"varint,3,rep,name=rule_indices" json:"rule_indices,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandDisableFilterRulesForColumnArchive) Reset() {
	*m = CommandDisableFilterRulesForColumnArchive{}
}
func (m *CommandDisableFilterRulesForColumnArchive) String() string { return proto.CompactTextString(m) }
func (*CommandDisableFilterRulesForColumnArchive) ProtoMessage()    {}

func (m *CommandDisableFilterRulesForColumnArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandDisableFilterRulesForColumnArchive) GetColumnIndex() uint32 {
	if m != nil && m.ColumnIndex != nil {
		return *m.ColumnIndex
	}
	return 0
}

func (m *CommandDisableFilterRulesForColumnArchive) GetRuleIndices() []uint32 {
	if m != nil {
		return m.RuleIndices
	}
	return nil
}

type CommandSetTextStyleArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Region           *CellRegion          `protobuf:"bytes,2,req,name=region" json:"region,omitempty"`
	UndoCellMap      *CellMapArchive      `protobuf:"bytes,3,opt,name=undo_cell_map" json:"undo_cell_map,omitempty"`
	RedoCellMap      *CellMapArchive      `protobuf:"bytes,4,opt,name=redo_cell_map" json:"redo_cell_map,omitempty"`
	Subcommands      *TSP.Reference       `protobuf:"bytes,5,opt,name=subcommands" json:"subcommands,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSetTextStyleArchive) Reset()         { *m = CommandSetTextStyleArchive{} }
func (m *CommandSetTextStyleArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetTextStyleArchive) ProtoMessage()    {}

func (m *CommandSetTextStyleArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetTextStyleArchive) GetRegion() *CellRegion {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *CommandSetTextStyleArchive) GetUndoCellMap() *CellMapArchive {
	if m != nil {
		return m.UndoCellMap
	}
	return nil
}

func (m *CommandSetTextStyleArchive) GetRedoCellMap() *CellMapArchive {
	if m != nil {
		return m.RedoCellMap
	}
	return nil
}

func (m *CommandSetTextStyleArchive) GetSubcommands() *TSP.Reference {
	if m != nil {
		return m.Subcommands
	}
	return nil
}

type CommandNotifyForTransformingArchive struct {
	Super            *TableCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandNotifyForTransformingArchive) Reset()         { *m = CommandNotifyForTransformingArchive{} }
func (m *CommandNotifyForTransformingArchive) String() string { return proto.CompactTextString(m) }
func (*CommandNotifyForTransformingArchive) ProtoMessage()    {}

func (m *CommandNotifyForTransformingArchive) GetSuper() *TableCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetStorageLanguageArchive struct {
	Super            *TSK.CommandArchive   `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Storage          *TSP.Reference        `protobuf:"bytes,2,req,name=storage" json:"storage,omitempty"`
	Language         *string               `protobuf:"bytes,3,req,name=language" json:"language,omitempty"`
	RangeLocation    *uint32               `protobuf:"varint,4,req,name=range_location" json:"range_location,omitempty"`
	RangeLength      *uint32               `protobuf:"varint,5,req,name=range_length" json:"range_length,omitempty"`
	UndoTransaction  *TSWP.UndoTransaction `protobuf:"bytes,6,opt,name=undo_transaction" json:"undo_transaction,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CommandSetStorageLanguageArchive) Reset()         { *m = CommandSetStorageLanguageArchive{} }
func (m *CommandSetStorageLanguageArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetStorageLanguageArchive) ProtoMessage()    {}

func (m *CommandSetStorageLanguageArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSetStorageLanguageArchive) GetStorage() *TSP.Reference {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *CommandSetStorageLanguageArchive) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *CommandSetStorageLanguageArchive) GetRangeLocation() uint32 {
	if m != nil && m.RangeLocation != nil {
		return *m.RangeLocation
	}
	return 0
}

func (m *CommandSetStorageLanguageArchive) GetRangeLength() uint32 {
	if m != nil && m.RangeLength != nil {
		return *m.RangeLength
	}
	return 0
}

func (m *CommandSetStorageLanguageArchive) GetUndoTransaction() *TSWP.UndoTransaction {
	if m != nil {
		return m.UndoTransaction
	}
	return nil
}

func init() {
	proto.RegisterEnum("CommandDirectionArchive", CommandDirectionArchive_name, CommandDirectionArchive_value)
	proto.RegisterEnum("CommandRegionArchive", CommandRegionArchive_name, CommandRegionArchive_value)
}
