// Code generated by protoc-gen-go.
// source: TPArchives.proto
// DO NOT EDIT!

/*
Package TP is a generated protocol buffer package.

It is generated from these files:
	TPArchives.proto

It has these top-level messages:
	DocumentArchive
	ThemeArchive
	SettingsArchive
	PlaceholderArchive
	FloatingDrawablesArchive
	DrawablesZOrderArchive
	PageMasterArchive
	SectionArchive
	AnchorPosArchive
	TargetHintArchive
	PageHintArchive
	SectionHintArchive
	TextboxHintArchive
	TopicNumberEntryArchive
	TopicNumberHintsArchive
	LayoutStateArchive
	CanvasSelectionArchive
	ViewStateArchive
	UIStateArchive
*/
package TP

import proto "github.com/golang/protobuf/proto"
import math "math"

// discarding unused import TSD "TSDArchives.pb"
// discarding unused import TSK "TSKArchives.pb"
import "github.com/orcastor/iwork-converter/proto/TSP"
import "github.com/orcastor/iwork-converter/proto/TSWP"
import "github.com/orcastor/iwork-converter/proto/TSS"
import "github.com/orcastor/iwork-converter/proto/TSA"
import "github.com/orcastor/iwork-converter/proto/TSCH"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ViewScaleMode int32

const (
	ViewScaleMode_ViewScaleMode_UserDefined ViewScaleMode = 0
	ViewScaleMode_ViewScaleMode_FitWidth    ViewScaleMode = 1
	ViewScaleMode_ViewScaleMode_FirPage     ViewScaleMode = 2
)

var ViewScaleMode_name = map[int32]string{
	0: "ViewScaleMode_UserDefined",
	1: "ViewScaleMode_FitWidth",
	2: "ViewScaleMode_FirPage",
}
var ViewScaleMode_value = map[string]int32{
	"ViewScaleMode_UserDefined": 0,
	"ViewScaleMode_FitWidth":    1,
	"ViewScaleMode_FirPage":     2,
}

func (x ViewScaleMode) Enum() *ViewScaleMode {
	p := new(ViewScaleMode)
	*p = x
	return p
}
func (x ViewScaleMode) String() string {
	return proto.EnumName(ViewScaleMode_name, int32(x))
}
func (x *ViewScaleMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ViewScaleMode_value, data, "ViewScaleMode")
	if err != nil {
		return err
	}
	*x = ViewScaleMode(value)
	return nil
}

type SettingsArchive_FootnoteKind int32

const (
	SettingsArchive_kFootnoteKindFootnotes        SettingsArchive_FootnoteKind = 0
	SettingsArchive_kFootnoteKindDocumentEndnotes SettingsArchive_FootnoteKind = 1
	SettingsArchive_kFootnoteKindSectionEndnotes  SettingsArchive_FootnoteKind = 2
)

var SettingsArchive_FootnoteKind_name = map[int32]string{
	0: "kFootnoteKindFootnotes",
	1: "kFootnoteKindDocumentEndnotes",
	2: "kFootnoteKindSectionEndnotes",
}
var SettingsArchive_FootnoteKind_value = map[string]int32{
	"kFootnoteKindFootnotes":        0,
	"kFootnoteKindDocumentEndnotes": 1,
	"kFootnoteKindSectionEndnotes":  2,
}

func (x SettingsArchive_FootnoteKind) Enum() *SettingsArchive_FootnoteKind {
	p := new(SettingsArchive_FootnoteKind)
	*p = x
	return p
}
func (x SettingsArchive_FootnoteKind) String() string {
	return proto.EnumName(SettingsArchive_FootnoteKind_name, int32(x))
}
func (x *SettingsArchive_FootnoteKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SettingsArchive_FootnoteKind_value, data, "SettingsArchive_FootnoteKind")
	if err != nil {
		return err
	}
	*x = SettingsArchive_FootnoteKind(value)
	return nil
}

type SettingsArchive_FootnoteFormat int32

const (
	SettingsArchive_kFootnoteFormatNumeric             SettingsArchive_FootnoteFormat = 0
	SettingsArchive_kFootnoteFormatRoman               SettingsArchive_FootnoteFormat = 1
	SettingsArchive_kFootnoteFormatSymbolic            SettingsArchive_FootnoteFormat = 2
	SettingsArchive_kFootnoteFormatJapaneseNumeric     SettingsArchive_FootnoteFormat = 3
	SettingsArchive_kFootnoteFormatJapaneseIdeographic SettingsArchive_FootnoteFormat = 4
)

var SettingsArchive_FootnoteFormat_name = map[int32]string{
	0: "kFootnoteFormatNumeric",
	1: "kFootnoteFormatRoman",
	2: "kFootnoteFormatSymbolic",
	3: "kFootnoteFormatJapaneseNumeric",
	4: "kFootnoteFormatJapaneseIdeographic",
}
var SettingsArchive_FootnoteFormat_value = map[string]int32{
	"kFootnoteFormatNumeric":             0,
	"kFootnoteFormatRoman":               1,
	"kFootnoteFormatSymbolic":            2,
	"kFootnoteFormatJapaneseNumeric":     3,
	"kFootnoteFormatJapaneseIdeographic": 4,
}

func (x SettingsArchive_FootnoteFormat) Enum() *SettingsArchive_FootnoteFormat {
	p := new(SettingsArchive_FootnoteFormat)
	*p = x
	return p
}
func (x SettingsArchive_FootnoteFormat) String() string {
	return proto.EnumName(SettingsArchive_FootnoteFormat_name, int32(x))
}
func (x *SettingsArchive_FootnoteFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SettingsArchive_FootnoteFormat_value, data, "SettingsArchive_FootnoteFormat")
	if err != nil {
		return err
	}
	*x = SettingsArchive_FootnoteFormat(value)
	return nil
}

type SettingsArchive_FootnoteNumbering int32

const (
	SettingsArchive_kFootnoteNumberingContinuous         SettingsArchive_FootnoteNumbering = 0
	SettingsArchive_kFootnoteNumberingRestartEachPage    SettingsArchive_FootnoteNumbering = 1
	SettingsArchive_kFootnoteNumberingRestartEachSection SettingsArchive_FootnoteNumbering = 2
)

var SettingsArchive_FootnoteNumbering_name = map[int32]string{
	0: "kFootnoteNumberingContinuous",
	1: "kFootnoteNumberingRestartEachPage",
	2: "kFootnoteNumberingRestartEachSection",
}
var SettingsArchive_FootnoteNumbering_value = map[string]int32{
	"kFootnoteNumberingContinuous":         0,
	"kFootnoteNumberingRestartEachPage":    1,
	"kFootnoteNumberingRestartEachSection": 2,
}

func (x SettingsArchive_FootnoteNumbering) Enum() *SettingsArchive_FootnoteNumbering {
	p := new(SettingsArchive_FootnoteNumbering)
	*p = x
	return p
}
func (x SettingsArchive_FootnoteNumbering) String() string {
	return proto.EnumName(SettingsArchive_FootnoteNumbering_name, int32(x))
}
func (x *SettingsArchive_FootnoteNumbering) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SettingsArchive_FootnoteNumbering_value, data, "SettingsArchive_FootnoteNumbering")
	if err != nil {
		return err
	}
	*x = SettingsArchive_FootnoteNumbering(value)
	return nil
}

type PageHintArchive_PageKind int32

const (
	PageHintArchive_kPageKindNone         PageHintArchive_PageKind = 0
	PageHintArchive_kPageKindText         PageHintArchive_PageKind = 1
	PageHintArchive_kPageKindFiller       PageHintArchive_PageKind = 2
	PageHintArchive_kPageKindOrphan       PageHintArchive_PageKind = 3
	PageHintArchive_kPageKindEndnote      PageHintArchive_PageKind = 4
	PageHintArchive_kPageKindDirty        PageHintArchive_PageKind = 5
	PageHintArchive_kTPPageKindPageLayout PageHintArchive_PageKind = 6
)

var PageHintArchive_PageKind_name = map[int32]string{
	0: "kPageKindNone",
	1: "kPageKindText",
	2: "kPageKindFiller",
	3: "kPageKindOrphan",
	4: "kPageKindEndnote",
	5: "kPageKindDirty",
	6: "kTPPageKindPageLayout",
}
var PageHintArchive_PageKind_value = map[string]int32{
	"kPageKindNone":         0,
	"kPageKindText":         1,
	"kPageKindFiller":       2,
	"kPageKindOrphan":       3,
	"kPageKindEndnote":      4,
	"kPageKindDirty":        5,
	"kTPPageKindPageLayout": 6,
}

func (x PageHintArchive_PageKind) Enum() *PageHintArchive_PageKind {
	p := new(PageHintArchive_PageKind)
	*p = x
	return p
}
func (x PageHintArchive_PageKind) String() string {
	return proto.EnumName(PageHintArchive_PageKind_name, int32(x))
}
func (x *PageHintArchive_PageKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PageHintArchive_PageKind_value, data, "PageHintArchive_PageKind")
	if err != nil {
		return err
	}
	*x = PageHintArchive_PageKind(value)
	return nil
}

type DocumentArchive struct {
	Super                  *TSA.DocumentArchive `protobuf:"bytes,15,req,name=super" json:"super,omitempty"`
	Stylesheet             *TSP.Reference       `protobuf:"bytes,2,opt,name=stylesheet" json:"stylesheet,omitempty"`
	FloatingDrawables      *TSP.Reference       `protobuf:"bytes,3,opt,name=floating_drawables" json:"floating_drawables,omitempty"`
	BodyStorage            *TSP.Reference       `protobuf:"bytes,4,opt,name=body_storage" json:"body_storage,omitempty"`
	Section                *TSP.Reference       `protobuf:"bytes,5,opt,name=section" json:"section,omitempty"`
	Theme                  *TSP.Reference       `protobuf:"bytes,6,opt,name=theme" json:"theme,omitempty"`
	Settings               *TSP.Reference       `protobuf:"bytes,7,opt,name=settings" json:"settings,omitempty"`
	DeprecatedLayoutState  *TSP.Reference       `protobuf:"bytes,11,opt,name=deprecated_layout_state" json:"deprecated_layout_state,omitempty"`
	DeprecatedViewState    *TSP.Reference       `protobuf:"bytes,12,opt,name=deprecated_view_state" json:"deprecated_view_state,omitempty"`
	CitationRecords        []*TSP.Reference     `protobuf:"bytes,13,rep,name=citation_records" json:"citation_records,omitempty"`
	TocStyles              []*TSP.Reference     `protobuf:"bytes,14,rep,name=toc_styles" json:"toc_styles,omitempty"`
	ChangeSessions         []*TSP.Reference     `protobuf:"bytes,16,rep,name=change_sessions" json:"change_sessions,omitempty"`
	DrawablesZorder        *TSP.Reference       `protobuf:"bytes,20,opt,name=drawables_zorder" json:"drawables_zorder,omitempty"`
	UsesSingleHeaderFooter *bool                `protobuf:"varint,21,opt,name=uses_single_header_footer" json:"uses_single_header_footer,omitempty"`
	PageWidth              *float32             `protobuf:"fixed32,30,opt,name=page_width" json:"page_width,omitempty"`
	PageHeight             *float32             `protobuf:"fixed32,31,opt,name=page_height" json:"page_height,omitempty"`
	LeftMargin             *float32             `protobuf:"fixed32,32,opt,name=left_margin" json:"left_margin,omitempty"`
	RightMargin            *float32             `protobuf:"fixed32,33,opt,name=right_margin" json:"right_margin,omitempty"`
	TopMargin              *float32             `protobuf:"fixed32,34,opt,name=top_margin" json:"top_margin,omitempty"`
	BottomMargin           *float32             `protobuf:"fixed32,35,opt,name=bottom_margin" json:"bottom_margin,omitempty"`
	HeaderMargin           *float32             `protobuf:"fixed32,36,opt,name=header_margin" json:"header_margin,omitempty"`
	FooterMargin           *float32             `protobuf:"fixed32,37,opt,name=footer_margin" json:"footer_margin,omitempty"`
	PageScale              *float32             `protobuf:"fixed32,38,opt,name=page_scale" json:"page_scale,omitempty"`
	LayoutBodyVertically   *bool                `protobuf:"varint,39,opt,name=layout_body_vertically" json:"layout_body_vertically,omitempty"`
	ChangeTrackingEnabled  *bool                `protobuf:"varint,40,opt,name=change_tracking_enabled" json:"change_tracking_enabled,omitempty"`
	TablesCustomFormatList *TSP.Reference       `protobuf:"bytes,41,opt,name=tables_custom_format_list" json:"tables_custom_format_list,omitempty"`
	Orientation            *uint32              `protobuf:"varint,42,opt,name=orientation,def=0" json:"orientation,omitempty"`
	PrinterId              *string              `protobuf:"bytes,43,opt,name=printer_id" json:"printer_id,omitempty"`
	PaperId                *string              `protobuf:"bytes,44,opt,name=paper_id" json:"paper_id,omitempty"`
	ChangeTrackingPaused   *bool                `protobuf:"varint,45,opt,name=change_tracking_paused" json:"change_tracking_paused,omitempty"`
	XXX_unrecognized       []byte               `json:"-"`
}

func (m *DocumentArchive) Reset()         { *m = DocumentArchive{} }
func (m *DocumentArchive) String() string { return proto.CompactTextString(m) }
func (*DocumentArchive) ProtoMessage()    {}

const Default_DocumentArchive_Orientation uint32 = 0

func (m *DocumentArchive) GetSuper() *TSA.DocumentArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *DocumentArchive) GetStylesheet() *TSP.Reference {
	if m != nil {
		return m.Stylesheet
	}
	return nil
}

func (m *DocumentArchive) GetFloatingDrawables() *TSP.Reference {
	if m != nil {
		return m.FloatingDrawables
	}
	return nil
}

func (m *DocumentArchive) GetBodyStorage() *TSP.Reference {
	if m != nil {
		return m.BodyStorage
	}
	return nil
}

func (m *DocumentArchive) GetSection() *TSP.Reference {
	if m != nil {
		return m.Section
	}
	return nil
}

func (m *DocumentArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *DocumentArchive) GetSettings() *TSP.Reference {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *DocumentArchive) GetDeprecatedLayoutState() *TSP.Reference {
	if m != nil {
		return m.DeprecatedLayoutState
	}
	return nil
}

func (m *DocumentArchive) GetDeprecatedViewState() *TSP.Reference {
	if m != nil {
		return m.DeprecatedViewState
	}
	return nil
}

func (m *DocumentArchive) GetCitationRecords() []*TSP.Reference {
	if m != nil {
		return m.CitationRecords
	}
	return nil
}

func (m *DocumentArchive) GetTocStyles() []*TSP.Reference {
	if m != nil {
		return m.TocStyles
	}
	return nil
}

func (m *DocumentArchive) GetChangeSessions() []*TSP.Reference {
	if m != nil {
		return m.ChangeSessions
	}
	return nil
}

func (m *DocumentArchive) GetDrawablesZorder() *TSP.Reference {
	if m != nil {
		return m.DrawablesZorder
	}
	return nil
}

func (m *DocumentArchive) GetUsesSingleHeaderFooter() bool {
	if m != nil && m.UsesSingleHeaderFooter != nil {
		return *m.UsesSingleHeaderFooter
	}
	return false
}

func (m *DocumentArchive) GetPageWidth() float32 {
	if m != nil && m.PageWidth != nil {
		return *m.PageWidth
	}
	return 0
}

func (m *DocumentArchive) GetPageHeight() float32 {
	if m != nil && m.PageHeight != nil {
		return *m.PageHeight
	}
	return 0
}

func (m *DocumentArchive) GetLeftMargin() float32 {
	if m != nil && m.LeftMargin != nil {
		return *m.LeftMargin
	}
	return 0
}

func (m *DocumentArchive) GetRightMargin() float32 {
	if m != nil && m.RightMargin != nil {
		return *m.RightMargin
	}
	return 0
}

func (m *DocumentArchive) GetTopMargin() float32 {
	if m != nil && m.TopMargin != nil {
		return *m.TopMargin
	}
	return 0
}

func (m *DocumentArchive) GetBottomMargin() float32 {
	if m != nil && m.BottomMargin != nil {
		return *m.BottomMargin
	}
	return 0
}

func (m *DocumentArchive) GetHeaderMargin() float32 {
	if m != nil && m.HeaderMargin != nil {
		return *m.HeaderMargin
	}
	return 0
}

func (m *DocumentArchive) GetFooterMargin() float32 {
	if m != nil && m.FooterMargin != nil {
		return *m.FooterMargin
	}
	return 0
}

func (m *DocumentArchive) GetPageScale() float32 {
	if m != nil && m.PageScale != nil {
		return *m.PageScale
	}
	return 0
}

func (m *DocumentArchive) GetLayoutBodyVertically() bool {
	if m != nil && m.LayoutBodyVertically != nil {
		return *m.LayoutBodyVertically
	}
	return false
}

func (m *DocumentArchive) GetChangeTrackingEnabled() bool {
	if m != nil && m.ChangeTrackingEnabled != nil {
		return *m.ChangeTrackingEnabled
	}
	return false
}

func (m *DocumentArchive) GetTablesCustomFormatList() *TSP.Reference {
	if m != nil {
		return m.TablesCustomFormatList
	}
	return nil
}

func (m *DocumentArchive) GetOrientation() uint32 {
	if m != nil && m.Orientation != nil {
		return *m.Orientation
	}
	return Default_DocumentArchive_Orientation
}

func (m *DocumentArchive) GetPrinterId() string {
	if m != nil && m.PrinterId != nil {
		return *m.PrinterId
	}
	return ""
}

func (m *DocumentArchive) GetPaperId() string {
	if m != nil && m.PaperId != nil {
		return *m.PaperId
	}
	return ""
}

func (m *DocumentArchive) GetChangeTrackingPaused() bool {
	if m != nil && m.ChangeTrackingPaused != nil {
		return *m.ChangeTrackingPaused
	}
	return false
}

type ThemeArchive struct {
	Super            *TSS.ThemeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ThemeArchive) Reset()         { *m = ThemeArchive{} }
func (m *ThemeArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeArchive) ProtoMessage()    {}

func (m *ThemeArchive) GetSuper() *TSS.ThemeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type SettingsArchive struct {
	Body                 *bool                              `protobuf:"varint,1,opt,name=body,def=1" json:"body,omitempty"`
	Headers              *bool                              `protobuf:"varint,2,opt,name=headers,def=1" json:"headers,omitempty"`
	Footers              *bool                              `protobuf:"varint,3,opt,name=footers,def=1" json:"footers,omitempty"`
	Preview              *bool                              `protobuf:"varint,4,opt,name=preview,def=1" json:"preview,omitempty"`
	CopyMovies           *bool                              `protobuf:"varint,5,opt,name=copy_movies,def=1" json:"copy_movies,omitempty"`
	CopyAssets           *bool                              `protobuf:"varint,6,opt,name=copy_assets,def=1" json:"copy_assets,omitempty"`
	PlaceholderAuthoring *bool                              `protobuf:"varint,7,opt,name=placeholder_authoring,def=0" json:"placeholder_authoring,omitempty"`
	LinksEnabled         *bool                              `protobuf:"varint,8,opt,name=links_enabled,def=1" json:"links_enabled,omitempty"`
	Hyphenation          *bool                              `protobuf:"varint,9,opt,name=hyphenation,def=0" json:"hyphenation,omitempty"`
	UseLigatures         *bool                              `protobuf:"varint,10,opt,name=use_ligatures,def=0" json:"use_ligatures,omitempty"`
	TocLinksEnabled      *bool                              `protobuf:"varint,11,opt,name=toc_links_enabled,def=0" json:"toc_links_enabled,omitempty"`
	ShowCtMarkup         *bool                              `protobuf:"varint,12,opt,name=show_ct_markup,def=1" json:"show_ct_markup,omitempty"`
	ShowCtDeletions      *bool                              `protobuf:"varint,13,opt,name=show_ct_deletions,def=1" json:"show_ct_deletions,omitempty"`
	CtBubblesVisibility  *int32                             `protobuf:"varint,14,opt,name=ct_bubbles_visibility" json:"ct_bubbles_visibility,omitempty"`
	ChangeBarsVisible    *bool                              `protobuf:"varint,15,opt,name=change_bars_visible,def=1" json:"change_bars_visible,omitempty"`
	FormatChangesVisible *bool                              `protobuf:"varint,16,opt,name=format_changes_visible,def=1" json:"format_changes_visible,omitempty"`
	AnnotationsVisible   *bool                              `protobuf:"varint,17,opt,name=annotations_visible,def=1" json:"annotations_visible,omitempty"`
	DocumentIsRtl        *bool                              `protobuf:"varint,18,opt,name=document_is_rtl,def=0" json:"document_is_rtl,omitempty"`
	DecimalTab           *string                            `protobuf:"bytes,20,opt,name=decimal_tab" json:"decimal_tab,omitempty"`
	Language             *string                            `protobuf:"bytes,21,opt,name=language" json:"language,omitempty"`
	HyphenationLanguage  *string                            `protobuf:"bytes,22,opt,name=hyphenation_language" json:"hyphenation_language,omitempty"`
	CreationLocale       *string                            `protobuf:"bytes,23,opt,name=creation_locale" json:"creation_locale,omitempty"`
	LastLocale           *string                            `protobuf:"bytes,24,opt,name=last_locale" json:"last_locale,omitempty"`
	OrigTemplate         *string                            `protobuf:"bytes,25,opt,name=orig_template" json:"orig_template,omitempty"`
	CreationDate         *string                            `protobuf:"bytes,26,opt,name=creation_date" json:"creation_date,omitempty"`
	BibliographyFormat   *string                            `protobuf:"bytes,27,opt,name=bibliography_format" json:"bibliography_format,omitempty"`
	FootnoteKind         *SettingsArchive_FootnoteKind      `protobuf:"varint,30,opt,name=footnote_kind,enum=TP.SettingsArchive_FootnoteKind" json:"footnote_kind,omitempty"`
	FootnoteFormat       *SettingsArchive_FootnoteFormat    `protobuf:"varint,31,opt,name=footnote_format,enum=TP.SettingsArchive_FootnoteFormat" json:"footnote_format,omitempty"`
	FootnoteNumbering    *SettingsArchive_FootnoteNumbering `protobuf:"varint,32,opt,name=footnote_numbering,enum=TP.SettingsArchive_FootnoteNumbering" json:"footnote_numbering,omitempty"`
	FootnoteGap          *int32                             `protobuf:"varint,33,opt,name=footnote_gap" json:"footnote_gap,omitempty"`
	SectionAuthoring     *bool                              `protobuf:"varint,40,opt,name=section_authoring,def=0" json:"section_authoring,omitempty"`
	XXX_unrecognized     []byte                             `json:"-"`
}

func (m *SettingsArchive) Reset()         { *m = SettingsArchive{} }
func (m *SettingsArchive) String() string { return proto.CompactTextString(m) }
func (*SettingsArchive) ProtoMessage()    {}

const Default_SettingsArchive_Body bool = true
const Default_SettingsArchive_Headers bool = true
const Default_SettingsArchive_Footers bool = true
const Default_SettingsArchive_Preview bool = true
const Default_SettingsArchive_CopyMovies bool = true
const Default_SettingsArchive_CopyAssets bool = true
const Default_SettingsArchive_PlaceholderAuthoring bool = false
const Default_SettingsArchive_LinksEnabled bool = true
const Default_SettingsArchive_Hyphenation bool = false
const Default_SettingsArchive_UseLigatures bool = false
const Default_SettingsArchive_TocLinksEnabled bool = false
const Default_SettingsArchive_ShowCtMarkup bool = true
const Default_SettingsArchive_ShowCtDeletions bool = true
const Default_SettingsArchive_ChangeBarsVisible bool = true
const Default_SettingsArchive_FormatChangesVisible bool = true
const Default_SettingsArchive_AnnotationsVisible bool = true
const Default_SettingsArchive_DocumentIsRtl bool = false
const Default_SettingsArchive_SectionAuthoring bool = false

func (m *SettingsArchive) GetBody() bool {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return Default_SettingsArchive_Body
}

func (m *SettingsArchive) GetHeaders() bool {
	if m != nil && m.Headers != nil {
		return *m.Headers
	}
	return Default_SettingsArchive_Headers
}

func (m *SettingsArchive) GetFooters() bool {
	if m != nil && m.Footers != nil {
		return *m.Footers
	}
	return Default_SettingsArchive_Footers
}

func (m *SettingsArchive) GetPreview() bool {
	if m != nil && m.Preview != nil {
		return *m.Preview
	}
	return Default_SettingsArchive_Preview
}

func (m *SettingsArchive) GetCopyMovies() bool {
	if m != nil && m.CopyMovies != nil {
		return *m.CopyMovies
	}
	return Default_SettingsArchive_CopyMovies
}

func (m *SettingsArchive) GetCopyAssets() bool {
	if m != nil && m.CopyAssets != nil {
		return *m.CopyAssets
	}
	return Default_SettingsArchive_CopyAssets
}

func (m *SettingsArchive) GetPlaceholderAuthoring() bool {
	if m != nil && m.PlaceholderAuthoring != nil {
		return *m.PlaceholderAuthoring
	}
	return Default_SettingsArchive_PlaceholderAuthoring
}

func (m *SettingsArchive) GetLinksEnabled() bool {
	if m != nil && m.LinksEnabled != nil {
		return *m.LinksEnabled
	}
	return Default_SettingsArchive_LinksEnabled
}

func (m *SettingsArchive) GetHyphenation() bool {
	if m != nil && m.Hyphenation != nil {
		return *m.Hyphenation
	}
	return Default_SettingsArchive_Hyphenation
}

func (m *SettingsArchive) GetUseLigatures() bool {
	if m != nil && m.UseLigatures != nil {
		return *m.UseLigatures
	}
	return Default_SettingsArchive_UseLigatures
}

func (m *SettingsArchive) GetTocLinksEnabled() bool {
	if m != nil && m.TocLinksEnabled != nil {
		return *m.TocLinksEnabled
	}
	return Default_SettingsArchive_TocLinksEnabled
}

func (m *SettingsArchive) GetShowCtMarkup() bool {
	if m != nil && m.ShowCtMarkup != nil {
		return *m.ShowCtMarkup
	}
	return Default_SettingsArchive_ShowCtMarkup
}

func (m *SettingsArchive) GetShowCtDeletions() bool {
	if m != nil && m.ShowCtDeletions != nil {
		return *m.ShowCtDeletions
	}
	return Default_SettingsArchive_ShowCtDeletions
}

func (m *SettingsArchive) GetCtBubblesVisibility() int32 {
	if m != nil && m.CtBubblesVisibility != nil {
		return *m.CtBubblesVisibility
	}
	return 0
}

func (m *SettingsArchive) GetChangeBarsVisible() bool {
	if m != nil && m.ChangeBarsVisible != nil {
		return *m.ChangeBarsVisible
	}
	return Default_SettingsArchive_ChangeBarsVisible
}

func (m *SettingsArchive) GetFormatChangesVisible() bool {
	if m != nil && m.FormatChangesVisible != nil {
		return *m.FormatChangesVisible
	}
	return Default_SettingsArchive_FormatChangesVisible
}

func (m *SettingsArchive) GetAnnotationsVisible() bool {
	if m != nil && m.AnnotationsVisible != nil {
		return *m.AnnotationsVisible
	}
	return Default_SettingsArchive_AnnotationsVisible
}

func (m *SettingsArchive) GetDocumentIsRtl() bool {
	if m != nil && m.DocumentIsRtl != nil {
		return *m.DocumentIsRtl
	}
	return Default_SettingsArchive_DocumentIsRtl
}

func (m *SettingsArchive) GetDecimalTab() string {
	if m != nil && m.DecimalTab != nil {
		return *m.DecimalTab
	}
	return ""
}

func (m *SettingsArchive) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *SettingsArchive) GetHyphenationLanguage() string {
	if m != nil && m.HyphenationLanguage != nil {
		return *m.HyphenationLanguage
	}
	return ""
}

func (m *SettingsArchive) GetCreationLocale() string {
	if m != nil && m.CreationLocale != nil {
		return *m.CreationLocale
	}
	return ""
}

func (m *SettingsArchive) GetLastLocale() string {
	if m != nil && m.LastLocale != nil {
		return *m.LastLocale
	}
	return ""
}

func (m *SettingsArchive) GetOrigTemplate() string {
	if m != nil && m.OrigTemplate != nil {
		return *m.OrigTemplate
	}
	return ""
}

func (m *SettingsArchive) GetCreationDate() string {
	if m != nil && m.CreationDate != nil {
		return *m.CreationDate
	}
	return ""
}

func (m *SettingsArchive) GetBibliographyFormat() string {
	if m != nil && m.BibliographyFormat != nil {
		return *m.BibliographyFormat
	}
	return ""
}

func (m *SettingsArchive) GetFootnoteKind() SettingsArchive_FootnoteKind {
	if m != nil && m.FootnoteKind != nil {
		return *m.FootnoteKind
	}
	return SettingsArchive_kFootnoteKindFootnotes
}

func (m *SettingsArchive) GetFootnoteFormat() SettingsArchive_FootnoteFormat {
	if m != nil && m.FootnoteFormat != nil {
		return *m.FootnoteFormat
	}
	return SettingsArchive_kFootnoteFormatNumeric
}

func (m *SettingsArchive) GetFootnoteNumbering() SettingsArchive_FootnoteNumbering {
	if m != nil && m.FootnoteNumbering != nil {
		return *m.FootnoteNumbering
	}
	return SettingsArchive_kFootnoteNumberingContinuous
}

func (m *SettingsArchive) GetFootnoteGap() int32 {
	if m != nil && m.FootnoteGap != nil {
		return *m.FootnoteGap
	}
	return 0
}

func (m *SettingsArchive) GetSectionAuthoring() bool {
	if m != nil && m.SectionAuthoring != nil {
		return *m.SectionAuthoring
	}
	return Default_SettingsArchive_SectionAuthoring
}

type PlaceholderArchive struct {
	Super            *TSWP.ShapeInfoArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *PlaceholderArchive) Reset()         { *m = PlaceholderArchive{} }
func (m *PlaceholderArchive) String() string { return proto.CompactTextString(m) }
func (*PlaceholderArchive) ProtoMessage()    {}

func (m *PlaceholderArchive) GetSuper() *TSWP.ShapeInfoArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type FloatingDrawablesArchive struct {
	PageGroups       []*FloatingDrawablesArchive_PageGroup `protobuf:"bytes,1,rep,name=page_groups" json:"page_groups,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *FloatingDrawablesArchive) Reset()         { *m = FloatingDrawablesArchive{} }
func (m *FloatingDrawablesArchive) String() string { return proto.CompactTextString(m) }
func (*FloatingDrawablesArchive) ProtoMessage()    {}

func (m *FloatingDrawablesArchive) GetPageGroups() []*FloatingDrawablesArchive_PageGroup {
	if m != nil {
		return m.PageGroups
	}
	return nil
}

type FloatingDrawablesArchive_DrawableEntry struct {
	Drawable         *TSP.Reference `protobuf:"bytes,1,opt,name=drawable" json:"drawable,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *FloatingDrawablesArchive_DrawableEntry) Reset() {
	*m = FloatingDrawablesArchive_DrawableEntry{}
}
func (m *FloatingDrawablesArchive_DrawableEntry) String() string { return proto.CompactTextString(m) }
func (*FloatingDrawablesArchive_DrawableEntry) ProtoMessage()    {}

func (m *FloatingDrawablesArchive_DrawableEntry) GetDrawable() *TSP.Reference {
	if m != nil {
		return m.Drawable
	}
	return nil
}

type FloatingDrawablesArchive_PageGroup struct {
	PageIndex           *uint32                                   `protobuf:"varint,1,req,name=page_index" json:"page_index,omitempty"`
	BackgroundDrawables []*FloatingDrawablesArchive_DrawableEntry `protobuf:"bytes,2,rep,name=background_drawables" json:"background_drawables,omitempty"`
	ForegroundDrawables []*FloatingDrawablesArchive_DrawableEntry `protobuf:"bytes,3,rep,name=foreground_drawables" json:"foreground_drawables,omitempty"`
	Drawables           []*FloatingDrawablesArchive_DrawableEntry `protobuf:"bytes,4,rep,name=drawables" json:"drawables,omitempty"`
	XXX_unrecognized    []byte                                    `json:"-"`
}

func (m *FloatingDrawablesArchive_PageGroup) Reset()         { *m = FloatingDrawablesArchive_PageGroup{} }
func (m *FloatingDrawablesArchive_PageGroup) String() string { return proto.CompactTextString(m) }
func (*FloatingDrawablesArchive_PageGroup) ProtoMessage()    {}

func (m *FloatingDrawablesArchive_PageGroup) GetPageIndex() uint32 {
	if m != nil && m.PageIndex != nil {
		return *m.PageIndex
	}
	return 0
}

func (m *FloatingDrawablesArchive_PageGroup) GetBackgroundDrawables() []*FloatingDrawablesArchive_DrawableEntry {
	if m != nil {
		return m.BackgroundDrawables
	}
	return nil
}

func (m *FloatingDrawablesArchive_PageGroup) GetForegroundDrawables() []*FloatingDrawablesArchive_DrawableEntry {
	if m != nil {
		return m.ForegroundDrawables
	}
	return nil
}

func (m *FloatingDrawablesArchive_PageGroup) GetDrawables() []*FloatingDrawablesArchive_DrawableEntry {
	if m != nil {
		return m.Drawables
	}
	return nil
}

type DrawablesZOrderArchive struct {
	Drawables        []*TSP.Reference `protobuf:"bytes,1,rep,name=drawables" json:"drawables,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *DrawablesZOrderArchive) Reset()         { *m = DrawablesZOrderArchive{} }
func (m *DrawablesZOrderArchive) String() string { return proto.CompactTextString(m) }
func (*DrawablesZOrderArchive) ProtoMessage()    {}

func (m *DrawablesZOrderArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

type PageMasterArchive struct {
	Headers          []*TSP.Reference `protobuf:"bytes,1,rep,name=headers" json:"headers,omitempty"`
	Footers          []*TSP.Reference `protobuf:"bytes,2,rep,name=footers" json:"footers,omitempty"`
	MasterDrawables  []*TSP.Reference `protobuf:"bytes,3,rep,name=master_drawables" json:"master_drawables,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *PageMasterArchive) Reset()         { *m = PageMasterArchive{} }
func (m *PageMasterArchive) String() string { return proto.CompactTextString(m) }
func (*PageMasterArchive) ProtoMessage()    {}

func (m *PageMasterArchive) GetHeaders() []*TSP.Reference {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *PageMasterArchive) GetFooters() []*TSP.Reference {
	if m != nil {
		return m.Footers
	}
	return nil
}

func (m *PageMasterArchive) GetMasterDrawables() []*TSP.Reference {
	if m != nil {
		return m.MasterDrawables
	}
	return nil
}

type SectionArchive struct {
	OBSOLETEShowsHeader                  *bool            `protobuf:"varint,1,opt,name=OBSOLETE_shows_header" json:"OBSOLETE_shows_header,omitempty"`
	OBSOLETEShowsFooter                  *bool            `protobuf:"varint,2,opt,name=OBSOLETE_shows_footer" json:"OBSOLETE_shows_footer,omitempty"`
	OBSOLETEHeaders                      []*TSP.Reference `protobuf:"bytes,3,rep,name=OBSOLETE_headers" json:"OBSOLETE_headers,omitempty"`
	OBSOLETEFooters                      []*TSP.Reference `protobuf:"bytes,4,rep,name=OBSOLETE_footers" json:"OBSOLETE_footers,omitempty"`
	OBSOLETELeftMargin                   *float32         `protobuf:"fixed32,5,opt,name=OBSOLETE_left_margin" json:"OBSOLETE_left_margin,omitempty"`
	OBSOLETERightMargin                  *float32         `protobuf:"fixed32,6,opt,name=OBSOLETE_right_margin" json:"OBSOLETE_right_margin,omitempty"`
	OBSOLETETopMargin                    *float32         `protobuf:"fixed32,7,opt,name=OBSOLETE_top_margin" json:"OBSOLETE_top_margin,omitempty"`
	OBSOLETEBottomMargin                 *float32         `protobuf:"fixed32,8,opt,name=OBSOLETE_bottom_margin" json:"OBSOLETE_bottom_margin,omitempty"`
	OBSOLETEHeaderPadding                *float32         `protobuf:"fixed32,9,opt,name=OBSOLETE_header_padding" json:"OBSOLETE_header_padding,omitempty"`
	OBSOLETEFooterPadding                *float32         `protobuf:"fixed32,10,opt,name=OBSOLETE_footer_padding" json:"OBSOLETE_footer_padding,omitempty"`
	OBSOLETEPaperWidth                   *float32         `protobuf:"fixed32,11,opt,name=OBSOLETE_paper_width" json:"OBSOLETE_paper_width,omitempty"`
	OBSOLETEPaperHeight                  *float32         `protobuf:"fixed32,12,opt,name=OBSOLETE_paper_height" json:"OBSOLETE_paper_height,omitempty"`
	OBSOLETELandscapeMode                *bool            `protobuf:"varint,13,opt,name=OBSOLETE_landscape_mode" json:"OBSOLETE_landscape_mode,omitempty"`
	OBSOLETEMasterDrawables              []*TSP.Reference `protobuf:"bytes,14,rep,name=OBSOLETE_master_drawables" json:"OBSOLETE_master_drawables,omitempty"`
	OBSOLETEHeaderMargin                 *float32         `protobuf:"fixed32,15,opt,name=OBSOLETE_header_margin" json:"OBSOLETE_header_margin,omitempty"`
	OBSOLETEFooterMargin                 *float32         `protobuf:"fixed32,16,opt,name=OBSOLETE_footer_margin" json:"OBSOLETE_footer_margin,omitempty"`
	InheritPreviousHeaderFooter          *bool            `protobuf:"varint,17,opt,name=inherit_previous_header_footer" json:"inherit_previous_header_footer,omitempty"`
	PageMasterFirstPageDifferent         *bool            `protobuf:"varint,18,opt,name=page_master_first_page_different" json:"page_master_first_page_different,omitempty"`
	PageMasterEvenOddPagesDifferent      *bool            `protobuf:"varint,19,opt,name=page_master_even_odd_pages_different" json:"page_master_even_odd_pages_different,omitempty"`
	SectionStartKind                     *uint32          `protobuf:"varint,20,opt,name=section_start_kind" json:"section_start_kind,omitempty"`
	SectionPageNumberKind                *uint32          `protobuf:"varint,21,opt,name=section_page_number_kind" json:"section_page_number_kind,omitempty"`
	SectionPageNumberStart               *uint32          `protobuf:"varint,22,opt,name=section_page_number_start" json:"section_page_number_start,omitempty"`
	FirstPageMaster                      *TSP.Reference   `protobuf:"bytes,23,opt,name=first_page_master" json:"first_page_master,omitempty"`
	EvenPageMaster                       *TSP.Reference   `protobuf:"bytes,24,opt,name=even_page_master" json:"even_page_master,omitempty"`
	OddPageMaster                        *TSP.Reference   `protobuf:"bytes,25,opt,name=odd_page_master" json:"odd_page_master,omitempty"`
	Name                                 *string          `protobuf:"bytes,26,opt,name=name" json:"name,omitempty"`
	PageMasterFirstPageHidesHeaderFooter *bool            `protobuf:"varint,28,opt,name=page_master_first_page_hides_header_footer" json:"page_master_first_page_hides_header_footer,omitempty"`
	XXX_unrecognized                     []byte           `json:"-"`
}

func (m *SectionArchive) Reset()         { *m = SectionArchive{} }
func (m *SectionArchive) String() string { return proto.CompactTextString(m) }
func (*SectionArchive) ProtoMessage()    {}

func (m *SectionArchive) GetOBSOLETEShowsHeader() bool {
	if m != nil && m.OBSOLETEShowsHeader != nil {
		return *m.OBSOLETEShowsHeader
	}
	return false
}

func (m *SectionArchive) GetOBSOLETEShowsFooter() bool {
	if m != nil && m.OBSOLETEShowsFooter != nil {
		return *m.OBSOLETEShowsFooter
	}
	return false
}

func (m *SectionArchive) GetOBSOLETEHeaders() []*TSP.Reference {
	if m != nil {
		return m.OBSOLETEHeaders
	}
	return nil
}

func (m *SectionArchive) GetOBSOLETEFooters() []*TSP.Reference {
	if m != nil {
		return m.OBSOLETEFooters
	}
	return nil
}

func (m *SectionArchive) GetOBSOLETELeftMargin() float32 {
	if m != nil && m.OBSOLETELeftMargin != nil {
		return *m.OBSOLETELeftMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETERightMargin() float32 {
	if m != nil && m.OBSOLETERightMargin != nil {
		return *m.OBSOLETERightMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETETopMargin() float32 {
	if m != nil && m.OBSOLETETopMargin != nil {
		return *m.OBSOLETETopMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEBottomMargin() float32 {
	if m != nil && m.OBSOLETEBottomMargin != nil {
		return *m.OBSOLETEBottomMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEHeaderPadding() float32 {
	if m != nil && m.OBSOLETEHeaderPadding != nil {
		return *m.OBSOLETEHeaderPadding
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEFooterPadding() float32 {
	if m != nil && m.OBSOLETEFooterPadding != nil {
		return *m.OBSOLETEFooterPadding
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEPaperWidth() float32 {
	if m != nil && m.OBSOLETEPaperWidth != nil {
		return *m.OBSOLETEPaperWidth
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEPaperHeight() float32 {
	if m != nil && m.OBSOLETEPaperHeight != nil {
		return *m.OBSOLETEPaperHeight
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETELandscapeMode() bool {
	if m != nil && m.OBSOLETELandscapeMode != nil {
		return *m.OBSOLETELandscapeMode
	}
	return false
}

func (m *SectionArchive) GetOBSOLETEMasterDrawables() []*TSP.Reference {
	if m != nil {
		return m.OBSOLETEMasterDrawables
	}
	return nil
}

func (m *SectionArchive) GetOBSOLETEHeaderMargin() float32 {
	if m != nil && m.OBSOLETEHeaderMargin != nil {
		return *m.OBSOLETEHeaderMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEFooterMargin() float32 {
	if m != nil && m.OBSOLETEFooterMargin != nil {
		return *m.OBSOLETEFooterMargin
	}
	return 0
}

func (m *SectionArchive) GetInheritPreviousHeaderFooter() bool {
	if m != nil && m.InheritPreviousHeaderFooter != nil {
		return *m.InheritPreviousHeaderFooter
	}
	return false
}

func (m *SectionArchive) GetPageMasterFirstPageDifferent() bool {
	if m != nil && m.PageMasterFirstPageDifferent != nil {
		return *m.PageMasterFirstPageDifferent
	}
	return false
}

func (m *SectionArchive) GetPageMasterEvenOddPagesDifferent() bool {
	if m != nil && m.PageMasterEvenOddPagesDifferent != nil {
		return *m.PageMasterEvenOddPagesDifferent
	}
	return false
}

func (m *SectionArchive) GetSectionStartKind() uint32 {
	if m != nil && m.SectionStartKind != nil {
		return *m.SectionStartKind
	}
	return 0
}

func (m *SectionArchive) GetSectionPageNumberKind() uint32 {
	if m != nil && m.SectionPageNumberKind != nil {
		return *m.SectionPageNumberKind
	}
	return 0
}

func (m *SectionArchive) GetSectionPageNumberStart() uint32 {
	if m != nil && m.SectionPageNumberStart != nil {
		return *m.SectionPageNumberStart
	}
	return 0
}

func (m *SectionArchive) GetFirstPageMaster() *TSP.Reference {
	if m != nil {
		return m.FirstPageMaster
	}
	return nil
}

func (m *SectionArchive) GetEvenPageMaster() *TSP.Reference {
	if m != nil {
		return m.EvenPageMaster
	}
	return nil
}

func (m *SectionArchive) GetOddPageMaster() *TSP.Reference {
	if m != nil {
		return m.OddPageMaster
	}
	return nil
}

func (m *SectionArchive) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SectionArchive) GetPageMasterFirstPageHidesHeaderFooter() bool {
	if m != nil && m.PageMasterFirstPageHidesHeaderFooter != nil {
		return *m.PageMasterFirstPageHidesHeaderFooter
	}
	return false
}

type AnchorPosArchive struct {
	Attachment       *TSP.Reference `protobuf:"bytes,1,opt,name=attachment" json:"attachment,omitempty"`
	Position         *TSP.Point     `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AnchorPosArchive) Reset()         { *m = AnchorPosArchive{} }
func (m *AnchorPosArchive) String() string { return proto.CompactTextString(m) }
func (*AnchorPosArchive) ProtoMessage()    {}

func (m *AnchorPosArchive) GetAttachment() *TSP.Reference {
	if m != nil {
		return m.Attachment
	}
	return nil
}

func (m *AnchorPosArchive) GetPosition() *TSP.Point {
	if m != nil {
		return m.Position
	}
	return nil
}

type TargetHintArchive struct {
	FrameOrigin                     *TSP.Point `protobuf:"bytes,1,opt,name=frame_origin" json:"frame_origin,omitempty"`
	FrameSize                       *TSP.Size  `protobuf:"bytes,2,opt,name=frame_size" json:"frame_size,omitempty"`
	Range                           *TSP.Range `protobuf:"bytes,3,opt,name=range" json:"range,omitempty"`
	NextWidowPullsDownFromCharIndex *int32     `protobuf:"varint,4,opt,name=next_widow_pulls_down_from_char_index" json:"next_widow_pulls_down_from_char_index,omitempty"`
	AnchoredRange                   *TSP.Range `protobuf:"bytes,5,opt,name=anchored_range" json:"anchored_range,omitempty"`
	ColumnCount                     *int32     `protobuf:"varint,6,opt,name=column_count" json:"column_count,omitempty"`
	XXX_unrecognized                []byte     `json:"-"`
}

func (m *TargetHintArchive) Reset()         { *m = TargetHintArchive{} }
func (m *TargetHintArchive) String() string { return proto.CompactTextString(m) }
func (*TargetHintArchive) ProtoMessage()    {}

func (m *TargetHintArchive) GetFrameOrigin() *TSP.Point {
	if m != nil {
		return m.FrameOrigin
	}
	return nil
}

func (m *TargetHintArchive) GetFrameSize() *TSP.Size {
	if m != nil {
		return m.FrameSize
	}
	return nil
}

func (m *TargetHintArchive) GetRange() *TSP.Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *TargetHintArchive) GetNextWidowPullsDownFromCharIndex() int32 {
	if m != nil && m.NextWidowPullsDownFromCharIndex != nil {
		return *m.NextWidowPullsDownFromCharIndex
	}
	return 0
}

func (m *TargetHintArchive) GetAnchoredRange() *TSP.Range {
	if m != nil {
		return m.AnchoredRange
	}
	return nil
}

func (m *TargetHintArchive) GetColumnCount() int32 {
	if m != nil && m.ColumnCount != nil {
		return *m.ColumnCount
	}
	return 0
}

type PageHintArchive struct {
	PageKind                *PageHintArchive_PageKind `protobuf:"varint,1,opt,name=page_kind,enum=TP.PageHintArchive_PageKind" json:"page_kind,omitempty"`
	TargetHints             []*TargetHintArchive      `protobuf:"bytes,2,rep,name=target_hints" json:"target_hints,omitempty"`
	FootnoteAutoNumberRange *TSP.Range                `protobuf:"bytes,3,opt,name=footnote_auto_number_range" json:"footnote_auto_number_range,omitempty"`
	FootnoteLayoutRange     *TSP.Range                `protobuf:"bytes,4,opt,name=footnote_layout_range" json:"footnote_layout_range,omitempty"`
	FirstChildHint          *TSP.Reference            `protobuf:"bytes,6,opt,name=first_child_hint" json:"first_child_hint,omitempty"`
	LastChildHint           *TSP.Reference            `protobuf:"bytes,7,opt,name=last_child_hint" json:"last_child_hint,omitempty"`
	AnchoredAttachmentsMap  []*AnchorPosArchive       `protobuf:"bytes,8,rep,name=anchored_attachments_map" json:"anchored_attachments_map,omitempty"`
	TopicNumbers            *TopicNumberHintsArchive  `protobuf:"bytes,9,opt,name=topic_numbers" json:"topic_numbers,omitempty"`
	VersionNumber           *uint32                   `protobuf:"varint,10,opt,name=version_number" json:"version_number,omitempty"`
	PlatformId              *uint32                   `protobuf:"varint,11,opt,name=platform_id" json:"platform_id,omitempty"`
	XXX_unrecognized        []byte                    `json:"-"`
}

func (m *PageHintArchive) Reset()         { *m = PageHintArchive{} }
func (m *PageHintArchive) String() string { return proto.CompactTextString(m) }
func (*PageHintArchive) ProtoMessage()    {}

func (m *PageHintArchive) GetPageKind() PageHintArchive_PageKind {
	if m != nil && m.PageKind != nil {
		return *m.PageKind
	}
	return PageHintArchive_kPageKindNone
}

func (m *PageHintArchive) GetTargetHints() []*TargetHintArchive {
	if m != nil {
		return m.TargetHints
	}
	return nil
}

func (m *PageHintArchive) GetFootnoteAutoNumberRange() *TSP.Range {
	if m != nil {
		return m.FootnoteAutoNumberRange
	}
	return nil
}

func (m *PageHintArchive) GetFootnoteLayoutRange() *TSP.Range {
	if m != nil {
		return m.FootnoteLayoutRange
	}
	return nil
}

func (m *PageHintArchive) GetFirstChildHint() *TSP.Reference {
	if m != nil {
		return m.FirstChildHint
	}
	return nil
}

func (m *PageHintArchive) GetLastChildHint() *TSP.Reference {
	if m != nil {
		return m.LastChildHint
	}
	return nil
}

func (m *PageHintArchive) GetAnchoredAttachmentsMap() []*AnchorPosArchive {
	if m != nil {
		return m.AnchoredAttachmentsMap
	}
	return nil
}

func (m *PageHintArchive) GetTopicNumbers() *TopicNumberHintsArchive {
	if m != nil {
		return m.TopicNumbers
	}
	return nil
}

func (m *PageHintArchive) GetVersionNumber() uint32 {
	if m != nil && m.VersionNumber != nil {
		return *m.VersionNumber
	}
	return 0
}

func (m *PageHintArchive) GetPlatformId() uint32 {
	if m != nil && m.PlatformId != nil {
		return *m.PlatformId
	}
	return 0
}

type SectionHintArchive struct {
	PageHints        []*PageHintArchive `protobuf:"bytes,1,rep,name=page_hints" json:"page_hints,omitempty"`
	StartPageIndex   *uint32            `protobuf:"varint,2,opt,name=start_page_index" json:"start_page_index,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *SectionHintArchive) Reset()         { *m = SectionHintArchive{} }
func (m *SectionHintArchive) String() string { return proto.CompactTextString(m) }
func (*SectionHintArchive) ProtoMessage()    {}

func (m *SectionHintArchive) GetPageHints() []*PageHintArchive {
	if m != nil {
		return m.PageHints
	}
	return nil
}

func (m *SectionHintArchive) GetStartPageIndex() uint32 {
	if m != nil && m.StartPageIndex != nil {
		return *m.StartPageIndex
	}
	return 0
}

type TextboxHintArchive struct {
	Range            *TSP.Range `protobuf:"bytes,1,req,name=range" json:"range,omitempty"`
	Size             *TSP.Size  `protobuf:"bytes,2,req,name=size" json:"size,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *TextboxHintArchive) Reset()         { *m = TextboxHintArchive{} }
func (m *TextboxHintArchive) String() string { return proto.CompactTextString(m) }
func (*TextboxHintArchive) ProtoMessage()    {}

func (m *TextboxHintArchive) GetRange() *TSP.Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *TextboxHintArchive) GetSize() *TSP.Size {
	if m != nil {
		return m.Size
	}
	return nil
}

type TopicNumberEntryArchive struct {
	ListStyle        *TSP.Reference `protobuf:"bytes,1,req,name=list_style" json:"list_style,omitempty"`
	TopicNumber      []uint32       `protobuf:"varint,2,rep,name=topic_number" json:"topic_number,omitempty"`
	CharacterIndex   []uint32       `protobuf:"varint,3,rep,name=character_index" json:"character_index,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *TopicNumberEntryArchive) Reset()         { *m = TopicNumberEntryArchive{} }
func (m *TopicNumberEntryArchive) String() string { return proto.CompactTextString(m) }
func (*TopicNumberEntryArchive) ProtoMessage()    {}

func (m *TopicNumberEntryArchive) GetListStyle() *TSP.Reference {
	if m != nil {
		return m.ListStyle
	}
	return nil
}

func (m *TopicNumberEntryArchive) GetTopicNumber() []uint32 {
	if m != nil {
		return m.TopicNumber
	}
	return nil
}

func (m *TopicNumberEntryArchive) GetCharacterIndex() []uint32 {
	if m != nil {
		return m.CharacterIndex
	}
	return nil
}

type TopicNumberHintsArchive struct {
	CharIndex             *uint32                    `protobuf:"varint,1,opt,name=charIndex" json:"charIndex,omitempty"`
	TopicNumbersMap       []*TopicNumberEntryArchive `protobuf:"bytes,2,rep,name=topic_numbers_map" json:"topic_numbers_map,omitempty"`
	ValidThroughCharIndex *uint32                    `protobuf:"varint,3,opt,name=valid_through_char_index" json:"valid_through_char_index,omitempty"`
	XXX_unrecognized      []byte                     `json:"-"`
}

func (m *TopicNumberHintsArchive) Reset()         { *m = TopicNumberHintsArchive{} }
func (m *TopicNumberHintsArchive) String() string { return proto.CompactTextString(m) }
func (*TopicNumberHintsArchive) ProtoMessage()    {}

func (m *TopicNumberHintsArchive) GetCharIndex() uint32 {
	if m != nil && m.CharIndex != nil {
		return *m.CharIndex
	}
	return 0
}

func (m *TopicNumberHintsArchive) GetTopicNumbersMap() []*TopicNumberEntryArchive {
	if m != nil {
		return m.TopicNumbersMap
	}
	return nil
}

func (m *TopicNumberHintsArchive) GetValidThroughCharIndex() uint32 {
	if m != nil && m.ValidThroughCharIndex != nil {
		return *m.ValidThroughCharIndex
	}
	return 0
}

type LayoutStateArchive struct {
	SectionIndex      *uint32               `protobuf:"varint,1,opt,name=section_index" json:"section_index,omitempty"`
	SectionPageIndex  *uint32               `protobuf:"varint,2,opt,name=section_page_index" json:"section_page_index,omitempty"`
	DocumentPageIndex *uint32               `protobuf:"varint,3,opt,name=document_page_index" json:"document_page_index,omitempty"`
	LastPageCount     *uint32               `protobuf:"varint,4,opt,name=last_page_count" json:"last_page_count,omitempty"`
	SectionHints      []*SectionHintArchive `protobuf:"bytes,5,rep,name=section_hints" json:"section_hints,omitempty"`
	XXX_unrecognized  []byte                `json:"-"`
}

func (m *LayoutStateArchive) Reset()         { *m = LayoutStateArchive{} }
func (m *LayoutStateArchive) String() string { return proto.CompactTextString(m) }
func (*LayoutStateArchive) ProtoMessage()    {}

func (m *LayoutStateArchive) GetSectionIndex() uint32 {
	if m != nil && m.SectionIndex != nil {
		return *m.SectionIndex
	}
	return 0
}

func (m *LayoutStateArchive) GetSectionPageIndex() uint32 {
	if m != nil && m.SectionPageIndex != nil {
		return *m.SectionPageIndex
	}
	return 0
}

func (m *LayoutStateArchive) GetDocumentPageIndex() uint32 {
	if m != nil && m.DocumentPageIndex != nil {
		return *m.DocumentPageIndex
	}
	return 0
}

func (m *LayoutStateArchive) GetLastPageCount() uint32 {
	if m != nil && m.LastPageCount != nil {
		return *m.LastPageCount
	}
	return 0
}

func (m *LayoutStateArchive) GetSectionHints() []*SectionHintArchive {
	if m != nil {
		return m.SectionHints
	}
	return nil
}

type CanvasSelectionArchive struct {
	Type                   *TSWP.SelectionType          `protobuf:"varint,1,req,name=type,enum=TSWP.SelectionType" json:"type,omitempty"`
	Range                  *TSP.Range                   `protobuf:"bytes,2,req,name=range" json:"range,omitempty"`
	StyleInsertionBehavior *TSWP.StyleInsertionBehavior `protobuf:"varint,3,req,name=style_insertion_behavior,enum=TSWP.StyleInsertionBehavior" json:"style_insertion_behavior,omitempty"`
	CaretAffinity          *TSWP.CaretAffinity          `protobuf:"varint,4,req,name=caret_affinity,enum=TSWP.CaretAffinity" json:"caret_affinity,omitempty"`
	Infos                  []*TSP.Reference             `protobuf:"bytes,5,rep,name=infos" json:"infos,omitempty"`
	ExcludedInfos          []*TSP.Reference             `protobuf:"bytes,6,rep,name=excluded_infos" json:"excluded_infos,omitempty"`
	AdditionalInfos        []*TSP.Reference             `protobuf:"bytes,7,rep,name=additional_infos" json:"additional_infos,omitempty"`
	Container              *TSP.Reference               `protobuf:"bytes,8,opt,name=container" json:"container,omitempty"`
	XXX_unrecognized       []byte                       `json:"-"`
}

func (m *CanvasSelectionArchive) Reset()         { *m = CanvasSelectionArchive{} }
func (m *CanvasSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*CanvasSelectionArchive) ProtoMessage()    {}

func (m *CanvasSelectionArchive) GetType() TSWP.SelectionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return TSWP.SelectionType_SelectionType_Normal
}

func (m *CanvasSelectionArchive) GetRange() *TSP.Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *CanvasSelectionArchive) GetStyleInsertionBehavior() TSWP.StyleInsertionBehavior {
	if m != nil && m.StyleInsertionBehavior != nil {
		return *m.StyleInsertionBehavior
	}
	return TSWP.StyleInsertionBehavior_StyleInsertionBehavior_NoGrow
}

func (m *CanvasSelectionArchive) GetCaretAffinity() TSWP.CaretAffinity {
	if m != nil && m.CaretAffinity != nil {
		return *m.CaretAffinity
	}
	return TSWP.CaretAffinity_CaretAffinity_Start
}

func (m *CanvasSelectionArchive) GetInfos() []*TSP.Reference {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *CanvasSelectionArchive) GetExcludedInfos() []*TSP.Reference {
	if m != nil {
		return m.ExcludedInfos
	}
	return nil
}

func (m *CanvasSelectionArchive) GetAdditionalInfos() []*TSP.Reference {
	if m != nil {
		return m.AdditionalInfos
	}
	return nil
}

func (m *CanvasSelectionArchive) GetContainer() *TSP.Reference {
	if m != nil {
		return m.Container
	}
	return nil
}

type ViewStateArchive struct {
	OBSOLETEViewScale                        *float32             `protobuf:"fixed32,1,opt,name=OBSOLETE_view_scale" json:"OBSOLETE_view_scale,omitempty"`
	VisibleRectOrigin                        *TSP.Point           `protobuf:"bytes,2,opt,name=visible_rect_origin" json:"visible_rect_origin,omitempty"`
	OBSOLETELandscape                        *bool                `protobuf:"varint,3,opt,name=OBSOLETE_landscape" json:"OBSOLETE_landscape,omitempty"`
	Selection                                *TSP.Reference       `protobuf:"bytes,4,opt,name=selection" json:"selection,omitempty"`
	SelectionModel                           *TSP.Reference       `protobuf:"bytes,5,opt,name=selection_model" json:"selection_model,omitempty"`
	MasterDrawablesSelectable                *bool                `protobuf:"varint,6,opt,name=master_drawables_selectable" json:"master_drawables_selectable,omitempty"`
	VisibleRectSize                          *TSP.Size            `protobuf:"bytes,7,opt,name=visible_rect_size" json:"visible_rect_size,omitempty"`
	ChartUiState                             []*TSCH.ChartUIState `protobuf:"bytes,8,rep,name=chart_ui_state" json:"chart_ui_state,omitempty"`
	RulerVisible                             *bool                `protobuf:"varint,9,opt,name=ruler_visible,def=1" json:"ruler_visible,omitempty"`
	LayoutBordersVisible                     *bool                `protobuf:"varint,10,opt,name=layout_borders_visible,def=0" json:"layout_borders_visible,omitempty"`
	WordCountHudVisible                      *bool                `protobuf:"varint,11,opt,name=word_count_hud_visible,def=0" json:"word_count_hud_visible,omitempty"`
	ShowsComments                            *bool                `protobuf:"varint,12,opt,name=shows_comments,def=1" json:"shows_comments,omitempty"`
	ShowsPageNavigator                       *bool                `protobuf:"varint,13,opt,name=shows_page_navigator,def=0" json:"shows_page_navigator,omitempty"`
	ViewScaleMode                            *ViewScaleMode       `protobuf:"varint,14,opt,name=view_scale_mode,enum=TP.ViewScaleMode,def=0" json:"view_scale_mode,omitempty"`
	ViewScale                                *float32             `protobuf:"fixed32,15,opt,name=view_scale,def=1.25" json:"view_scale,omitempty"`
	WindowFrameOrigin                        *TSP.Point           `protobuf:"bytes,16,opt,name=window_frame_origin" json:"window_frame_origin,omitempty"`
	WindowFrameSize                          *TSP.Size            `protobuf:"bytes,17,opt,name=window_frame_size" json:"window_frame_size,omitempty"`
	SelectedInspectorSwitchSegmentIdentifier *string              `protobuf:"bytes,18,opt,name=selected_inspector_switch_segment_identifier" json:"selected_inspector_switch_segment_identifier,omitempty"`
	InspectorHidden                          *bool                `protobuf:"varint,19,opt,name=inspector_hidden" json:"inspector_hidden,omitempty"`
	XXX_unrecognized                         []byte               `json:"-"`
}

func (m *ViewStateArchive) Reset()         { *m = ViewStateArchive{} }
func (m *ViewStateArchive) String() string { return proto.CompactTextString(m) }
func (*ViewStateArchive) ProtoMessage()    {}

const Default_ViewStateArchive_RulerVisible bool = true
const Default_ViewStateArchive_LayoutBordersVisible bool = false
const Default_ViewStateArchive_WordCountHudVisible bool = false
const Default_ViewStateArchive_ShowsComments bool = true
const Default_ViewStateArchive_ShowsPageNavigator bool = false
const Default_ViewStateArchive_ViewScaleMode ViewScaleMode = ViewScaleMode_ViewScaleMode_UserDefined
const Default_ViewStateArchive_ViewScale float32 = 1.25

func (m *ViewStateArchive) GetOBSOLETEViewScale() float32 {
	if m != nil && m.OBSOLETEViewScale != nil {
		return *m.OBSOLETEViewScale
	}
	return 0
}

func (m *ViewStateArchive) GetVisibleRectOrigin() *TSP.Point {
	if m != nil {
		return m.VisibleRectOrigin
	}
	return nil
}

func (m *ViewStateArchive) GetOBSOLETELandscape() bool {
	if m != nil && m.OBSOLETELandscape != nil {
		return *m.OBSOLETELandscape
	}
	return false
}

func (m *ViewStateArchive) GetSelection() *TSP.Reference {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ViewStateArchive) GetSelectionModel() *TSP.Reference {
	if m != nil {
		return m.SelectionModel
	}
	return nil
}

func (m *ViewStateArchive) GetMasterDrawablesSelectable() bool {
	if m != nil && m.MasterDrawablesSelectable != nil {
		return *m.MasterDrawablesSelectable
	}
	return false
}

func (m *ViewStateArchive) GetVisibleRectSize() *TSP.Size {
	if m != nil {
		return m.VisibleRectSize
	}
	return nil
}

func (m *ViewStateArchive) GetChartUiState() []*TSCH.ChartUIState {
	if m != nil {
		return m.ChartUiState
	}
	return nil
}

func (m *ViewStateArchive) GetRulerVisible() bool {
	if m != nil && m.RulerVisible != nil {
		return *m.RulerVisible
	}
	return Default_ViewStateArchive_RulerVisible
}

func (m *ViewStateArchive) GetLayoutBordersVisible() bool {
	if m != nil && m.LayoutBordersVisible != nil {
		return *m.LayoutBordersVisible
	}
	return Default_ViewStateArchive_LayoutBordersVisible
}

func (m *ViewStateArchive) GetWordCountHudVisible() bool {
	if m != nil && m.WordCountHudVisible != nil {
		return *m.WordCountHudVisible
	}
	return Default_ViewStateArchive_WordCountHudVisible
}

func (m *ViewStateArchive) GetShowsComments() bool {
	if m != nil && m.ShowsComments != nil {
		return *m.ShowsComments
	}
	return Default_ViewStateArchive_ShowsComments
}

func (m *ViewStateArchive) GetShowsPageNavigator() bool {
	if m != nil && m.ShowsPageNavigator != nil {
		return *m.ShowsPageNavigator
	}
	return Default_ViewStateArchive_ShowsPageNavigator
}

func (m *ViewStateArchive) GetViewScaleMode() ViewScaleMode {
	if m != nil && m.ViewScaleMode != nil {
		return *m.ViewScaleMode
	}
	return Default_ViewStateArchive_ViewScaleMode
}

func (m *ViewStateArchive) GetViewScale() float32 {
	if m != nil && m.ViewScale != nil {
		return *m.ViewScale
	}
	return Default_ViewStateArchive_ViewScale
}

func (m *ViewStateArchive) GetWindowFrameOrigin() *TSP.Point {
	if m != nil {
		return m.WindowFrameOrigin
	}
	return nil
}

func (m *ViewStateArchive) GetWindowFrameSize() *TSP.Size {
	if m != nil {
		return m.WindowFrameSize
	}
	return nil
}

func (m *ViewStateArchive) GetSelectedInspectorSwitchSegmentIdentifier() string {
	if m != nil && m.SelectedInspectorSwitchSegmentIdentifier != nil {
		return *m.SelectedInspectorSwitchSegmentIdentifier
	}
	return ""
}

func (m *ViewStateArchive) GetInspectorHidden() bool {
	if m != nil && m.InspectorHidden != nil {
		return *m.InspectorHidden
	}
	return false
}

type UIStateArchive struct {
	LayoutState      *TSP.Reference `protobuf:"bytes,1,opt,name=layout_state" json:"layout_state,omitempty"`
	ViewState        *TSP.Reference `protobuf:"bytes,2,opt,name=view_state" json:"view_state,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *UIStateArchive) Reset()         { *m = UIStateArchive{} }
func (m *UIStateArchive) String() string { return proto.CompactTextString(m) }
func (*UIStateArchive) ProtoMessage()    {}

func (m *UIStateArchive) GetLayoutState() *TSP.Reference {
	if m != nil {
		return m.LayoutState
	}
	return nil
}

func (m *UIStateArchive) GetViewState() *TSP.Reference {
	if m != nil {
		return m.ViewState
	}
	return nil
}

func init() {
	proto.RegisterEnum("TP.ViewScaleMode", ViewScaleMode_name, ViewScaleMode_value)
	proto.RegisterEnum("TP.SettingsArchive_FootnoteKind", SettingsArchive_FootnoteKind_name, SettingsArchive_FootnoteKind_value)
	proto.RegisterEnum("TP.SettingsArchive_FootnoteFormat", SettingsArchive_FootnoteFormat_name, SettingsArchive_FootnoteFormat_value)
	proto.RegisterEnum("TP.SettingsArchive_FootnoteNumbering", SettingsArchive_FootnoteNumbering_name, SettingsArchive_FootnoteNumbering_value)
	proto.RegisterEnum("TP.PageHintArchive_PageKind", PageHintArchive_PageKind_name, PageHintArchive_PageKind_value)
}
