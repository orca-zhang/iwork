// Code generated by protoc-gen-go.
// source: TSDArchives.proto
// DO NOT EDIT!

/*
Package TSD is a generated protocol buffer package.

It is generated from these files:
	TSDArchives.proto

It has these top-level messages:
	EdgeInsetsArchive
	GeometryArchive
	PointPathSourceArchive
	ScalarPathSourceArchive
	BezierPathSourceArchive
	CalloutPathSourceArchive
	ConnectionLinePathSourceArchive
	EditableBezierPathSourceArchive
	PathSourceArchive
	AngleGradientArchive
	TransformGradientArchive
	GradientArchive
	ImageFillArchive
	FillArchive
	StrokePatternArchive
	StrokeArchive
	SmartStrokeArchive
	FrameArchive
	PatternedStrokeArchive
	LineEndArchive
	ShadowArchive
	DropShadowArchive
	ContactShadowArchive
	CurvedShadowArchive
	ReflectionArchive
	ImageAdjustmentsArchive
	ShapeStylePropertiesArchive
	ShapeStyleArchive
	MediaStylePropertiesArchive
	MediaStyleArchive
	ThemePresetsArchive
	ThemeReplaceFillPresetCommandArchive
	DrawableArchive
	ContainerArchive
	GroupArchive
	ShapeArchive
	ConnectionLineArchive
	ImageArchive
	MaskArchive
	MovieArchive
	ExteriorTextWrapArchive
	GuideArchive
	UserDefinedGuideArchive
	GuideStorageArchive
	CanvasSelectionArchive
	CommentStorageArchive
*/
package TSD

import proto "github.com/golang/protobuf/proto"
import math "math"
import "github.com/orcastor/iwork-converter/proto/TSP"
import "github.com/orcastor/iwork-converter/proto/TSK"
import "github.com/orcastor/iwork-converter/proto/TSS"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type LineJoin int32

const (
	LineJoin_MiterJoin LineJoin = 0
	LineJoin_RoundJoin LineJoin = 1
	LineJoin_BevelJoin LineJoin = 2
)

var LineJoin_name = map[int32]string{
	0: "MiterJoin",
	1: "RoundJoin",
	2: "BevelJoin",
}
var LineJoin_value = map[string]int32{
	"MiterJoin": 0,
	"RoundJoin": 1,
	"BevelJoin": 2,
}

func (x LineJoin) Enum() *LineJoin {
	p := new(LineJoin)
	*p = x
	return p
}
func (x LineJoin) String() string {
	return proto.EnumName(LineJoin_name, int32(x))
}
func (x *LineJoin) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LineJoin_value, data, "LineJoin")
	if err != nil {
		return err
	}
	*x = LineJoin(value)
	return nil
}

type PointPathSourceArchive_PointPathSourceType int32

const (
	PointPathSourceArchive_kTSDLeftSingleArrow  PointPathSourceArchive_PointPathSourceType = 0
	PointPathSourceArchive_kTSDRightSingleArrow PointPathSourceArchive_PointPathSourceType = 1
	PointPathSourceArchive_kTSDDoubleArrow      PointPathSourceArchive_PointPathSourceType = 10
	PointPathSourceArchive_kTSDStar             PointPathSourceArchive_PointPathSourceType = 100
	PointPathSourceArchive_kTSDPlus             PointPathSourceArchive_PointPathSourceType = 200
)

var PointPathSourceArchive_PointPathSourceType_name = map[int32]string{
	0:   "kTSDLeftSingleArrow",
	1:   "kTSDRightSingleArrow",
	10:  "kTSDDoubleArrow",
	100: "kTSDStar",
	200: "kTSDPlus",
}
var PointPathSourceArchive_PointPathSourceType_value = map[string]int32{
	"kTSDLeftSingleArrow":  0,
	"kTSDRightSingleArrow": 1,
	"kTSDDoubleArrow":      10,
	"kTSDStar":             100,
	"kTSDPlus":             200,
}

func (x PointPathSourceArchive_PointPathSourceType) Enum() *PointPathSourceArchive_PointPathSourceType {
	p := new(PointPathSourceArchive_PointPathSourceType)
	*p = x
	return p
}
func (x PointPathSourceArchive_PointPathSourceType) String() string {
	return proto.EnumName(PointPathSourceArchive_PointPathSourceType_name, int32(x))
}
func (x *PointPathSourceArchive_PointPathSourceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PointPathSourceArchive_PointPathSourceType_value, data, "PointPathSourceArchive_PointPathSourceType")
	if err != nil {
		return err
	}
	*x = PointPathSourceArchive_PointPathSourceType(value)
	return nil
}

type ScalarPathSourceArchive_ScalarPathSourceType int32

const (
	ScalarPathSourceArchive_kTSDRoundedRectangle ScalarPathSourceArchive_ScalarPathSourceType = 0
	ScalarPathSourceArchive_kTSDRegularPolygon   ScalarPathSourceArchive_ScalarPathSourceType = 1
	ScalarPathSourceArchive_kTSDChevron          ScalarPathSourceArchive_ScalarPathSourceType = 2
)

var ScalarPathSourceArchive_ScalarPathSourceType_name = map[int32]string{
	0: "kTSDRoundedRectangle",
	1: "kTSDRegularPolygon",
	2: "kTSDChevron",
}
var ScalarPathSourceArchive_ScalarPathSourceType_value = map[string]int32{
	"kTSDRoundedRectangle": 0,
	"kTSDRegularPolygon":   1,
	"kTSDChevron":          2,
}

func (x ScalarPathSourceArchive_ScalarPathSourceType) Enum() *ScalarPathSourceArchive_ScalarPathSourceType {
	p := new(ScalarPathSourceArchive_ScalarPathSourceType)
	*p = x
	return p
}
func (x ScalarPathSourceArchive_ScalarPathSourceType) String() string {
	return proto.EnumName(ScalarPathSourceArchive_ScalarPathSourceType_name, int32(x))
}
func (x *ScalarPathSourceArchive_ScalarPathSourceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ScalarPathSourceArchive_ScalarPathSourceType_value, data, "ScalarPathSourceArchive_ScalarPathSourceType")
	if err != nil {
		return err
	}
	*x = ScalarPathSourceArchive_ScalarPathSourceType(value)
	return nil
}

type ConnectionLinePathSourceArchive_ConnectionLinePathSourceType int32

const (
	ConnectionLinePathSourceArchive_kTSDConnectionLineTypeQuadratic  ConnectionLinePathSourceArchive_ConnectionLinePathSourceType = 0
	ConnectionLinePathSourceArchive_kTSDConnectionLineTypeOrthogonal ConnectionLinePathSourceArchive_ConnectionLinePathSourceType = 1
)

var ConnectionLinePathSourceArchive_ConnectionLinePathSourceType_name = map[int32]string{
	0: "kTSDConnectionLineTypeQuadratic",
	1: "kTSDConnectionLineTypeOrthogonal",
}
var ConnectionLinePathSourceArchive_ConnectionLinePathSourceType_value = map[string]int32{
	"kTSDConnectionLineTypeQuadratic":  0,
	"kTSDConnectionLineTypeOrthogonal": 1,
}

func (x ConnectionLinePathSourceArchive_ConnectionLinePathSourceType) Enum() *ConnectionLinePathSourceArchive_ConnectionLinePathSourceType {
	p := new(ConnectionLinePathSourceArchive_ConnectionLinePathSourceType)
	*p = x
	return p
}
func (x ConnectionLinePathSourceArchive_ConnectionLinePathSourceType) String() string {
	return proto.EnumName(ConnectionLinePathSourceArchive_ConnectionLinePathSourceType_name, int32(x))
}
func (x *ConnectionLinePathSourceArchive_ConnectionLinePathSourceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConnectionLinePathSourceArchive_ConnectionLinePathSourceType_value, data, "ConnectionLinePathSourceArchive_ConnectionLinePathSourceType")
	if err != nil {
		return err
	}
	*x = ConnectionLinePathSourceArchive_ConnectionLinePathSourceType(value)
	return nil
}

type EditableBezierPathSourceArchive_NodeType int32

const (
	EditableBezierPathSourceArchive_sharp  EditableBezierPathSourceArchive_NodeType = 1
	EditableBezierPathSourceArchive_bezier EditableBezierPathSourceArchive_NodeType = 2
	EditableBezierPathSourceArchive_smooth EditableBezierPathSourceArchive_NodeType = 3
)

var EditableBezierPathSourceArchive_NodeType_name = map[int32]string{
	1: "sharp",
	2: "bezier",
	3: "smooth",
}
var EditableBezierPathSourceArchive_NodeType_value = map[string]int32{
	"sharp":  1,
	"bezier": 2,
	"smooth": 3,
}

func (x EditableBezierPathSourceArchive_NodeType) Enum() *EditableBezierPathSourceArchive_NodeType {
	p := new(EditableBezierPathSourceArchive_NodeType)
	*p = x
	return p
}
func (x EditableBezierPathSourceArchive_NodeType) String() string {
	return proto.EnumName(EditableBezierPathSourceArchive_NodeType_name, int32(x))
}
func (x *EditableBezierPathSourceArchive_NodeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EditableBezierPathSourceArchive_NodeType_value, data, "EditableBezierPathSourceArchive_NodeType")
	if err != nil {
		return err
	}
	*x = EditableBezierPathSourceArchive_NodeType(value)
	return nil
}

type GradientArchive_GradientType int32

const (
	GradientArchive_Linear GradientArchive_GradientType = 0
	GradientArchive_Radial GradientArchive_GradientType = 1
)

var GradientArchive_GradientType_name = map[int32]string{
	0: "Linear",
	1: "Radial",
}
var GradientArchive_GradientType_value = map[string]int32{
	"Linear": 0,
	"Radial": 1,
}

func (x GradientArchive_GradientType) Enum() *GradientArchive_GradientType {
	p := new(GradientArchive_GradientType)
	*p = x
	return p
}
func (x GradientArchive_GradientType) String() string {
	return proto.EnumName(GradientArchive_GradientType_name, int32(x))
}
func (x *GradientArchive_GradientType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GradientArchive_GradientType_value, data, "GradientArchive_GradientType")
	if err != nil {
		return err
	}
	*x = GradientArchive_GradientType(value)
	return nil
}

type ImageFillArchive_ImageFillTechnique int32

const (
	ImageFillArchive_NaturalSize ImageFillArchive_ImageFillTechnique = 0
	ImageFillArchive_Stretch     ImageFillArchive_ImageFillTechnique = 1
	ImageFillArchive_Tile        ImageFillArchive_ImageFillTechnique = 2
	ImageFillArchive_ScaleToFill ImageFillArchive_ImageFillTechnique = 3
	ImageFillArchive_ScaleToFit  ImageFillArchive_ImageFillTechnique = 4
)

var ImageFillArchive_ImageFillTechnique_name = map[int32]string{
	0: "NaturalSize",
	1: "Stretch",
	2: "Tile",
	3: "ScaleToFill",
	4: "ScaleToFit",
}
var ImageFillArchive_ImageFillTechnique_value = map[string]int32{
	"NaturalSize": 0,
	"Stretch":     1,
	"Tile":        2,
	"ScaleToFill": 3,
	"ScaleToFit":  4,
}

func (x ImageFillArchive_ImageFillTechnique) Enum() *ImageFillArchive_ImageFillTechnique {
	p := new(ImageFillArchive_ImageFillTechnique)
	*p = x
	return p
}
func (x ImageFillArchive_ImageFillTechnique) String() string {
	return proto.EnumName(ImageFillArchive_ImageFillTechnique_name, int32(x))
}
func (x *ImageFillArchive_ImageFillTechnique) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ImageFillArchive_ImageFillTechnique_value, data, "ImageFillArchive_ImageFillTechnique")
	if err != nil {
		return err
	}
	*x = ImageFillArchive_ImageFillTechnique(value)
	return nil
}

type StrokePatternArchive_StrokePatternType int32

const (
	StrokePatternArchive_TSDPattern      StrokePatternArchive_StrokePatternType = 0
	StrokePatternArchive_TSDSolidPattern StrokePatternArchive_StrokePatternType = 1
	StrokePatternArchive_TSDEmptyPattern StrokePatternArchive_StrokePatternType = 2
)

var StrokePatternArchive_StrokePatternType_name = map[int32]string{
	0: "TSDPattern",
	1: "TSDSolidPattern",
	2: "TSDEmptyPattern",
}
var StrokePatternArchive_StrokePatternType_value = map[string]int32{
	"TSDPattern":      0,
	"TSDSolidPattern": 1,
	"TSDEmptyPattern": 2,
}

func (x StrokePatternArchive_StrokePatternType) Enum() *StrokePatternArchive_StrokePatternType {
	p := new(StrokePatternArchive_StrokePatternType)
	*p = x
	return p
}
func (x StrokePatternArchive_StrokePatternType) String() string {
	return proto.EnumName(StrokePatternArchive_StrokePatternType_name, int32(x))
}
func (x *StrokePatternArchive_StrokePatternType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StrokePatternArchive_StrokePatternType_value, data, "StrokePatternArchive_StrokePatternType")
	if err != nil {
		return err
	}
	*x = StrokePatternArchive_StrokePatternType(value)
	return nil
}

type StrokeArchive_LineCap int32

const (
	StrokeArchive_ButtCap   StrokeArchive_LineCap = 0
	StrokeArchive_RoundCap  StrokeArchive_LineCap = 1
	StrokeArchive_SquareCap StrokeArchive_LineCap = 2
)

var StrokeArchive_LineCap_name = map[int32]string{
	0: "ButtCap",
	1: "RoundCap",
	2: "SquareCap",
}
var StrokeArchive_LineCap_value = map[string]int32{
	"ButtCap":   0,
	"RoundCap":  1,
	"SquareCap": 2,
}

func (x StrokeArchive_LineCap) Enum() *StrokeArchive_LineCap {
	p := new(StrokeArchive_LineCap)
	*p = x
	return p
}
func (x StrokeArchive_LineCap) String() string {
	return proto.EnumName(StrokeArchive_LineCap_name, int32(x))
}
func (x *StrokeArchive_LineCap) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StrokeArchive_LineCap_value, data, "StrokeArchive_LineCap")
	if err != nil {
		return err
	}
	*x = StrokeArchive_LineCap(value)
	return nil
}

type ShadowArchive_ShadowType int32

const (
	ShadowArchive_TSDDropShadow    ShadowArchive_ShadowType = 0
	ShadowArchive_TSDContactShadow ShadowArchive_ShadowType = 1
	ShadowArchive_TSDCurvedShadow  ShadowArchive_ShadowType = 2
)

var ShadowArchive_ShadowType_name = map[int32]string{
	0: "TSDDropShadow",
	1: "TSDContactShadow",
	2: "TSDCurvedShadow",
}
var ShadowArchive_ShadowType_value = map[string]int32{
	"TSDDropShadow":    0,
	"TSDContactShadow": 1,
	"TSDCurvedShadow":  2,
}

func (x ShadowArchive_ShadowType) Enum() *ShadowArchive_ShadowType {
	p := new(ShadowArchive_ShadowType)
	*p = x
	return p
}
func (x ShadowArchive_ShadowType) String() string {
	return proto.EnumName(ShadowArchive_ShadowType_name, int32(x))
}
func (x *ShadowArchive_ShadowType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ShadowArchive_ShadowType_value, data, "ShadowArchive_ShadowType")
	if err != nil {
		return err
	}
	*x = ShadowArchive_ShadowType(value)
	return nil
}

type GuideArchive_GuideType int32

const (
	GuideArchive_Horizontal GuideArchive_GuideType = 0
	GuideArchive_Vertical   GuideArchive_GuideType = 1
)

var GuideArchive_GuideType_name = map[int32]string{
	0: "Horizontal",
	1: "Vertical",
}
var GuideArchive_GuideType_value = map[string]int32{
	"Horizontal": 0,
	"Vertical":   1,
}

func (x GuideArchive_GuideType) Enum() *GuideArchive_GuideType {
	p := new(GuideArchive_GuideType)
	*p = x
	return p
}
func (x GuideArchive_GuideType) String() string {
	return proto.EnumName(GuideArchive_GuideType_name, int32(x))
}
func (x *GuideArchive_GuideType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuideArchive_GuideType_value, data, "GuideArchive_GuideType")
	if err != nil {
		return err
	}
	*x = GuideArchive_GuideType(value)
	return nil
}

type UserDefinedGuideArchive_GuideType int32

const (
	UserDefinedGuideArchive_Horizontal UserDefinedGuideArchive_GuideType = 0
	UserDefinedGuideArchive_Vertical   UserDefinedGuideArchive_GuideType = 1
)

var UserDefinedGuideArchive_GuideType_name = map[int32]string{
	0: "Horizontal",
	1: "Vertical",
}
var UserDefinedGuideArchive_GuideType_value = map[string]int32{
	"Horizontal": 0,
	"Vertical":   1,
}

func (x UserDefinedGuideArchive_GuideType) Enum() *UserDefinedGuideArchive_GuideType {
	p := new(UserDefinedGuideArchive_GuideType)
	*p = x
	return p
}
func (x UserDefinedGuideArchive_GuideType) String() string {
	return proto.EnumName(UserDefinedGuideArchive_GuideType_name, int32(x))
}
func (x *UserDefinedGuideArchive_GuideType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserDefinedGuideArchive_GuideType_value, data, "UserDefinedGuideArchive_GuideType")
	if err != nil {
		return err
	}
	*x = UserDefinedGuideArchive_GuideType(value)
	return nil
}

type EdgeInsetsArchive struct {
	Top              *float32 `protobuf:"fixed32,1,req,name=top" json:"top,omitempty"`
	Left             *float32 `protobuf:"fixed32,2,req,name=left" json:"left,omitempty"`
	Bottom           *float32 `protobuf:"fixed32,3,req,name=bottom" json:"bottom,omitempty"`
	Right            *float32 `protobuf:"fixed32,4,req,name=right" json:"right,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *EdgeInsetsArchive) Reset()         { *m = EdgeInsetsArchive{} }
func (m *EdgeInsetsArchive) String() string { return proto.CompactTextString(m) }
func (*EdgeInsetsArchive) ProtoMessage()    {}

func (m *EdgeInsetsArchive) GetTop() float32 {
	if m != nil && m.Top != nil {
		return *m.Top
	}
	return 0
}

func (m *EdgeInsetsArchive) GetLeft() float32 {
	if m != nil && m.Left != nil {
		return *m.Left
	}
	return 0
}

func (m *EdgeInsetsArchive) GetBottom() float32 {
	if m != nil && m.Bottom != nil {
		return *m.Bottom
	}
	return 0
}

func (m *EdgeInsetsArchive) GetRight() float32 {
	if m != nil && m.Right != nil {
		return *m.Right
	}
	return 0
}

type GeometryArchive struct {
	Position         *TSP.Point `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Size             *TSP.Size  `protobuf:"bytes,2,opt,name=size" json:"size,omitempty"`
	Flags            *uint32    `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Angle            *float32   `protobuf:"fixed32,4,opt,name=angle" json:"angle,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *GeometryArchive) Reset()         { *m = GeometryArchive{} }
func (m *GeometryArchive) String() string { return proto.CompactTextString(m) }
func (*GeometryArchive) ProtoMessage()    {}

func (m *GeometryArchive) GetPosition() *TSP.Point {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *GeometryArchive) GetSize() *TSP.Size {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *GeometryArchive) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *GeometryArchive) GetAngle() float32 {
	if m != nil && m.Angle != nil {
		return *m.Angle
	}
	return 0
}

type PointPathSourceArchive struct {
	Type             *PointPathSourceArchive_PointPathSourceType `protobuf:"varint,1,opt,name=type,enum=TSD.PointPathSourceArchive_PointPathSourceType" json:"type,omitempty"`
	Point            *TSP.Point                                  `protobuf:"bytes,2,opt,name=point" json:"point,omitempty"`
	NaturalSize      *TSP.Size                                   `protobuf:"bytes,3,opt,name=naturalSize" json:"naturalSize,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *PointPathSourceArchive) Reset()         { *m = PointPathSourceArchive{} }
func (m *PointPathSourceArchive) String() string { return proto.CompactTextString(m) }
func (*PointPathSourceArchive) ProtoMessage()    {}

func (m *PointPathSourceArchive) GetType() PointPathSourceArchive_PointPathSourceType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PointPathSourceArchive_kTSDLeftSingleArrow
}

func (m *PointPathSourceArchive) GetPoint() *TSP.Point {
	if m != nil {
		return m.Point
	}
	return nil
}

func (m *PointPathSourceArchive) GetNaturalSize() *TSP.Size {
	if m != nil {
		return m.NaturalSize
	}
	return nil
}

type ScalarPathSourceArchive struct {
	Type             *ScalarPathSourceArchive_ScalarPathSourceType `protobuf:"varint,1,opt,name=type,enum=TSD.ScalarPathSourceArchive_ScalarPathSourceType" json:"type,omitempty"`
	Scalar           *float32                                      `protobuf:"fixed32,2,opt,name=scalar" json:"scalar,omitempty"`
	NaturalSize      *TSP.Size                                     `protobuf:"bytes,3,opt,name=naturalSize" json:"naturalSize,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *ScalarPathSourceArchive) Reset()         { *m = ScalarPathSourceArchive{} }
func (m *ScalarPathSourceArchive) String() string { return proto.CompactTextString(m) }
func (*ScalarPathSourceArchive) ProtoMessage()    {}

func (m *ScalarPathSourceArchive) GetType() ScalarPathSourceArchive_ScalarPathSourceType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ScalarPathSourceArchive_kTSDRoundedRectangle
}

func (m *ScalarPathSourceArchive) GetScalar() float32 {
	if m != nil && m.Scalar != nil {
		return *m.Scalar
	}
	return 0
}

func (m *ScalarPathSourceArchive) GetNaturalSize() *TSP.Size {
	if m != nil {
		return m.NaturalSize
	}
	return nil
}

type BezierPathSourceArchive struct {
	PathString       *string   `protobuf:"bytes,1,opt,name=path_string" json:"path_string,omitempty"`
	NaturalSize      *TSP.Size `protobuf:"bytes,2,opt,name=naturalSize" json:"naturalSize,omitempty"`
	Path             *TSP.Path `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *BezierPathSourceArchive) Reset()         { *m = BezierPathSourceArchive{} }
func (m *BezierPathSourceArchive) String() string { return proto.CompactTextString(m) }
func (*BezierPathSourceArchive) ProtoMessage()    {}

func (m *BezierPathSourceArchive) GetPathString() string {
	if m != nil && m.PathString != nil {
		return *m.PathString
	}
	return ""
}

func (m *BezierPathSourceArchive) GetNaturalSize() *TSP.Size {
	if m != nil {
		return m.NaturalSize
	}
	return nil
}

func (m *BezierPathSourceArchive) GetPath() *TSP.Path {
	if m != nil {
		return m.Path
	}
	return nil
}

type CalloutPathSourceArchive struct {
	NaturalSize      *TSP.Size  `protobuf:"bytes,1,opt,name=natural_size" json:"natural_size,omitempty"`
	TailPosition     *TSP.Point `protobuf:"bytes,2,opt,name=tail_position" json:"tail_position,omitempty"`
	TailSize         *float32   `protobuf:"fixed32,3,opt,name=tail_size" json:"tail_size,omitempty"`
	CornerRadius     *float32   `protobuf:"fixed32,4,opt,name=corner_radius" json:"corner_radius,omitempty"`
	CenterTail       *bool      `protobuf:"varint,5,opt,name=center_tail" json:"center_tail,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CalloutPathSourceArchive) Reset()         { *m = CalloutPathSourceArchive{} }
func (m *CalloutPathSourceArchive) String() string { return proto.CompactTextString(m) }
func (*CalloutPathSourceArchive) ProtoMessage()    {}

func (m *CalloutPathSourceArchive) GetNaturalSize() *TSP.Size {
	if m != nil {
		return m.NaturalSize
	}
	return nil
}

func (m *CalloutPathSourceArchive) GetTailPosition() *TSP.Point {
	if m != nil {
		return m.TailPosition
	}
	return nil
}

func (m *CalloutPathSourceArchive) GetTailSize() float32 {
	if m != nil && m.TailSize != nil {
		return *m.TailSize
	}
	return 0
}

func (m *CalloutPathSourceArchive) GetCornerRadius() float32 {
	if m != nil && m.CornerRadius != nil {
		return *m.CornerRadius
	}
	return 0
}

func (m *CalloutPathSourceArchive) GetCenterTail() bool {
	if m != nil && m.CenterTail != nil {
		return *m.CenterTail
	}
	return false
}

type ConnectionLinePathSourceArchive struct {
	Super            *BezierPathSourceArchive                                      `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Type             *ConnectionLinePathSourceArchive_ConnectionLinePathSourceType `protobuf:"varint,2,opt,name=type,enum=TSD.ConnectionLinePathSourceArchive_ConnectionLinePathSourceType" json:"type,omitempty"`
	OutsetFrom       *float32                                                      `protobuf:"fixed32,3,opt,name=outset_from" json:"outset_from,omitempty"`
	OutsetTo         *float32                                                      `protobuf:"fixed32,4,opt,name=outset_to" json:"outset_to,omitempty"`
	XXX_unrecognized []byte                                                        `json:"-"`
}

func (m *ConnectionLinePathSourceArchive) Reset()         { *m = ConnectionLinePathSourceArchive{} }
func (m *ConnectionLinePathSourceArchive) String() string { return proto.CompactTextString(m) }
func (*ConnectionLinePathSourceArchive) ProtoMessage()    {}

func (m *ConnectionLinePathSourceArchive) GetSuper() *BezierPathSourceArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ConnectionLinePathSourceArchive) GetType() ConnectionLinePathSourceArchive_ConnectionLinePathSourceType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ConnectionLinePathSourceArchive_kTSDConnectionLineTypeQuadratic
}

func (m *ConnectionLinePathSourceArchive) GetOutsetFrom() float32 {
	if m != nil && m.OutsetFrom != nil {
		return *m.OutsetFrom
	}
	return 0
}

func (m *ConnectionLinePathSourceArchive) GetOutsetTo() float32 {
	if m != nil && m.OutsetTo != nil {
		return *m.OutsetTo
	}
	return 0
}

type EditableBezierPathSourceArchive struct {
	Subpaths         []*EditableBezierPathSourceArchive_Subpath `protobuf:"bytes,1,rep,name=subpaths" json:"subpaths,omitempty"`
	NaturalSize      *TSP.Size                                  `protobuf:"bytes,2,opt,name=naturalSize" json:"naturalSize,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *EditableBezierPathSourceArchive) Reset()         { *m = EditableBezierPathSourceArchive{} }
func (m *EditableBezierPathSourceArchive) String() string { return proto.CompactTextString(m) }
func (*EditableBezierPathSourceArchive) ProtoMessage()    {}

func (m *EditableBezierPathSourceArchive) GetSubpaths() []*EditableBezierPathSourceArchive_Subpath {
	if m != nil {
		return m.Subpaths
	}
	return nil
}

func (m *EditableBezierPathSourceArchive) GetNaturalSize() *TSP.Size {
	if m != nil {
		return m.NaturalSize
	}
	return nil
}

type EditableBezierPathSourceArchive_Node struct {
	InControlPoint   *TSP.Point                                `protobuf:"bytes,1,req,name=inControlPoint" json:"inControlPoint,omitempty"`
	NodePoint        *TSP.Point                                `protobuf:"bytes,2,req,name=nodePoint" json:"nodePoint,omitempty"`
	OutControlPoint  *TSP.Point                                `protobuf:"bytes,3,req,name=outControlPoint" json:"outControlPoint,omitempty"`
	Type             *EditableBezierPathSourceArchive_NodeType `protobuf:"varint,4,req,name=type,enum=TSD.EditableBezierPathSourceArchive_NodeType" json:"type,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *EditableBezierPathSourceArchive_Node) Reset()         { *m = EditableBezierPathSourceArchive_Node{} }
func (m *EditableBezierPathSourceArchive_Node) String() string { return proto.CompactTextString(m) }
func (*EditableBezierPathSourceArchive_Node) ProtoMessage()    {}

func (m *EditableBezierPathSourceArchive_Node) GetInControlPoint() *TSP.Point {
	if m != nil {
		return m.InControlPoint
	}
	return nil
}

func (m *EditableBezierPathSourceArchive_Node) GetNodePoint() *TSP.Point {
	if m != nil {
		return m.NodePoint
	}
	return nil
}

func (m *EditableBezierPathSourceArchive_Node) GetOutControlPoint() *TSP.Point {
	if m != nil {
		return m.OutControlPoint
	}
	return nil
}

func (m *EditableBezierPathSourceArchive_Node) GetType() EditableBezierPathSourceArchive_NodeType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EditableBezierPathSourceArchive_sharp
}

type EditableBezierPathSourceArchive_Subpath struct {
	Nodes            []*EditableBezierPathSourceArchive_Node `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	Closed           *bool                                   `protobuf:"varint,2,req,name=closed" json:"closed,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *EditableBezierPathSourceArchive_Subpath) Reset() {
	*m = EditableBezierPathSourceArchive_Subpath{}
}
func (m *EditableBezierPathSourceArchive_Subpath) String() string { return proto.CompactTextString(m) }
func (*EditableBezierPathSourceArchive_Subpath) ProtoMessage()    {}

func (m *EditableBezierPathSourceArchive_Subpath) GetNodes() []*EditableBezierPathSourceArchive_Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *EditableBezierPathSourceArchive_Subpath) GetClosed() bool {
	if m != nil && m.Closed != nil {
		return *m.Closed
	}
	return false
}

type PathSourceArchive struct {
	HorizontalFlip           *bool                            `protobuf:"varint,1,opt,name=horizontalFlip" json:"horizontalFlip,omitempty"`
	VerticalFlip             *bool                            `protobuf:"varint,2,opt,name=verticalFlip" json:"verticalFlip,omitempty"`
	PointPathSource          *PointPathSourceArchive          `protobuf:"bytes,3,opt,name=point_path_source" json:"point_path_source,omitempty"`
	ScalarPathSource         *ScalarPathSourceArchive         `protobuf:"bytes,4,opt,name=scalar_path_source" json:"scalar_path_source,omitempty"`
	BezierPathSource         *BezierPathSourceArchive         `protobuf:"bytes,5,opt,name=bezier_path_source" json:"bezier_path_source,omitempty"`
	CalloutPathSource        *CalloutPathSourceArchive        `protobuf:"bytes,6,opt,name=callout_path_source" json:"callout_path_source,omitempty"`
	ConnectionLinePathSource *ConnectionLinePathSourceArchive `protobuf:"bytes,7,opt,name=connection_line_path_source" json:"connection_line_path_source,omitempty"`
	EditableBezierPathSource *EditableBezierPathSourceArchive `protobuf:"bytes,8,opt,name=editable_bezier_path_source" json:"editable_bezier_path_source,omitempty"`
	XXX_unrecognized         []byte                           `json:"-"`
}

func (m *PathSourceArchive) Reset()         { *m = PathSourceArchive{} }
func (m *PathSourceArchive) String() string { return proto.CompactTextString(m) }
func (*PathSourceArchive) ProtoMessage()    {}

func (m *PathSourceArchive) GetHorizontalFlip() bool {
	if m != nil && m.HorizontalFlip != nil {
		return *m.HorizontalFlip
	}
	return false
}

func (m *PathSourceArchive) GetVerticalFlip() bool {
	if m != nil && m.VerticalFlip != nil {
		return *m.VerticalFlip
	}
	return false
}

func (m *PathSourceArchive) GetPointPathSource() *PointPathSourceArchive {
	if m != nil {
		return m.PointPathSource
	}
	return nil
}

func (m *PathSourceArchive) GetScalarPathSource() *ScalarPathSourceArchive {
	if m != nil {
		return m.ScalarPathSource
	}
	return nil
}

func (m *PathSourceArchive) GetBezierPathSource() *BezierPathSourceArchive {
	if m != nil {
		return m.BezierPathSource
	}
	return nil
}

func (m *PathSourceArchive) GetCalloutPathSource() *CalloutPathSourceArchive {
	if m != nil {
		return m.CalloutPathSource
	}
	return nil
}

func (m *PathSourceArchive) GetConnectionLinePathSource() *ConnectionLinePathSourceArchive {
	if m != nil {
		return m.ConnectionLinePathSource
	}
	return nil
}

func (m *PathSourceArchive) GetEditableBezierPathSource() *EditableBezierPathSourceArchive {
	if m != nil {
		return m.EditableBezierPathSource
	}
	return nil
}

type AngleGradientArchive struct {
	Gradientangle    *float32 `protobuf:"fixed32,2,opt,name=gradientangle" json:"gradientangle,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AngleGradientArchive) Reset()         { *m = AngleGradientArchive{} }
func (m *AngleGradientArchive) String() string { return proto.CompactTextString(m) }
func (*AngleGradientArchive) ProtoMessage()    {}

func (m *AngleGradientArchive) GetGradientangle() float32 {
	if m != nil && m.Gradientangle != nil {
		return *m.Gradientangle
	}
	return 0
}

type TransformGradientArchive struct {
	Start            *TSP.Point `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End              *TSP.Point `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
	BaseNaturalSize  *TSP.Size  `protobuf:"bytes,3,opt,name=baseNaturalSize" json:"baseNaturalSize,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *TransformGradientArchive) Reset()         { *m = TransformGradientArchive{} }
func (m *TransformGradientArchive) String() string { return proto.CompactTextString(m) }
func (*TransformGradientArchive) ProtoMessage()    {}

func (m *TransformGradientArchive) GetStart() *TSP.Point {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *TransformGradientArchive) GetEnd() *TSP.Point {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *TransformGradientArchive) GetBaseNaturalSize() *TSP.Size {
	if m != nil {
		return m.BaseNaturalSize
	}
	return nil
}

type GradientArchive struct {
	Type              *GradientArchive_GradientType   `protobuf:"varint,1,opt,name=type,enum=TSD.GradientArchive_GradientType" json:"type,omitempty"`
	Stops             []*GradientArchive_GradientStop `protobuf:"bytes,2,rep,name=stops" json:"stops,omitempty"`
	Opacity           *float32                        `protobuf:"fixed32,3,opt,name=opacity" json:"opacity,omitempty"`
	AdvancedGradient  *bool                           `protobuf:"varint,4,opt,name=advancedGradient" json:"advancedGradient,omitempty"`
	Anglegradient     *AngleGradientArchive           `protobuf:"bytes,5,opt,name=anglegradient" json:"anglegradient,omitempty"`
	Transformgradient *TransformGradientArchive       `protobuf:"bytes,6,opt,name=transformgradient" json:"transformgradient,omitempty"`
	XXX_unrecognized  []byte                          `json:"-"`
}

func (m *GradientArchive) Reset()         { *m = GradientArchive{} }
func (m *GradientArchive) String() string { return proto.CompactTextString(m) }
func (*GradientArchive) ProtoMessage()    {}

func (m *GradientArchive) GetType() GradientArchive_GradientType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return GradientArchive_Linear
}

func (m *GradientArchive) GetStops() []*GradientArchive_GradientStop {
	if m != nil {
		return m.Stops
	}
	return nil
}

func (m *GradientArchive) GetOpacity() float32 {
	if m != nil && m.Opacity != nil {
		return *m.Opacity
	}
	return 0
}

func (m *GradientArchive) GetAdvancedGradient() bool {
	if m != nil && m.AdvancedGradient != nil {
		return *m.AdvancedGradient
	}
	return false
}

func (m *GradientArchive) GetAnglegradient() *AngleGradientArchive {
	if m != nil {
		return m.Anglegradient
	}
	return nil
}

func (m *GradientArchive) GetTransformgradient() *TransformGradientArchive {
	if m != nil {
		return m.Transformgradient
	}
	return nil
}

type GradientArchive_GradientStop struct {
	Color            *TSP.Color `protobuf:"bytes,1,opt,name=color" json:"color,omitempty"`
	Fraction         *float32   `protobuf:"fixed32,2,opt,name=fraction" json:"fraction,omitempty"`
	Inflection       *float32   `protobuf:"fixed32,3,opt,name=inflection" json:"inflection,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *GradientArchive_GradientStop) Reset()         { *m = GradientArchive_GradientStop{} }
func (m *GradientArchive_GradientStop) String() string { return proto.CompactTextString(m) }
func (*GradientArchive_GradientStop) ProtoMessage()    {}

func (m *GradientArchive_GradientStop) GetColor() *TSP.Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *GradientArchive_GradientStop) GetFraction() float32 {
	if m != nil && m.Fraction != nil {
		return *m.Fraction
	}
	return 0
}

func (m *GradientArchive_GradientStop) GetInflection() float32 {
	if m != nil && m.Inflection != nil {
		return *m.Inflection
	}
	return 0
}

type ImageFillArchive struct {
	Imagedata                            *TSP.DataReference                   `protobuf:"bytes,6,opt,name=imagedata" json:"imagedata,omitempty"`
	Technique                            *ImageFillArchive_ImageFillTechnique `protobuf:"varint,2,opt,name=technique,enum=TSD.ImageFillArchive_ImageFillTechnique,def=0" json:"technique,omitempty"`
	Tint                                 *TSP.Color                           `protobuf:"bytes,3,opt,name=tint" json:"tint,omitempty"`
	Fillsize                             *TSP.Size                            `protobuf:"bytes,4,opt,name=fillsize" json:"fillsize,omitempty"`
	Originalimagedata                    *TSP.DataReference                   `protobuf:"bytes,7,opt,name=originalimagedata" json:"originalimagedata,omitempty"`
	InterpretsUntaggedImageDataAsGeneric *bool                                `protobuf:"varint,8,opt,name=interpretsUntaggedImageDataAsGeneric" json:"interpretsUntaggedImageDataAsGeneric,omitempty"`
	DatabaseImagedata                    *TSP.Reference                       `protobuf:"bytes,1,opt,name=database_imagedata" json:"database_imagedata,omitempty"`
	DatabaseOriginalimagedata            *TSP.Reference                       `protobuf:"bytes,5,opt,name=database_originalimagedata" json:"database_originalimagedata,omitempty"`
	XXX_unrecognized                     []byte                               `json:"-"`
}

func (m *ImageFillArchive) Reset()         { *m = ImageFillArchive{} }
func (m *ImageFillArchive) String() string { return proto.CompactTextString(m) }
func (*ImageFillArchive) ProtoMessage()    {}

const Default_ImageFillArchive_Technique ImageFillArchive_ImageFillTechnique = ImageFillArchive_NaturalSize

func (m *ImageFillArchive) GetImagedata() *TSP.DataReference {
	if m != nil {
		return m.Imagedata
	}
	return nil
}

func (m *ImageFillArchive) GetTechnique() ImageFillArchive_ImageFillTechnique {
	if m != nil && m.Technique != nil {
		return *m.Technique
	}
	return Default_ImageFillArchive_Technique
}

func (m *ImageFillArchive) GetTint() *TSP.Color {
	if m != nil {
		return m.Tint
	}
	return nil
}

func (m *ImageFillArchive) GetFillsize() *TSP.Size {
	if m != nil {
		return m.Fillsize
	}
	return nil
}

func (m *ImageFillArchive) GetOriginalimagedata() *TSP.DataReference {
	if m != nil {
		return m.Originalimagedata
	}
	return nil
}

func (m *ImageFillArchive) GetInterpretsUntaggedImageDataAsGeneric() bool {
	if m != nil && m.InterpretsUntaggedImageDataAsGeneric != nil {
		return *m.InterpretsUntaggedImageDataAsGeneric
	}
	return false
}

func (m *ImageFillArchive) GetDatabaseImagedata() *TSP.Reference {
	if m != nil {
		return m.DatabaseImagedata
	}
	return nil
}

func (m *ImageFillArchive) GetDatabaseOriginalimagedata() *TSP.Reference {
	if m != nil {
		return m.DatabaseOriginalimagedata
	}
	return nil
}

type FillArchive struct {
	Color            *TSP.Color                `protobuf:"bytes,1,opt,name=color" json:"color,omitempty"`
	Gradient         *GradientArchive          `protobuf:"bytes,2,opt,name=gradient" json:"gradient,omitempty"`
	Image            *ImageFillArchive         `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *FillArchive) Reset()         { *m = FillArchive{} }
func (m *FillArchive) String() string { return proto.CompactTextString(m) }
func (*FillArchive) ProtoMessage()    {}

var extRange_FillArchive = []proto.ExtensionRange{
	{100, 536870911},
}

func (*FillArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_FillArchive
}
func (m *FillArchive) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *FillArchive) GetColor() *TSP.Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *FillArchive) GetGradient() *GradientArchive {
	if m != nil {
		return m.Gradient
	}
	return nil
}

func (m *FillArchive) GetImage() *ImageFillArchive {
	if m != nil {
		return m.Image
	}
	return nil
}

type StrokePatternArchive struct {
	Type             *StrokePatternArchive_StrokePatternType `protobuf:"varint,1,opt,name=type,enum=TSD.StrokePatternArchive_StrokePatternType" json:"type,omitempty"`
	Phase            *float32                                `protobuf:"fixed32,2,opt,name=phase" json:"phase,omitempty"`
	Count            *uint32                                 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Pattern          []float32                               `protobuf:"fixed32,4,rep,name=pattern" json:"pattern,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *StrokePatternArchive) Reset()         { *m = StrokePatternArchive{} }
func (m *StrokePatternArchive) String() string { return proto.CompactTextString(m) }
func (*StrokePatternArchive) ProtoMessage()    {}

func (m *StrokePatternArchive) GetType() StrokePatternArchive_StrokePatternType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return StrokePatternArchive_TSDPattern
}

func (m *StrokePatternArchive) GetPhase() float32 {
	if m != nil && m.Phase != nil {
		return *m.Phase
	}
	return 0
}

func (m *StrokePatternArchive) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *StrokePatternArchive) GetPattern() []float32 {
	if m != nil {
		return m.Pattern
	}
	return nil
}

type StrokeArchive struct {
	Color            *TSP.Color              `protobuf:"bytes,1,opt,name=color" json:"color,omitempty"`
	Width            *float32                `protobuf:"fixed32,2,opt,name=width" json:"width,omitempty"`
	Cap              *StrokeArchive_LineCap  `protobuf:"varint,3,opt,name=cap,enum=TSD.StrokeArchive_LineCap" json:"cap,omitempty"`
	Join             *LineJoin               `protobuf:"varint,4,opt,name=join,enum=TSD.LineJoin" json:"join,omitempty"`
	MiterLimit       *float32                `protobuf:"fixed32,5,opt,name=miterLimit" json:"miterLimit,omitempty"`
	Pattern          *StrokePatternArchive   `protobuf:"bytes,6,opt,name=pattern" json:"pattern,omitempty"`
	SmartStroke      *SmartStrokeArchive     `protobuf:"bytes,7,opt,name=smartStroke" json:"smartStroke,omitempty"`
	Frame            *FrameArchive           `protobuf:"bytes,8,opt,name=frame" json:"frame,omitempty"`
	PatternedStroke  *PatternedStrokeArchive `protobuf:"bytes,9,opt,name=patterned_stroke" json:"patterned_stroke,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *StrokeArchive) Reset()         { *m = StrokeArchive{} }
func (m *StrokeArchive) String() string { return proto.CompactTextString(m) }
func (*StrokeArchive) ProtoMessage()    {}

func (m *StrokeArchive) GetColor() *TSP.Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *StrokeArchive) GetWidth() float32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *StrokeArchive) GetCap() StrokeArchive_LineCap {
	if m != nil && m.Cap != nil {
		return *m.Cap
	}
	return StrokeArchive_ButtCap
}

func (m *StrokeArchive) GetJoin() LineJoin {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return LineJoin_MiterJoin
}

func (m *StrokeArchive) GetMiterLimit() float32 {
	if m != nil && m.MiterLimit != nil {
		return *m.MiterLimit
	}
	return 0
}

func (m *StrokeArchive) GetPattern() *StrokePatternArchive {
	if m != nil {
		return m.Pattern
	}
	return nil
}

func (m *StrokeArchive) GetSmartStroke() *SmartStrokeArchive {
	if m != nil {
		return m.SmartStroke
	}
	return nil
}

func (m *StrokeArchive) GetFrame() *FrameArchive {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *StrokeArchive) GetPatternedStroke() *PatternedStrokeArchive {
	if m != nil {
		return m.PatternedStroke
	}
	return nil
}

type SmartStrokeArchive struct {
	StrokeName       *string                  `protobuf:"bytes,2,opt,name=strokeName" json:"strokeName,omitempty"`
	RandomSeed       *int32                   `protobuf:"varint,3,opt,name=randomSeed" json:"randomSeed,omitempty"`
	ParameterValues  *TSP.ReferenceDictionary `protobuf:"bytes,4,opt,name=parameterValues" json:"parameterValues,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *SmartStrokeArchive) Reset()         { *m = SmartStrokeArchive{} }
func (m *SmartStrokeArchive) String() string { return proto.CompactTextString(m) }
func (*SmartStrokeArchive) ProtoMessage()    {}

func (m *SmartStrokeArchive) GetStrokeName() string {
	if m != nil && m.StrokeName != nil {
		return *m.StrokeName
	}
	return ""
}

func (m *SmartStrokeArchive) GetRandomSeed() int32 {
	if m != nil && m.RandomSeed != nil {
		return *m.RandomSeed
	}
	return 0
}

func (m *SmartStrokeArchive) GetParameterValues() *TSP.ReferenceDictionary {
	if m != nil {
		return m.ParameterValues
	}
	return nil
}

type FrameArchive struct {
	FrameName        *string  `protobuf:"bytes,2,opt,name=frameName" json:"frameName,omitempty"`
	AssetScale       *float32 `protobuf:"fixed32,3,opt,name=assetScale" json:"assetScale,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *FrameArchive) Reset()         { *m = FrameArchive{} }
func (m *FrameArchive) String() string { return proto.CompactTextString(m) }
func (*FrameArchive) ProtoMessage()    {}

func (m *FrameArchive) GetFrameName() string {
	if m != nil && m.FrameName != nil {
		return *m.FrameName
	}
	return ""
}

func (m *FrameArchive) GetAssetScale() float32 {
	if m != nil && m.AssetScale != nil {
		return *m.AssetScale
	}
	return 0
}

type PatternedStrokeArchive struct {
	PatternName      *string `protobuf:"bytes,2,opt,name=pattern_name" json:"pattern_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PatternedStrokeArchive) Reset()         { *m = PatternedStrokeArchive{} }
func (m *PatternedStrokeArchive) String() string { return proto.CompactTextString(m) }
func (*PatternedStrokeArchive) ProtoMessage()    {}

func (m *PatternedStrokeArchive) GetPatternName() string {
	if m != nil && m.PatternName != nil {
		return *m.PatternName
	}
	return ""
}

type LineEndArchive struct {
	Path             *TSP.Path  `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	LineJoin         *LineJoin  `protobuf:"varint,2,opt,name=line_join,enum=TSD.LineJoin,def=0" json:"line_join,omitempty"`
	EndPoint         *TSP.Point `protobuf:"bytes,3,opt,name=end_point" json:"end_point,omitempty"`
	IsFilled         *bool      `protobuf:"varint,4,opt,name=is_filled" json:"is_filled,omitempty"`
	Identifier       *string    `protobuf:"bytes,5,opt,name=identifier" json:"identifier,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *LineEndArchive) Reset()         { *m = LineEndArchive{} }
func (m *LineEndArchive) String() string { return proto.CompactTextString(m) }
func (*LineEndArchive) ProtoMessage()    {}

const Default_LineEndArchive_LineJoin LineJoin = LineJoin_MiterJoin

func (m *LineEndArchive) GetPath() *TSP.Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *LineEndArchive) GetLineJoin() LineJoin {
	if m != nil && m.LineJoin != nil {
		return *m.LineJoin
	}
	return Default_LineEndArchive_LineJoin
}

func (m *LineEndArchive) GetEndPoint() *TSP.Point {
	if m != nil {
		return m.EndPoint
	}
	return nil
}

func (m *LineEndArchive) GetIsFilled() bool {
	if m != nil && m.IsFilled != nil {
		return *m.IsFilled
	}
	return false
}

func (m *LineEndArchive) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

type ShadowArchive struct {
	Color            *TSP.Color                `protobuf:"bytes,1,opt,name=color" json:"color,omitempty"`
	Angle            *float32                  `protobuf:"fixed32,2,opt,name=angle,def=315" json:"angle,omitempty"`
	Offset           *float32                  `protobuf:"fixed32,3,opt,name=offset,def=5" json:"offset,omitempty"`
	Radius           *int32                    `protobuf:"varint,4,opt,name=radius,def=1" json:"radius,omitempty"`
	Opacity          *float32                  `protobuf:"fixed32,5,opt,name=opacity,def=1" json:"opacity,omitempty"`
	IsEnabled        *bool                     `protobuf:"varint,6,opt,name=is_enabled,def=1" json:"is_enabled,omitempty"`
	Type             *ShadowArchive_ShadowType `protobuf:"varint,7,opt,name=type,enum=TSD.ShadowArchive_ShadowType,def=0" json:"type,omitempty"`
	DropShadow       *DropShadowArchive        `protobuf:"bytes,8,opt,name=dropShadow" json:"dropShadow,omitempty"`
	ContactShadow    *ContactShadowArchive     `protobuf:"bytes,9,opt,name=contactShadow" json:"contactShadow,omitempty"`
	CurvedShadow     *CurvedShadowArchive      `protobuf:"bytes,10,opt,name=curvedShadow" json:"curvedShadow,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ShadowArchive) Reset()         { *m = ShadowArchive{} }
func (m *ShadowArchive) String() string { return proto.CompactTextString(m) }
func (*ShadowArchive) ProtoMessage()    {}

const Default_ShadowArchive_Angle float32 = 315
const Default_ShadowArchive_Offset float32 = 5
const Default_ShadowArchive_Radius int32 = 1
const Default_ShadowArchive_Opacity float32 = 1
const Default_ShadowArchive_IsEnabled bool = true
const Default_ShadowArchive_Type ShadowArchive_ShadowType = ShadowArchive_TSDDropShadow

func (m *ShadowArchive) GetColor() *TSP.Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *ShadowArchive) GetAngle() float32 {
	if m != nil && m.Angle != nil {
		return *m.Angle
	}
	return Default_ShadowArchive_Angle
}

func (m *ShadowArchive) GetOffset() float32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return Default_ShadowArchive_Offset
}

func (m *ShadowArchive) GetRadius() int32 {
	if m != nil && m.Radius != nil {
		return *m.Radius
	}
	return Default_ShadowArchive_Radius
}

func (m *ShadowArchive) GetOpacity() float32 {
	if m != nil && m.Opacity != nil {
		return *m.Opacity
	}
	return Default_ShadowArchive_Opacity
}

func (m *ShadowArchive) GetIsEnabled() bool {
	if m != nil && m.IsEnabled != nil {
		return *m.IsEnabled
	}
	return Default_ShadowArchive_IsEnabled
}

func (m *ShadowArchive) GetType() ShadowArchive_ShadowType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_ShadowArchive_Type
}

func (m *ShadowArchive) GetDropShadow() *DropShadowArchive {
	if m != nil {
		return m.DropShadow
	}
	return nil
}

func (m *ShadowArchive) GetContactShadow() *ContactShadowArchive {
	if m != nil {
		return m.ContactShadow
	}
	return nil
}

func (m *ShadowArchive) GetCurvedShadow() *CurvedShadowArchive {
	if m != nil {
		return m.CurvedShadow
	}
	return nil
}

type DropShadowArchive struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DropShadowArchive) Reset()         { *m = DropShadowArchive{} }
func (m *DropShadowArchive) String() string { return proto.CompactTextString(m) }
func (*DropShadowArchive) ProtoMessage()    {}

type ContactShadowArchive struct {
	Height           *float32 `protobuf:"fixed32,2,opt,name=height,def=0.2" json:"height,omitempty"`
	Offset           *float32 `protobuf:"fixed32,4,opt,name=offset,def=0" json:"offset,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ContactShadowArchive) Reset()         { *m = ContactShadowArchive{} }
func (m *ContactShadowArchive) String() string { return proto.CompactTextString(m) }
func (*ContactShadowArchive) ProtoMessage()    {}

const Default_ContactShadowArchive_Height float32 = 0.2
const Default_ContactShadowArchive_Offset float32 = 0

func (m *ContactShadowArchive) GetHeight() float32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return Default_ContactShadowArchive_Height
}

func (m *ContactShadowArchive) GetOffset() float32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return Default_ContactShadowArchive_Offset
}

type CurvedShadowArchive struct {
	Curve            *float32 `protobuf:"fixed32,1,opt,name=curve,def=0.6" json:"curve,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CurvedShadowArchive) Reset()         { *m = CurvedShadowArchive{} }
func (m *CurvedShadowArchive) String() string { return proto.CompactTextString(m) }
func (*CurvedShadowArchive) ProtoMessage()    {}

const Default_CurvedShadowArchive_Curve float32 = 0.6

func (m *CurvedShadowArchive) GetCurve() float32 {
	if m != nil && m.Curve != nil {
		return *m.Curve
	}
	return Default_CurvedShadowArchive_Curve
}

type ReflectionArchive struct {
	Opacity          *float32 `protobuf:"fixed32,1,opt,name=opacity,def=0.5" json:"opacity,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ReflectionArchive) Reset()         { *m = ReflectionArchive{} }
func (m *ReflectionArchive) String() string { return proto.CompactTextString(m) }
func (*ReflectionArchive) ProtoMessage()    {}

const Default_ReflectionArchive_Opacity float32 = 0.5

func (m *ReflectionArchive) GetOpacity() float32 {
	if m != nil && m.Opacity != nil {
		return *m.Opacity
	}
	return Default_ReflectionArchive_Opacity
}

type ImageAdjustmentsArchive struct {
	Exposure                  *float32 `protobuf:"fixed32,1,opt,name=exposure" json:"exposure,omitempty"`
	Saturation                *float32 `protobuf:"fixed32,2,opt,name=saturation" json:"saturation,omitempty"`
	Contrast                  *float32 `protobuf:"fixed32,3,opt,name=contrast" json:"contrast,omitempty"`
	Highlights                *float32 `protobuf:"fixed32,4,opt,name=highlights" json:"highlights,omitempty"`
	Shadows                   *float32 `protobuf:"fixed32,5,opt,name=shadows" json:"shadows,omitempty"`
	Sharpness                 *float32 `protobuf:"fixed32,6,opt,name=sharpness" json:"sharpness,omitempty"`
	Denoise                   *float32 `protobuf:"fixed32,7,opt,name=denoise" json:"denoise,omitempty"`
	Temperature               *float32 `protobuf:"fixed32,8,opt,name=temperature" json:"temperature,omitempty"`
	Tint                      *float32 `protobuf:"fixed32,9,opt,name=tint" json:"tint,omitempty"`
	BottomLevel               *float32 `protobuf:"fixed32,10,opt,name=bottom_level" json:"bottom_level,omitempty"`
	TopLevel                  *float32 `protobuf:"fixed32,11,opt,name=top_level,def=1" json:"top_level,omitempty"`
	Gamma                     *float32 `protobuf:"fixed32,12,opt,name=gamma" json:"gamma,omitempty"`
	Enhance                   *bool    `protobuf:"varint,13,opt,name=enhance,def=0" json:"enhance,omitempty"`
	RepresentsSageAdjustments *bool    `protobuf:"varint,14,opt,name=represents_sage_adjustments,def=0" json:"represents_sage_adjustments,omitempty"`
	XXX_unrecognized          []byte   `json:"-"`
}

func (m *ImageAdjustmentsArchive) Reset()         { *m = ImageAdjustmentsArchive{} }
func (m *ImageAdjustmentsArchive) String() string { return proto.CompactTextString(m) }
func (*ImageAdjustmentsArchive) ProtoMessage()    {}

const Default_ImageAdjustmentsArchive_TopLevel float32 = 1
const Default_ImageAdjustmentsArchive_Enhance bool = false
const Default_ImageAdjustmentsArchive_RepresentsSageAdjustments bool = false

func (m *ImageAdjustmentsArchive) GetExposure() float32 {
	if m != nil && m.Exposure != nil {
		return *m.Exposure
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetSaturation() float32 {
	if m != nil && m.Saturation != nil {
		return *m.Saturation
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetContrast() float32 {
	if m != nil && m.Contrast != nil {
		return *m.Contrast
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetHighlights() float32 {
	if m != nil && m.Highlights != nil {
		return *m.Highlights
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetShadows() float32 {
	if m != nil && m.Shadows != nil {
		return *m.Shadows
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetSharpness() float32 {
	if m != nil && m.Sharpness != nil {
		return *m.Sharpness
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetDenoise() float32 {
	if m != nil && m.Denoise != nil {
		return *m.Denoise
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetTemperature() float32 {
	if m != nil && m.Temperature != nil {
		return *m.Temperature
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetTint() float32 {
	if m != nil && m.Tint != nil {
		return *m.Tint
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetBottomLevel() float32 {
	if m != nil && m.BottomLevel != nil {
		return *m.BottomLevel
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetTopLevel() float32 {
	if m != nil && m.TopLevel != nil {
		return *m.TopLevel
	}
	return Default_ImageAdjustmentsArchive_TopLevel
}

func (m *ImageAdjustmentsArchive) GetGamma() float32 {
	if m != nil && m.Gamma != nil {
		return *m.Gamma
	}
	return 0
}

func (m *ImageAdjustmentsArchive) GetEnhance() bool {
	if m != nil && m.Enhance != nil {
		return *m.Enhance
	}
	return Default_ImageAdjustmentsArchive_Enhance
}

func (m *ImageAdjustmentsArchive) GetRepresentsSageAdjustments() bool {
	if m != nil && m.RepresentsSageAdjustments != nil {
		return *m.RepresentsSageAdjustments
	}
	return Default_ImageAdjustmentsArchive_RepresentsSageAdjustments
}

type ShapeStylePropertiesArchive struct {
	Fill             *FillArchive       `protobuf:"bytes,1,opt,name=fill" json:"fill,omitempty"`
	Stroke           *StrokeArchive     `protobuf:"bytes,2,opt,name=stroke" json:"stroke,omitempty"`
	Opacity          *float32           `protobuf:"fixed32,3,opt,name=opacity" json:"opacity,omitempty"`
	Shadow           *ShadowArchive     `protobuf:"bytes,4,opt,name=shadow" json:"shadow,omitempty"`
	Reflection       *ReflectionArchive `protobuf:"bytes,5,opt,name=reflection" json:"reflection,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ShapeStylePropertiesArchive) Reset()         { *m = ShapeStylePropertiesArchive{} }
func (m *ShapeStylePropertiesArchive) String() string { return proto.CompactTextString(m) }
func (*ShapeStylePropertiesArchive) ProtoMessage()    {}

func (m *ShapeStylePropertiesArchive) GetFill() *FillArchive {
	if m != nil {
		return m.Fill
	}
	return nil
}

func (m *ShapeStylePropertiesArchive) GetStroke() *StrokeArchive {
	if m != nil {
		return m.Stroke
	}
	return nil
}

func (m *ShapeStylePropertiesArchive) GetOpacity() float32 {
	if m != nil && m.Opacity != nil {
		return *m.Opacity
	}
	return 0
}

func (m *ShapeStylePropertiesArchive) GetShadow() *ShadowArchive {
	if m != nil {
		return m.Shadow
	}
	return nil
}

func (m *ShapeStylePropertiesArchive) GetReflection() *ReflectionArchive {
	if m != nil {
		return m.Reflection
	}
	return nil
}

type ShapeStyleArchive struct {
	Super            *TSS.StyleArchive            `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OverrideCount    *uint32                      `protobuf:"varint,10,opt,name=override_count,def=0" json:"override_count,omitempty"`
	ShapeProperties  *ShapeStylePropertiesArchive `protobuf:"bytes,11,opt,name=shape_properties" json:"shape_properties,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *ShapeStyleArchive) Reset()         { *m = ShapeStyleArchive{} }
func (m *ShapeStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ShapeStyleArchive) ProtoMessage()    {}

const Default_ShapeStyleArchive_OverrideCount uint32 = 0

func (m *ShapeStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ShapeStyleArchive) GetOverrideCount() uint32 {
	if m != nil && m.OverrideCount != nil {
		return *m.OverrideCount
	}
	return Default_ShapeStyleArchive_OverrideCount
}

func (m *ShapeStyleArchive) GetShapeProperties() *ShapeStylePropertiesArchive {
	if m != nil {
		return m.ShapeProperties
	}
	return nil
}

type MediaStylePropertiesArchive struct {
	Stroke           *StrokeArchive     `protobuf:"bytes,1,opt,name=stroke" json:"stroke,omitempty"`
	Opacity          *float32           `protobuf:"fixed32,2,opt,name=opacity" json:"opacity,omitempty"`
	Shadow           *ShadowArchive     `protobuf:"bytes,3,opt,name=shadow" json:"shadow,omitempty"`
	Reflection       *ReflectionArchive `protobuf:"bytes,4,opt,name=reflection" json:"reflection,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *MediaStylePropertiesArchive) Reset()         { *m = MediaStylePropertiesArchive{} }
func (m *MediaStylePropertiesArchive) String() string { return proto.CompactTextString(m) }
func (*MediaStylePropertiesArchive) ProtoMessage()    {}

func (m *MediaStylePropertiesArchive) GetStroke() *StrokeArchive {
	if m != nil {
		return m.Stroke
	}
	return nil
}

func (m *MediaStylePropertiesArchive) GetOpacity() float32 {
	if m != nil && m.Opacity != nil {
		return *m.Opacity
	}
	return 0
}

func (m *MediaStylePropertiesArchive) GetShadow() *ShadowArchive {
	if m != nil {
		return m.Shadow
	}
	return nil
}

func (m *MediaStylePropertiesArchive) GetReflection() *ReflectionArchive {
	if m != nil {
		return m.Reflection
	}
	return nil
}

type MediaStyleArchive struct {
	Super            *TSS.StyleArchive            `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OverrideCount    *uint32                      `protobuf:"varint,10,opt,name=override_count,def=0" json:"override_count,omitempty"`
	MediaProperties  *MediaStylePropertiesArchive `protobuf:"bytes,11,opt,name=media_properties" json:"media_properties,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *MediaStyleArchive) Reset()         { *m = MediaStyleArchive{} }
func (m *MediaStyleArchive) String() string { return proto.CompactTextString(m) }
func (*MediaStyleArchive) ProtoMessage()    {}

const Default_MediaStyleArchive_OverrideCount uint32 = 0

func (m *MediaStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *MediaStyleArchive) GetOverrideCount() uint32 {
	if m != nil && m.OverrideCount != nil {
		return *m.OverrideCount
	}
	return Default_MediaStyleArchive_OverrideCount
}

func (m *MediaStyleArchive) GetMediaProperties() *MediaStylePropertiesArchive {
	if m != nil {
		return m.MediaProperties
	}
	return nil
}

type ThemePresetsArchive struct {
	GradientFillPresets []*FillArchive   `protobuf:"bytes,1,rep,name=gradient_fill_presets" json:"gradient_fill_presets,omitempty"`
	ImageFillPresets    []*FillArchive   `protobuf:"bytes,2,rep,name=image_fill_presets" json:"image_fill_presets,omitempty"`
	ShadowPresets       []*ShadowArchive `protobuf:"bytes,3,rep,name=shadow_presets" json:"shadow_presets,omitempty"`
	LineStylePresets    []*TSP.Reference `protobuf:"bytes,4,rep,name=line_style_presets" json:"line_style_presets,omitempty"`
	ShapeStylePresets   []*TSP.Reference `protobuf:"bytes,5,rep,name=shape_style_presets" json:"shape_style_presets,omitempty"`
	TextboxStylePresets []*TSP.Reference `protobuf:"bytes,6,rep,name=textbox_style_presets" json:"textbox_style_presets,omitempty"`
	ImageStylePresets   []*TSP.Reference `protobuf:"bytes,7,rep,name=image_style_presets" json:"image_style_presets,omitempty"`
	MovieStylePresets   []*TSP.Reference `protobuf:"bytes,8,rep,name=movie_style_presets" json:"movie_style_presets,omitempty"`
	XXX_unrecognized    []byte           `json:"-"`
}

func (m *ThemePresetsArchive) Reset()         { *m = ThemePresetsArchive{} }
func (m *ThemePresetsArchive) String() string { return proto.CompactTextString(m) }
func (*ThemePresetsArchive) ProtoMessage()    {}

func (m *ThemePresetsArchive) GetGradientFillPresets() []*FillArchive {
	if m != nil {
		return m.GradientFillPresets
	}
	return nil
}

func (m *ThemePresetsArchive) GetImageFillPresets() []*FillArchive {
	if m != nil {
		return m.ImageFillPresets
	}
	return nil
}

func (m *ThemePresetsArchive) GetShadowPresets() []*ShadowArchive {
	if m != nil {
		return m.ShadowPresets
	}
	return nil
}

func (m *ThemePresetsArchive) GetLineStylePresets() []*TSP.Reference {
	if m != nil {
		return m.LineStylePresets
	}
	return nil
}

func (m *ThemePresetsArchive) GetShapeStylePresets() []*TSP.Reference {
	if m != nil {
		return m.ShapeStylePresets
	}
	return nil
}

func (m *ThemePresetsArchive) GetTextboxStylePresets() []*TSP.Reference {
	if m != nil {
		return m.TextboxStylePresets
	}
	return nil
}

func (m *ThemePresetsArchive) GetImageStylePresets() []*TSP.Reference {
	if m != nil {
		return m.ImageStylePresets
	}
	return nil
}

func (m *ThemePresetsArchive) GetMovieStylePresets() []*TSP.Reference {
	if m != nil {
		return m.MovieStylePresets
	}
	return nil
}

var E_ThemePresetsArchive_Extension = &proto.ExtensionDesc{
	ExtendedType:  (*TSS.ThemeArchive)(nil),
	ExtensionType: (*ThemePresetsArchive)(nil),
	Field:         100,
	Name:          "TSD.ThemePresetsArchive.extension",
	Tag:           "bytes,100,opt,name=extension",
}

type ThemeReplaceFillPresetCommandArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme            *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	Fill             *FillArchive        `protobuf:"bytes,3,req,name=fill" json:"fill,omitempty"`
	OldFill          *FillArchive        `protobuf:"bytes,4,req,name=old_fill" json:"old_fill,omitempty"`
	Index            *uint32             `protobuf:"varint,5,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ThemeReplaceFillPresetCommandArchive) Reset()         { *m = ThemeReplaceFillPresetCommandArchive{} }
func (m *ThemeReplaceFillPresetCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeReplaceFillPresetCommandArchive) ProtoMessage()    {}

func (m *ThemeReplaceFillPresetCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ThemeReplaceFillPresetCommandArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *ThemeReplaceFillPresetCommandArchive) GetFill() *FillArchive {
	if m != nil {
		return m.Fill
	}
	return nil
}

func (m *ThemeReplaceFillPresetCommandArchive) GetOldFill() *FillArchive {
	if m != nil {
		return m.OldFill
	}
	return nil
}

func (m *ThemeReplaceFillPresetCommandArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type DrawableArchive struct {
	Geometry                 *GeometryArchive         `protobuf:"bytes,1,opt,name=geometry" json:"geometry,omitempty"`
	Parent                   *TSP.Reference           `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	ExteriorTextWrap         *ExteriorTextWrapArchive `protobuf:"bytes,3,opt,name=exterior_text_wrap" json:"exterior_text_wrap,omitempty"`
	HyperlinkUrl             *string                  `protobuf:"bytes,4,opt,name=hyperlink_url" json:"hyperlink_url,omitempty"`
	Locked                   *bool                    `protobuf:"varint,5,opt,name=locked" json:"locked,omitempty"`
	Comment                  *TSP.Reference           `protobuf:"bytes,6,opt,name=comment" json:"comment,omitempty"`
	AspectRatioLocked        *bool                    `protobuf:"varint,7,opt,name=aspect_ratio_locked" json:"aspect_ratio_locked,omitempty"`
	AccessibilityDescription *string                  `protobuf:"bytes,8,opt,name=accessibility_description" json:"accessibility_description,omitempty"`
	XXX_unrecognized         []byte                   `json:"-"`
}

func (m *DrawableArchive) Reset()         { *m = DrawableArchive{} }
func (m *DrawableArchive) String() string { return proto.CompactTextString(m) }
func (*DrawableArchive) ProtoMessage()    {}

func (m *DrawableArchive) GetGeometry() *GeometryArchive {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *DrawableArchive) GetParent() *TSP.Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *DrawableArchive) GetExteriorTextWrap() *ExteriorTextWrapArchive {
	if m != nil {
		return m.ExteriorTextWrap
	}
	return nil
}

func (m *DrawableArchive) GetHyperlinkUrl() string {
	if m != nil && m.HyperlinkUrl != nil {
		return *m.HyperlinkUrl
	}
	return ""
}

func (m *DrawableArchive) GetLocked() bool {
	if m != nil && m.Locked != nil {
		return *m.Locked
	}
	return false
}

func (m *DrawableArchive) GetComment() *TSP.Reference {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *DrawableArchive) GetAspectRatioLocked() bool {
	if m != nil && m.AspectRatioLocked != nil {
		return *m.AspectRatioLocked
	}
	return false
}

func (m *DrawableArchive) GetAccessibilityDescription() string {
	if m != nil && m.AccessibilityDescription != nil {
		return *m.AccessibilityDescription
	}
	return ""
}

type ContainerArchive struct {
	Geometry         *GeometryArchive `protobuf:"bytes,1,opt,name=geometry" json:"geometry,omitempty"`
	Parent           *TSP.Reference   `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	Children         []*TSP.Reference `protobuf:"bytes,3,rep,name=children" json:"children,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ContainerArchive) Reset()         { *m = ContainerArchive{} }
func (m *ContainerArchive) String() string { return proto.CompactTextString(m) }
func (*ContainerArchive) ProtoMessage()    {}

func (m *ContainerArchive) GetGeometry() *GeometryArchive {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *ContainerArchive) GetParent() *TSP.Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *ContainerArchive) GetChildren() []*TSP.Reference {
	if m != nil {
		return m.Children
	}
	return nil
}

type GroupArchive struct {
	Super            *DrawableArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Children         []*TSP.Reference `protobuf:"bytes,2,rep,name=children" json:"children,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GroupArchive) Reset()         { *m = GroupArchive{} }
func (m *GroupArchive) String() string { return proto.CompactTextString(m) }
func (*GroupArchive) ProtoMessage()    {}

func (m *GroupArchive) GetSuper() *DrawableArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *GroupArchive) GetChildren() []*TSP.Reference {
	if m != nil {
		return m.Children
	}
	return nil
}

type ShapeArchive struct {
	Super            *DrawableArchive   `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Style            *TSP.Reference     `protobuf:"bytes,2,opt,name=style" json:"style,omitempty"`
	Pathsource       *PathSourceArchive `protobuf:"bytes,3,opt,name=pathsource" json:"pathsource,omitempty"`
	HeadLineEnd      *LineEndArchive    `protobuf:"bytes,4,opt,name=head_line_end" json:"head_line_end,omitempty"`
	TailLineEnd      *LineEndArchive    `protobuf:"bytes,5,opt,name=tail_line_end" json:"tail_line_end,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ShapeArchive) Reset()         { *m = ShapeArchive{} }
func (m *ShapeArchive) String() string { return proto.CompactTextString(m) }
func (*ShapeArchive) ProtoMessage()    {}

func (m *ShapeArchive) GetSuper() *DrawableArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ShapeArchive) GetStyle() *TSP.Reference {
	if m != nil {
		return m.Style
	}
	return nil
}

func (m *ShapeArchive) GetPathsource() *PathSourceArchive {
	if m != nil {
		return m.Pathsource
	}
	return nil
}

func (m *ShapeArchive) GetHeadLineEnd() *LineEndArchive {
	if m != nil {
		return m.HeadLineEnd
	}
	return nil
}

func (m *ShapeArchive) GetTailLineEnd() *LineEndArchive {
	if m != nil {
		return m.TailLineEnd
	}
	return nil
}

type ConnectionLineArchive struct {
	Super            *ShapeArchive  `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ConnectedFrom    *TSP.Reference `protobuf:"bytes,2,opt,name=connected_from" json:"connected_from,omitempty"`
	ConnectedTo      *TSP.Reference `protobuf:"bytes,3,opt,name=connected_to" json:"connected_to,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ConnectionLineArchive) Reset()         { *m = ConnectionLineArchive{} }
func (m *ConnectionLineArchive) String() string { return proto.CompactTextString(m) }
func (*ConnectionLineArchive) ProtoMessage()    {}

func (m *ConnectionLineArchive) GetSuper() *ShapeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ConnectionLineArchive) GetConnectedFrom() *TSP.Reference {
	if m != nil {
		return m.ConnectedFrom
	}
	return nil
}

func (m *ConnectionLineArchive) GetConnectedTo() *TSP.Reference {
	if m != nil {
		return m.ConnectedTo
	}
	return nil
}

type ImageArchive struct {
	Super                                *DrawableArchive         `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Data                                 *TSP.DataReference       `protobuf:"bytes,11,opt,name=data" json:"data,omitempty"`
	Style                                *TSP.Reference           `protobuf:"bytes,3,opt,name=style" json:"style,omitempty"`
	OriginalSize                         *TSP.Size                `protobuf:"bytes,4,opt,name=originalSize" json:"originalSize,omitempty"`
	Mask                                 *TSP.Reference           `protobuf:"bytes,5,opt,name=mask" json:"mask,omitempty"`
	ThumbnailData                        *TSP.DataReference       `protobuf:"bytes,12,opt,name=thumbnailData" json:"thumbnailData,omitempty"`
	Flags                                *uint32                  `protobuf:"varint,7,opt,name=flags" json:"flags,omitempty"`
	OriginalData                         *TSP.DataReference       `protobuf:"bytes,13,opt,name=originalData" json:"originalData,omitempty"`
	NaturalSize                          *TSP.Size                `protobuf:"bytes,9,opt,name=naturalSize" json:"naturalSize,omitempty"`
	InstantAlphaPath                     *TSP.Path                `protobuf:"bytes,10,opt,name=instantAlphaPath" json:"instantAlphaPath,omitempty"`
	ImageAdjustments                     *ImageAdjustmentsArchive `protobuf:"bytes,14,opt,name=imageAdjustments" json:"imageAdjustments,omitempty"`
	EnhancedImageData                    *TSP.DataReference       `protobuf:"bytes,17,opt,name=enhancedImageData" json:"enhancedImageData,omitempty"`
	AdjustedImageData                    *TSP.DataReference       `protobuf:"bytes,15,opt,name=adjustedImageData" json:"adjustedImageData,omitempty"`
	ThumbnailAdjustedImageData           *TSP.DataReference       `protobuf:"bytes,16,opt,name=thumbnailAdjustedImageData" json:"thumbnailAdjustedImageData,omitempty"`
	InterpretsUntaggedImageDataAsGeneric *bool                    `protobuf:"varint,18,opt,name=interpretsUntaggedImageDataAsGeneric" json:"interpretsUntaggedImageDataAsGeneric,omitempty"`
	DatabaseData                         *TSP.Reference           `protobuf:"bytes,2,opt,name=database_data" json:"database_data,omitempty"`
	DatabaseThumbnailData                *TSP.Reference           `protobuf:"bytes,6,opt,name=database_thumbnailData" json:"database_thumbnailData,omitempty"`
	DatabaseOriginalData                 *TSP.Reference           `protobuf:"bytes,8,opt,name=database_originalData" json:"database_originalData,omitempty"`
	XXX_unrecognized                     []byte                   `json:"-"`
}

func (m *ImageArchive) Reset()         { *m = ImageArchive{} }
func (m *ImageArchive) String() string { return proto.CompactTextString(m) }
func (*ImageArchive) ProtoMessage()    {}

func (m *ImageArchive) GetSuper() *DrawableArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ImageArchive) GetData() *TSP.DataReference {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ImageArchive) GetStyle() *TSP.Reference {
	if m != nil {
		return m.Style
	}
	return nil
}

func (m *ImageArchive) GetOriginalSize() *TSP.Size {
	if m != nil {
		return m.OriginalSize
	}
	return nil
}

func (m *ImageArchive) GetMask() *TSP.Reference {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *ImageArchive) GetThumbnailData() *TSP.DataReference {
	if m != nil {
		return m.ThumbnailData
	}
	return nil
}

func (m *ImageArchive) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *ImageArchive) GetOriginalData() *TSP.DataReference {
	if m != nil {
		return m.OriginalData
	}
	return nil
}

func (m *ImageArchive) GetNaturalSize() *TSP.Size {
	if m != nil {
		return m.NaturalSize
	}
	return nil
}

func (m *ImageArchive) GetInstantAlphaPath() *TSP.Path {
	if m != nil {
		return m.InstantAlphaPath
	}
	return nil
}

func (m *ImageArchive) GetImageAdjustments() *ImageAdjustmentsArchive {
	if m != nil {
		return m.ImageAdjustments
	}
	return nil
}

func (m *ImageArchive) GetEnhancedImageData() *TSP.DataReference {
	if m != nil {
		return m.EnhancedImageData
	}
	return nil
}

func (m *ImageArchive) GetAdjustedImageData() *TSP.DataReference {
	if m != nil {
		return m.AdjustedImageData
	}
	return nil
}

func (m *ImageArchive) GetThumbnailAdjustedImageData() *TSP.DataReference {
	if m != nil {
		return m.ThumbnailAdjustedImageData
	}
	return nil
}

func (m *ImageArchive) GetInterpretsUntaggedImageDataAsGeneric() bool {
	if m != nil && m.InterpretsUntaggedImageDataAsGeneric != nil {
		return *m.InterpretsUntaggedImageDataAsGeneric
	}
	return false
}

func (m *ImageArchive) GetDatabaseData() *TSP.Reference {
	if m != nil {
		return m.DatabaseData
	}
	return nil
}

func (m *ImageArchive) GetDatabaseThumbnailData() *TSP.Reference {
	if m != nil {
		return m.DatabaseThumbnailData
	}
	return nil
}

func (m *ImageArchive) GetDatabaseOriginalData() *TSP.Reference {
	if m != nil {
		return m.DatabaseOriginalData
	}
	return nil
}

type MaskArchive struct {
	Super            *DrawableArchive   `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Pathsource       *PathSourceArchive `protobuf:"bytes,2,opt,name=pathsource" json:"pathsource,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *MaskArchive) Reset()         { *m = MaskArchive{} }
func (m *MaskArchive) String() string { return proto.CompactTextString(m) }
func (*MaskArchive) ProtoMessage()    {}

func (m *MaskArchive) GetSuper() *DrawableArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *MaskArchive) GetPathsource() *PathSourceArchive {
	if m != nil {
		return m.Pathsource
	}
	return nil
}

type MovieArchive struct {
	Super                      *DrawableArchive   `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	MovieData                  *TSP.DataReference `protobuf:"bytes,14,opt,name=movieData" json:"movieData,omitempty"`
	ImportedAuxiliaryMovieData *TSP.DataReference `protobuf:"bytes,22,opt,name=importedAuxiliaryMovieData" json:"importedAuxiliaryMovieData,omitempty"`
	MovieRemoteURL             *string            `protobuf:"bytes,17,opt,name=movieRemoteURL" json:"movieRemoteURL,omitempty"`
	StartTime                  *float32           `protobuf:"fixed32,3,opt,name=startTime" json:"startTime,omitempty"`
	EndTime                    *float32           `protobuf:"fixed32,4,opt,name=endTime" json:"endTime,omitempty"`
	PosterTime                 *float32           `protobuf:"fixed32,5,opt,name=posterTime" json:"posterTime,omitempty"`
	LoopOption                 *uint32            `protobuf:"varint,6,opt,name=loopOption" json:"loopOption,omitempty"`
	Volume                     *float32           `protobuf:"fixed32,7,opt,name=volume" json:"volume,omitempty"`
	AutoPlay                   *bool              `protobuf:"varint,8,opt,name=autoPlay" json:"autoPlay,omitempty"`
	AudioOnly                  *bool              `protobuf:"varint,9,opt,name=audioOnly" json:"audioOnly,omitempty"`
	Streaming                  *bool              `protobuf:"varint,18,opt,name=streaming" json:"streaming,omitempty"`
	PosterImageData            *TSP.DataReference `protobuf:"bytes,15,opt,name=posterImageData" json:"posterImageData,omitempty"`
	AudioOnlyImageData         *TSP.DataReference `protobuf:"bytes,16,opt,name=audioOnlyImageData" json:"audioOnlyImageData,omitempty"`
	PlayableState              *uint32            `protobuf:"varint,12,opt,name=playableState" json:"playableState,omitempty"`
	Flags                      *uint32            `protobuf:"varint,13,opt,name=flags" json:"flags,omitempty"`
	DatabaseMovieData          *TSP.Reference     `protobuf:"bytes,2,opt,name=database_movieData" json:"database_movieData,omitempty"`
	DatabasePosterImageData    *TSP.Reference     `protobuf:"bytes,10,opt,name=database_posterImageData" json:"database_posterImageData,omitempty"`
	DatabaseAudioOnlyImageData *TSP.Reference     `protobuf:"bytes,11,opt,name=database_audioOnlyImageData" json:"database_audioOnlyImageData,omitempty"`
	Style                      *TSP.Reference     `protobuf:"bytes,19,opt,name=style" json:"style,omitempty"`
	OriginalSize               *TSP.Size          `protobuf:"bytes,20,opt,name=originalSize" json:"originalSize,omitempty"`
	NaturalSize                *TSP.Size          `protobuf:"bytes,21,opt,name=naturalSize" json:"naturalSize,omitempty"`
	XXX_unrecognized           []byte             `json:"-"`
}

func (m *MovieArchive) Reset()         { *m = MovieArchive{} }
func (m *MovieArchive) String() string { return proto.CompactTextString(m) }
func (*MovieArchive) ProtoMessage()    {}

func (m *MovieArchive) GetSuper() *DrawableArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *MovieArchive) GetMovieData() *TSP.DataReference {
	if m != nil {
		return m.MovieData
	}
	return nil
}

func (m *MovieArchive) GetImportedAuxiliaryMovieData() *TSP.DataReference {
	if m != nil {
		return m.ImportedAuxiliaryMovieData
	}
	return nil
}

func (m *MovieArchive) GetMovieRemoteURL() string {
	if m != nil && m.MovieRemoteURL != nil {
		return *m.MovieRemoteURL
	}
	return ""
}

func (m *MovieArchive) GetStartTime() float32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *MovieArchive) GetEndTime() float32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *MovieArchive) GetPosterTime() float32 {
	if m != nil && m.PosterTime != nil {
		return *m.PosterTime
	}
	return 0
}

func (m *MovieArchive) GetLoopOption() uint32 {
	if m != nil && m.LoopOption != nil {
		return *m.LoopOption
	}
	return 0
}

func (m *MovieArchive) GetVolume() float32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *MovieArchive) GetAutoPlay() bool {
	if m != nil && m.AutoPlay != nil {
		return *m.AutoPlay
	}
	return false
}

func (m *MovieArchive) GetAudioOnly() bool {
	if m != nil && m.AudioOnly != nil {
		return *m.AudioOnly
	}
	return false
}

func (m *MovieArchive) GetStreaming() bool {
	if m != nil && m.Streaming != nil {
		return *m.Streaming
	}
	return false
}

func (m *MovieArchive) GetPosterImageData() *TSP.DataReference {
	if m != nil {
		return m.PosterImageData
	}
	return nil
}

func (m *MovieArchive) GetAudioOnlyImageData() *TSP.DataReference {
	if m != nil {
		return m.AudioOnlyImageData
	}
	return nil
}

func (m *MovieArchive) GetPlayableState() uint32 {
	if m != nil && m.PlayableState != nil {
		return *m.PlayableState
	}
	return 0
}

func (m *MovieArchive) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *MovieArchive) GetDatabaseMovieData() *TSP.Reference {
	if m != nil {
		return m.DatabaseMovieData
	}
	return nil
}

func (m *MovieArchive) GetDatabasePosterImageData() *TSP.Reference {
	if m != nil {
		return m.DatabasePosterImageData
	}
	return nil
}

func (m *MovieArchive) GetDatabaseAudioOnlyImageData() *TSP.Reference {
	if m != nil {
		return m.DatabaseAudioOnlyImageData
	}
	return nil
}

func (m *MovieArchive) GetStyle() *TSP.Reference {
	if m != nil {
		return m.Style
	}
	return nil
}

func (m *MovieArchive) GetOriginalSize() *TSP.Size {
	if m != nil {
		return m.OriginalSize
	}
	return nil
}

func (m *MovieArchive) GetNaturalSize() *TSP.Size {
	if m != nil {
		return m.NaturalSize
	}
	return nil
}

type ExteriorTextWrapArchive struct {
	Type             *uint32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Direction        *uint32  `protobuf:"varint,2,opt,name=direction" json:"direction,omitempty"`
	FitType          *uint32  `protobuf:"varint,3,opt,name=fit_type" json:"fit_type,omitempty"`
	Margin           *float32 `protobuf:"fixed32,4,opt,name=margin" json:"margin,omitempty"`
	AlphaThreshold   *float32 `protobuf:"fixed32,5,opt,name=alpha_threshold" json:"alpha_threshold,omitempty"`
	IsHtmlWrap       *bool    `protobuf:"varint,6,opt,name=is_html_wrap" json:"is_html_wrap,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ExteriorTextWrapArchive) Reset()         { *m = ExteriorTextWrapArchive{} }
func (m *ExteriorTextWrapArchive) String() string { return proto.CompactTextString(m) }
func (*ExteriorTextWrapArchive) ProtoMessage()    {}

func (m *ExteriorTextWrapArchive) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ExteriorTextWrapArchive) GetDirection() uint32 {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return 0
}

func (m *ExteriorTextWrapArchive) GetFitType() uint32 {
	if m != nil && m.FitType != nil {
		return *m.FitType
	}
	return 0
}

func (m *ExteriorTextWrapArchive) GetMargin() float32 {
	if m != nil && m.Margin != nil {
		return *m.Margin
	}
	return 0
}

func (m *ExteriorTextWrapArchive) GetAlphaThreshold() float32 {
	if m != nil && m.AlphaThreshold != nil {
		return *m.AlphaThreshold
	}
	return 0
}

func (m *ExteriorTextWrapArchive) GetIsHtmlWrap() bool {
	if m != nil && m.IsHtmlWrap != nil {
		return *m.IsHtmlWrap
	}
	return false
}

type GuideArchive struct {
	Type             *GuideArchive_GuideType `protobuf:"varint,1,opt,name=type,enum=TSD.GuideArchive_GuideType" json:"type,omitempty"`
	Offset           *float32                `protobuf:"fixed32,2,opt,name=offset" json:"offset,omitempty"`
	Start            *float32                `protobuf:"fixed32,3,opt,name=start" json:"start,omitempty"`
	End              *float32                `protobuf:"fixed32,4,opt,name=end" json:"end,omitempty"`
	Dynamic          *bool                   `protobuf:"varint,5,opt,name=dynamic" json:"dynamic,omitempty"`
	Infinite         *bool                   `protobuf:"varint,6,opt,name=infinite" json:"infinite,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GuideArchive) Reset()         { *m = GuideArchive{} }
func (m *GuideArchive) String() string { return proto.CompactTextString(m) }
func (*GuideArchive) ProtoMessage()    {}

func (m *GuideArchive) GetType() GuideArchive_GuideType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return GuideArchive_Horizontal
}

func (m *GuideArchive) GetOffset() float32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *GuideArchive) GetStart() float32 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *GuideArchive) GetEnd() float32 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

func (m *GuideArchive) GetDynamic() bool {
	if m != nil && m.Dynamic != nil {
		return *m.Dynamic
	}
	return false
}

func (m *GuideArchive) GetInfinite() bool {
	if m != nil && m.Infinite != nil {
		return *m.Infinite
	}
	return false
}

type UserDefinedGuideArchive struct {
	Type             *UserDefinedGuideArchive_GuideType `protobuf:"varint,1,opt,name=type,enum=TSD.UserDefinedGuideArchive_GuideType" json:"type,omitempty"`
	Position         *float32                           `protobuf:"fixed32,2,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *UserDefinedGuideArchive) Reset()         { *m = UserDefinedGuideArchive{} }
func (m *UserDefinedGuideArchive) String() string { return proto.CompactTextString(m) }
func (*UserDefinedGuideArchive) ProtoMessage()    {}

func (m *UserDefinedGuideArchive) GetType() UserDefinedGuideArchive_GuideType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return UserDefinedGuideArchive_Horizontal
}

func (m *UserDefinedGuideArchive) GetPosition() float32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

type GuideStorageArchive struct {
	UserDefinedGuides []*UserDefinedGuideArchive `protobuf:"bytes,1,rep,name=userDefinedGuides" json:"userDefinedGuides,omitempty"`
	XXX_unrecognized  []byte                     `json:"-"`
}

func (m *GuideStorageArchive) Reset()         { *m = GuideStorageArchive{} }
func (m *GuideStorageArchive) String() string { return proto.CompactTextString(m) }
func (*GuideStorageArchive) ProtoMessage()    {}

func (m *GuideStorageArchive) GetUserDefinedGuides() []*UserDefinedGuideArchive {
	if m != nil {
		return m.UserDefinedGuides
	}
	return nil
}

type CanvasSelectionArchive struct {
	Infos            []*TSP.Reference `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
	Container        *TSP.Reference   `protobuf:"bytes,2,opt,name=container" json:"container,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CanvasSelectionArchive) Reset()         { *m = CanvasSelectionArchive{} }
func (m *CanvasSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*CanvasSelectionArchive) ProtoMessage()    {}

func (m *CanvasSelectionArchive) GetInfos() []*TSP.Reference {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *CanvasSelectionArchive) GetContainer() *TSP.Reference {
	if m != nil {
		return m.Container
	}
	return nil
}

type CommentStorageArchive struct {
	Text             *string        `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	CreationDate     *TSP.Date      `protobuf:"bytes,2,opt,name=creation_date" json:"creation_date,omitempty"`
	Author           *TSP.Reference `protobuf:"bytes,3,opt,name=author" json:"author,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CommentStorageArchive) Reset()         { *m = CommentStorageArchive{} }
func (m *CommentStorageArchive) String() string { return proto.CompactTextString(m) }
func (*CommentStorageArchive) ProtoMessage()    {}

func (m *CommentStorageArchive) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CommentStorageArchive) GetCreationDate() *TSP.Date {
	if m != nil {
		return m.CreationDate
	}
	return nil
}

func (m *CommentStorageArchive) GetAuthor() *TSP.Reference {
	if m != nil {
		return m.Author
	}
	return nil
}

func init() {
	proto.RegisterEnum("TSD.LineJoin", LineJoin_name, LineJoin_value)
	proto.RegisterEnum("TSD.PointPathSourceArchive_PointPathSourceType", PointPathSourceArchive_PointPathSourceType_name, PointPathSourceArchive_PointPathSourceType_value)
	proto.RegisterEnum("TSD.ScalarPathSourceArchive_ScalarPathSourceType", ScalarPathSourceArchive_ScalarPathSourceType_name, ScalarPathSourceArchive_ScalarPathSourceType_value)
	proto.RegisterEnum("TSD.ConnectionLinePathSourceArchive_ConnectionLinePathSourceType", ConnectionLinePathSourceArchive_ConnectionLinePathSourceType_name, ConnectionLinePathSourceArchive_ConnectionLinePathSourceType_value)
	proto.RegisterEnum("TSD.EditableBezierPathSourceArchive_NodeType", EditableBezierPathSourceArchive_NodeType_name, EditableBezierPathSourceArchive_NodeType_value)
	proto.RegisterEnum("TSD.GradientArchive_GradientType", GradientArchive_GradientType_name, GradientArchive_GradientType_value)
	proto.RegisterEnum("TSD.ImageFillArchive_ImageFillTechnique", ImageFillArchive_ImageFillTechnique_name, ImageFillArchive_ImageFillTechnique_value)
	proto.RegisterEnum("TSD.StrokePatternArchive_StrokePatternType", StrokePatternArchive_StrokePatternType_name, StrokePatternArchive_StrokePatternType_value)
	proto.RegisterEnum("TSD.StrokeArchive_LineCap", StrokeArchive_LineCap_name, StrokeArchive_LineCap_value)
	proto.RegisterEnum("TSD.ShadowArchive_ShadowType", ShadowArchive_ShadowType_name, ShadowArchive_ShadowType_value)
	proto.RegisterEnum("TSD.GuideArchive_GuideType", GuideArchive_GuideType_name, GuideArchive_GuideType_value)
	proto.RegisterEnum("TSD.UserDefinedGuideArchive_GuideType", UserDefinedGuideArchive_GuideType_name, UserDefinedGuideArchive_GuideType_value)
	proto.RegisterExtension(E_ThemePresetsArchive_Extension)
}
