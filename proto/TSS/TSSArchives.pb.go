// Code generated by protoc-gen-go.
// source: TSSArchives.proto
// DO NOT EDIT!

/*
Package TSS is a generated protocol buffer package.

It is generated from these files:
	TSSArchives.proto

It has these top-level messages:
	StyleArchive
	StylesheetArchive
	ThemeArchive
	ApplyThemeCommandArchive
	ApplyThemeChildCommandArchive
	ReapUnusedStyleCommandArchive
	StyleUpdatePropertyMapCommandArchive
	ThemeReplacePresetCommandArchive
	ThemeReplaceColorPresetCommandArchive
	ThemeAddStylePresetCommandArchive
	ThemeRemoveStylePresetCommandArchive
	ThemeMovePresetCommandArchive
	ThemeReplaceStylePresetCommandArchive
*/
package TSS

import proto "github.com/golang/protobuf/proto"
import math "math"
import "github.com/orcastor/iwork-converter//proto/TSP"
import "github.com/orcastor/iwork-converter//proto/TSK"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type StyleArchive struct {
	Name             *string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	StyleIdentifier  *string        `protobuf:"bytes,2,opt,name=style_identifier" json:"style_identifier,omitempty"`
	Parent           *TSP.Reference `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	IsVariation      *bool          `protobuf:"varint,4,opt,name=is_variation,def=0" json:"is_variation,omitempty"`
	Stylesheet       *TSP.Reference `protobuf:"bytes,5,opt,name=stylesheet" json:"stylesheet,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *StyleArchive) Reset()         { *m = StyleArchive{} }
func (m *StyleArchive) String() string { return proto.CompactTextString(m) }
func (*StyleArchive) ProtoMessage()    {}

const Default_StyleArchive_IsVariation bool = false

func (m *StyleArchive) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *StyleArchive) GetStyleIdentifier() string {
	if m != nil && m.StyleIdentifier != nil {
		return *m.StyleIdentifier
	}
	return ""
}

func (m *StyleArchive) GetParent() *TSP.Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *StyleArchive) GetIsVariation() bool {
	if m != nil && m.IsVariation != nil {
		return *m.IsVariation
	}
	return Default_StyleArchive_IsVariation
}

func (m *StyleArchive) GetStylesheet() *TSP.Reference {
	if m != nil {
		return m.Stylesheet
	}
	return nil
}

type StylesheetArchive struct {
	Styles                   []*TSP.Reference                          `protobuf:"bytes,1,rep,name=styles" json:"styles,omitempty"`
	IdentifierToStyleMap     []*StylesheetArchive_IdentifiedStyleEntry `protobuf:"bytes,2,rep,name=identifier_to_style_map" json:"identifier_to_style_map,omitempty"`
	Parent                   *TSP.Reference                            `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	IsLocked                 *bool                                     `protobuf:"varint,4,opt,name=is_locked,def=1" json:"is_locked,omitempty"`
	ParentToChildrenStyleMap []*StylesheetArchive_StyleChildrenEntry   `protobuf:"bytes,5,rep,name=parent_to_children_style_map" json:"parent_to_children_style_map,omitempty"`
	CanCullStyles            *bool                                     `protobuf:"varint,6,opt,name=can_cull_styles,def=0" json:"can_cull_styles,omitempty"`
	XXX_unrecognized         []byte                                    `json:"-"`
}

func (m *StylesheetArchive) Reset()         { *m = StylesheetArchive{} }
func (m *StylesheetArchive) String() string { return proto.CompactTextString(m) }
func (*StylesheetArchive) ProtoMessage()    {}

const Default_StylesheetArchive_IsLocked bool = true
const Default_StylesheetArchive_CanCullStyles bool = false

func (m *StylesheetArchive) GetStyles() []*TSP.Reference {
	if m != nil {
		return m.Styles
	}
	return nil
}

func (m *StylesheetArchive) GetIdentifierToStyleMap() []*StylesheetArchive_IdentifiedStyleEntry {
	if m != nil {
		return m.IdentifierToStyleMap
	}
	return nil
}

func (m *StylesheetArchive) GetParent() *TSP.Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *StylesheetArchive) GetIsLocked() bool {
	if m != nil && m.IsLocked != nil {
		return *m.IsLocked
	}
	return Default_StylesheetArchive_IsLocked
}

func (m *StylesheetArchive) GetParentToChildrenStyleMap() []*StylesheetArchive_StyleChildrenEntry {
	if m != nil {
		return m.ParentToChildrenStyleMap
	}
	return nil
}

func (m *StylesheetArchive) GetCanCullStyles() bool {
	if m != nil && m.CanCullStyles != nil {
		return *m.CanCullStyles
	}
	return Default_StylesheetArchive_CanCullStyles
}

type StylesheetArchive_IdentifiedStyleEntry struct {
	Identifier       *string        `protobuf:"bytes,1,req,name=identifier" json:"identifier,omitempty"`
	Style            *TSP.Reference `protobuf:"bytes,2,req,name=style" json:"style,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *StylesheetArchive_IdentifiedStyleEntry) Reset() {
	*m = StylesheetArchive_IdentifiedStyleEntry{}
}
func (m *StylesheetArchive_IdentifiedStyleEntry) String() string { return proto.CompactTextString(m) }
func (*StylesheetArchive_IdentifiedStyleEntry) ProtoMessage()    {}

func (m *StylesheetArchive_IdentifiedStyleEntry) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

func (m *StylesheetArchive_IdentifiedStyleEntry) GetStyle() *TSP.Reference {
	if m != nil {
		return m.Style
	}
	return nil
}

type StylesheetArchive_StyleChildrenEntry struct {
	Parent           *TSP.Reference   `protobuf:"bytes,1,req,name=parent" json:"parent,omitempty"`
	Children         []*TSP.Reference `protobuf:"bytes,2,rep,name=children" json:"children,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *StylesheetArchive_StyleChildrenEntry) Reset()         { *m = StylesheetArchive_StyleChildrenEntry{} }
func (m *StylesheetArchive_StyleChildrenEntry) String() string { return proto.CompactTextString(m) }
func (*StylesheetArchive_StyleChildrenEntry) ProtoMessage()    {}

func (m *StylesheetArchive_StyleChildrenEntry) GetParent() *TSP.Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *StylesheetArchive_StyleChildrenEntry) GetChildren() []*TSP.Reference {
	if m != nil {
		return m.Children
	}
	return nil
}

type ThemeArchive struct {
	Stylesheet       *TSP.Reference            `protobuf:"bytes,1,opt,name=stylesheet" json:"stylesheet,omitempty"`
	ThemeIdentifier  *string                   `protobuf:"bytes,3,opt,name=theme_identifier" json:"theme_identifier,omitempty"`
	ColorPresets     []*TSP.Color              `protobuf:"bytes,10,rep,name=color_presets" json:"color_presets,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ThemeArchive) Reset()         { *m = ThemeArchive{} }
func (m *ThemeArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeArchive) ProtoMessage()    {}

var extRange_ThemeArchive = []proto.ExtensionRange{
	{100, 536870911},
}

func (*ThemeArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ThemeArchive
}
func (m *ThemeArchive) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *ThemeArchive) GetStylesheet() *TSP.Reference {
	if m != nil {
		return m.Stylesheet
	}
	return nil
}

func (m *ThemeArchive) GetThemeIdentifier() string {
	if m != nil && m.ThemeIdentifier != nil {
		return *m.ThemeIdentifier
	}
	return ""
}

func (m *ThemeArchive) GetColorPresets() []*TSP.Color {
	if m != nil {
		return m.ColorPresets
	}
	return nil
}

type ApplyThemeCommandArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Commands         []*TSP.Reference    `protobuf:"bytes,2,rep,name=commands" json:"commands,omitempty"`
	OldTheme         *TSP.Reference      `protobuf:"bytes,3,opt,name=old_theme" json:"old_theme,omitempty"`
	NewTheme         *TSP.Reference      `protobuf:"bytes,4,opt,name=new_theme" json:"new_theme,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ApplyThemeCommandArchive) Reset()         { *m = ApplyThemeCommandArchive{} }
func (m *ApplyThemeCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ApplyThemeCommandArchive) ProtoMessage()    {}

func (m *ApplyThemeCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ApplyThemeCommandArchive) GetCommands() []*TSP.Reference {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *ApplyThemeCommandArchive) GetOldTheme() *TSP.Reference {
	if m != nil {
		return m.OldTheme
	}
	return nil
}

func (m *ApplyThemeCommandArchive) GetNewTheme() *TSP.Reference {
	if m != nil {
		return m.NewTheme
	}
	return nil
}

type ApplyThemeChildCommandArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Parent           *TSP.Reference      `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ApplyThemeChildCommandArchive) Reset()         { *m = ApplyThemeChildCommandArchive{} }
func (m *ApplyThemeChildCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ApplyThemeChildCommandArchive) ProtoMessage()    {}

func (m *ApplyThemeChildCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ApplyThemeChildCommandArchive) GetParent() *TSP.Reference {
	if m != nil {
		return m.Parent
	}
	return nil
}

type ReapUnusedStyleCommandArchive struct {
	Super            *TSK.CommandArchive                                   `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Stylesheet       *TSP.Reference                                        `protobuf:"bytes,2,opt,name=stylesheet" json:"stylesheet,omitempty"`
	Styles           []*TSP.Reference                                      `protobuf:"bytes,3,rep,name=styles" json:"styles,omitempty"`
	IdentifiedStyles []*ReapUnusedStyleCommandArchive_IdentifiedStyleEntry `protobuf:"bytes,4,rep,name=identified_styles" json:"identified_styles,omitempty"`
	XXX_unrecognized []byte                                                `json:"-"`
}

func (m *ReapUnusedStyleCommandArchive) Reset()         { *m = ReapUnusedStyleCommandArchive{} }
func (m *ReapUnusedStyleCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ReapUnusedStyleCommandArchive) ProtoMessage()    {}

func (m *ReapUnusedStyleCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ReapUnusedStyleCommandArchive) GetStylesheet() *TSP.Reference {
	if m != nil {
		return m.Stylesheet
	}
	return nil
}

func (m *ReapUnusedStyleCommandArchive) GetStyles() []*TSP.Reference {
	if m != nil {
		return m.Styles
	}
	return nil
}

func (m *ReapUnusedStyleCommandArchive) GetIdentifiedStyles() []*ReapUnusedStyleCommandArchive_IdentifiedStyleEntry {
	if m != nil {
		return m.IdentifiedStyles
	}
	return nil
}

type ReapUnusedStyleCommandArchive_IdentifiedStyleEntry struct {
	Identifier       *string        `protobuf:"bytes,1,req,name=identifier" json:"identifier,omitempty"`
	Style            *TSP.Reference `protobuf:"bytes,2,req,name=style" json:"style,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ReapUnusedStyleCommandArchive_IdentifiedStyleEntry) Reset() {
	*m = ReapUnusedStyleCommandArchive_IdentifiedStyleEntry{}
}
func (m *ReapUnusedStyleCommandArchive_IdentifiedStyleEntry) String() string {
	return proto.CompactTextString(m)
}
func (*ReapUnusedStyleCommandArchive_IdentifiedStyleEntry) ProtoMessage() {}

func (m *ReapUnusedStyleCommandArchive_IdentifiedStyleEntry) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

func (m *ReapUnusedStyleCommandArchive_IdentifiedStyleEntry) GetStyle() *TSP.Reference {
	if m != nil {
		return m.Style
	}
	return nil
}

type StyleUpdatePropertyMapCommandArchive struct {
	Super                   *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	CurrentStyle            *TSP.Reference      `protobuf:"bytes,2,req,name=current_style" json:"current_style,omitempty"`
	StyleWithOldPropertyMap *TSP.Reference      `protobuf:"bytes,3,req,name=style_with_old_property_map" json:"style_with_old_property_map,omitempty"`
	StyleWithNewPropertyMap *TSP.Reference      `protobuf:"bytes,4,req,name=style_with_new_property_map" json:"style_with_new_property_map,omitempty"`
	NotifyForStyleClients   *bool               `protobuf:"varint,6,opt,name=notify_for_style_clients,def=1" json:"notify_for_style_clients,omitempty"`
	XXX_unrecognized        []byte              `json:"-"`
}

func (m *StyleUpdatePropertyMapCommandArchive) Reset()         { *m = StyleUpdatePropertyMapCommandArchive{} }
func (m *StyleUpdatePropertyMapCommandArchive) String() string { return proto.CompactTextString(m) }
func (*StyleUpdatePropertyMapCommandArchive) ProtoMessage()    {}

const Default_StyleUpdatePropertyMapCommandArchive_NotifyForStyleClients bool = true

func (m *StyleUpdatePropertyMapCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *StyleUpdatePropertyMapCommandArchive) GetCurrentStyle() *TSP.Reference {
	if m != nil {
		return m.CurrentStyle
	}
	return nil
}

func (m *StyleUpdatePropertyMapCommandArchive) GetStyleWithOldPropertyMap() *TSP.Reference {
	if m != nil {
		return m.StyleWithOldPropertyMap
	}
	return nil
}

func (m *StyleUpdatePropertyMapCommandArchive) GetStyleWithNewPropertyMap() *TSP.Reference {
	if m != nil {
		return m.StyleWithNewPropertyMap
	}
	return nil
}

func (m *StyleUpdatePropertyMapCommandArchive) GetNotifyForStyleClients() bool {
	if m != nil && m.NotifyForStyleClients != nil {
		return *m.NotifyForStyleClients
	}
	return Default_StyleUpdatePropertyMapCommandArchive_NotifyForStyleClients
}

type ThemeReplacePresetCommandArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme            *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	Preset           *TSP.Reference      `protobuf:"bytes,3,req,name=preset" json:"preset,omitempty"`
	OldPreset        *TSP.Reference      `protobuf:"bytes,4,req,name=oldPreset" json:"oldPreset,omitempty"`
	Index            *uint32             `protobuf:"varint,5,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ThemeReplacePresetCommandArchive) Reset()         { *m = ThemeReplacePresetCommandArchive{} }
func (m *ThemeReplacePresetCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeReplacePresetCommandArchive) ProtoMessage()    {}

func (m *ThemeReplacePresetCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ThemeReplacePresetCommandArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *ThemeReplacePresetCommandArchive) GetPreset() *TSP.Reference {
	if m != nil {
		return m.Preset
	}
	return nil
}

func (m *ThemeReplacePresetCommandArchive) GetOldPreset() *TSP.Reference {
	if m != nil {
		return m.OldPreset
	}
	return nil
}

func (m *ThemeReplacePresetCommandArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type ThemeReplaceColorPresetCommandArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme            *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	Color            *TSP.Color          `protobuf:"bytes,3,req,name=color" json:"color,omitempty"`
	OldColor         *TSP.Color          `protobuf:"bytes,4,req,name=old_color" json:"old_color,omitempty"`
	Index            *uint32             `protobuf:"varint,5,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ThemeReplaceColorPresetCommandArchive) Reset()         { *m = ThemeReplaceColorPresetCommandArchive{} }
func (m *ThemeReplaceColorPresetCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeReplaceColorPresetCommandArchive) ProtoMessage()    {}

func (m *ThemeReplaceColorPresetCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ThemeReplaceColorPresetCommandArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *ThemeReplaceColorPresetCommandArchive) GetColor() *TSP.Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *ThemeReplaceColorPresetCommandArchive) GetOldColor() *TSP.Color {
	if m != nil {
		return m.OldColor
	}
	return nil
}

func (m *ThemeReplaceColorPresetCommandArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type ThemeAddStylePresetCommandArchive struct {
	Super                 *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme                 *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	Preset                *TSP.Reference      `protobuf:"bytes,3,req,name=preset" json:"preset,omitempty"`
	PresetKind            *string             `protobuf:"bytes,4,req,name=preset_kind" json:"preset_kind,omitempty"`
	Identifier            *string             `protobuf:"bytes,5,opt,name=identifier" json:"identifier,omitempty"`
	AddPresetToStylesheet *bool               `protobuf:"varint,6,opt,name=add_preset_to_stylesheet" json:"add_preset_to_stylesheet,omitempty"`
	XXX_unrecognized      []byte              `json:"-"`
}

func (m *ThemeAddStylePresetCommandArchive) Reset()         { *m = ThemeAddStylePresetCommandArchive{} }
func (m *ThemeAddStylePresetCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeAddStylePresetCommandArchive) ProtoMessage()    {}

func (m *ThemeAddStylePresetCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ThemeAddStylePresetCommandArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *ThemeAddStylePresetCommandArchive) GetPreset() *TSP.Reference {
	if m != nil {
		return m.Preset
	}
	return nil
}

func (m *ThemeAddStylePresetCommandArchive) GetPresetKind() string {
	if m != nil && m.PresetKind != nil {
		return *m.PresetKind
	}
	return ""
}

func (m *ThemeAddStylePresetCommandArchive) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

func (m *ThemeAddStylePresetCommandArchive) GetAddPresetToStylesheet() bool {
	if m != nil && m.AddPresetToStylesheet != nil {
		return *m.AddPresetToStylesheet
	}
	return false
}

type ThemeRemoveStylePresetCommandArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme            *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	Preset           *TSP.Reference      `protobuf:"bytes,3,req,name=preset" json:"preset,omitempty"`
	PresetIndex      *uint32             `protobuf:"varint,4,req,name=preset_index" json:"preset_index,omitempty"`
	PresetKind       *string             `protobuf:"bytes,5,req,name=preset_kind" json:"preset_kind,omitempty"`
	Identifier       *string             `protobuf:"bytes,6,opt,name=identifier" json:"identifier,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ThemeRemoveStylePresetCommandArchive) Reset()         { *m = ThemeRemoveStylePresetCommandArchive{} }
func (m *ThemeRemoveStylePresetCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeRemoveStylePresetCommandArchive) ProtoMessage()    {}

func (m *ThemeRemoveStylePresetCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ThemeRemoveStylePresetCommandArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *ThemeRemoveStylePresetCommandArchive) GetPreset() *TSP.Reference {
	if m != nil {
		return m.Preset
	}
	return nil
}

func (m *ThemeRemoveStylePresetCommandArchive) GetPresetIndex() uint32 {
	if m != nil && m.PresetIndex != nil {
		return *m.PresetIndex
	}
	return 0
}

func (m *ThemeRemoveStylePresetCommandArchive) GetPresetKind() string {
	if m != nil && m.PresetKind != nil {
		return *m.PresetKind
	}
	return ""
}

func (m *ThemeRemoveStylePresetCommandArchive) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

type ThemeMovePresetCommandArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme            *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	Preset           *TSP.Reference      `protobuf:"bytes,3,req,name=preset" json:"preset,omitempty"`
	NewIndex         *uint32             `protobuf:"varint,4,req,name=new_index" json:"new_index,omitempty"`
	OldIndex         *uint32             `protobuf:"varint,5,req,name=old_index" json:"old_index,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ThemeMovePresetCommandArchive) Reset()         { *m = ThemeMovePresetCommandArchive{} }
func (m *ThemeMovePresetCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeMovePresetCommandArchive) ProtoMessage()    {}

func (m *ThemeMovePresetCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ThemeMovePresetCommandArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *ThemeMovePresetCommandArchive) GetPreset() *TSP.Reference {
	if m != nil {
		return m.Preset
	}
	return nil
}

func (m *ThemeMovePresetCommandArchive) GetNewIndex() uint32 {
	if m != nil && m.NewIndex != nil {
		return *m.NewIndex
	}
	return 0
}

func (m *ThemeMovePresetCommandArchive) GetOldIndex() uint32 {
	if m != nil && m.OldIndex != nil {
		return *m.OldIndex
	}
	return 0
}

type ThemeReplaceStylePresetCommandArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Preset           *TSP.Reference      `protobuf:"bytes,3,req,name=preset" json:"preset,omitempty"`
	OldPreset        *TSP.Reference      `protobuf:"bytes,4,req,name=old_preset" json:"old_preset,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ThemeReplaceStylePresetCommandArchive) Reset()         { *m = ThemeReplaceStylePresetCommandArchive{} }
func (m *ThemeReplaceStylePresetCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeReplaceStylePresetCommandArchive) ProtoMessage()    {}

func (m *ThemeReplaceStylePresetCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ThemeReplaceStylePresetCommandArchive) GetPreset() *TSP.Reference {
	if m != nil {
		return m.Preset
	}
	return nil
}

func (m *ThemeReplaceStylePresetCommandArchive) GetOldPreset() *TSP.Reference {
	if m != nil {
		return m.OldPreset
	}
	return nil
}

func init() {
}
